ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoSetPwrBgTrim5,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysClkImoSetPwrBgTrim5, %function
  24              	CySysClkImoSetPwrBgTrim5:
  25              	.LFB9:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 2


  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 3


  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 4


 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 149:Generated_Source\PSoC4/CyLib.c **** }
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 5


 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 6


 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 7


 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 8


 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 9


 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
  27              		.loc 1 464 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
  32              		.loc 1 466 0
  33 0000 074B     		ldr	r3, .L4
  34 0002 1B78     		ldrb	r3, [r3]
  35              	.LVL0:
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
  36              		.loc 1 469 0
  37 0004 272B     		cmp	r3, #39
  38 0006 05D8     		bhi	.L2
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
  39              		.loc 1 471 0
  40 0008 064B     		ldr	r3, .L4+4
  41              	.LVL1:
  42 000a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 10


  43 000c DBB2     		uxtb	r3, r3
  44 000e 064A     		ldr	r2, .L4+8
  45 0010 1360     		str	r3, [r2]
  46 0012 04E0     		b	.L1
  47              	.LVL2:
  48              	.L2:
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
  49              		.loc 1 475 0
  50 0014 054B     		ldr	r3, .L4+12
  51              	.LVL3:
  52 0016 1B78     		ldrb	r3, [r3]
  53 0018 DBB2     		uxtb	r3, r3
  54 001a 034A     		ldr	r2, .L4+8
  55 001c 1360     		str	r3, [r2]
  56              	.L1:
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
  57              		.loc 1 477 0
  58              		@ sp needed
  59 001e 7047     		bx	lr
  60              	.L5:
  61              		.align	2
  62              	.L4:
  63 0020 02F3FF0F 		.word	268432130
  64 0024 42F3FF0F 		.word	268432194
  65 0028 20FF0B40 		.word	1074528032
  66 002c C1F1FF0F 		.word	268431809
  67              		.cfi_endproc
  68              	.LFE9:
  69              		.size	CySysClkImoSetPwrBgTrim5, .-CySysClkImoSetPwrBgTrim5
  70              		.section	.text.CySysClkImoSetImoTrims,"ax",%progbits
  71              		.align	2
  72              		.code	16
  73              		.thumb_func
  74              		.type	CySysClkImoSetImoTrims, %function
  75              	CySysClkImoSetImoTrims:
  76              	.LFB10:
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
  77              		.loc 1 488 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.LVL4:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 11


 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  83              		.loc 1 494 0
  84 0000 0023     		movs	r3, #0
  85 0002 0AE0     		b	.L7
  86              	.LVL5:
  87              	.L10:
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
  88              		.loc 1 496 0
  89 0004 204A     		ldr	r2, .L17
  90 0006 1268     		ldr	r2, [r2]
  91 0008 3F21     		movs	r1, #63
  92 000a 0A40     		ands	r2, r1
  93 000c 1F49     		ldr	r1, .L17+4
  94 000e C95C     		ldrb	r1, [r1, r3]
  95 0010 8A42     		cmp	r2, r1
  96 0012 01D1     		bne	.L8
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
  97              		.loc 1 498 0
  98 0014 0333     		adds	r3, r3, #3
  99              	.LVL6:
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 100              		.loc 1 499 0
 101 0016 03E0     		b	.L9
 102              	.LVL7:
 103              	.L8:
 494:Generated_Source\PSoC4/CyLib.c ****         {
 104              		.loc 1 494 0 discriminator 2
 105 0018 0133     		adds	r3, r3, #1
 106              	.LVL8:
 107              	.L7:
 494:Generated_Source\PSoC4/CyLib.c ****         {
 108              		.loc 1 494 0 is_stmt 0 discriminator 1
 109 001a 2D2B     		cmp	r3, #45
 110 001c F2D9     		bls	.L10
 492:Generated_Source\PSoC4/CyLib.c **** 
 111              		.loc 1 492 0 is_stmt 1
 112 001e 0323     		movs	r3, #3
 113              	.LVL9:
 114              	.L9:
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 115              		.loc 1 504 0
 116 0020 1B4A     		ldr	r2, .L17+8
 117 0022 1278     		ldrb	r2, [r2]
 118              	.LVL10:
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 12


 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 119              		.loc 1 507 0
 120 0024 1B2A     		cmp	r2, #27
 121 0026 16D8     		bhi	.L11
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 122              		.loc 1 509 0
 123 0028 302B     		cmp	r3, #48
 124 002a 05D1     		bne	.L12
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 125              		.loc 1 511 0
 126 002c 194B     		ldr	r3, .L17+12
 127              	.LVL11:
 128 002e 1B78     		ldrb	r3, [r3]
 129 0030 DBB2     		uxtb	r3, r3
 130 0032 194A     		ldr	r2, .L17+16
 131              	.LVL12:
 132 0034 1360     		str	r3, [r2]
 133 0036 06E0     		b	.L13
 134              	.LVL13:
 135              	.L12:
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 136              		.loc 1 513 0
 137 0038 182B     		cmp	r3, #24
 138 003a 04D1     		bne	.L13
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 139              		.loc 1 515 0
 140 003c 174B     		ldr	r3, .L17+20
 141              	.LVL14:
 142 003e 1B78     		ldrb	r3, [r3]
 143 0040 DBB2     		uxtb	r3, r3
 144 0042 154A     		ldr	r2, .L17+16
 145              	.LVL15:
 146 0044 1360     		str	r3, [r2]
 147              	.L13:
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 148              		.loc 1 523 0
 149 0046 1649     		ldr	r1, .L17+24
 150 0048 0B68     		ldr	r3, [r1]
 151 004a 1F22     		movs	r2, #31
 152 004c 9343     		bics	r3, r2
 153 004e 173A     		subs	r2, r2, #23
 154 0050 1343     		orrs	r3, r2
 155 0052 0B60     		str	r3, [r1]
 156 0054 16E0     		b	.L6
 157              	.LVL16:
 158              	.L11:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 13


 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 159              		.loc 1 528 0
 160 0056 302B     		cmp	r3, #48
 161 0058 05D1     		bne	.L15
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 162              		.loc 1 530 0
 163 005a 124B     		ldr	r3, .L17+28
 164              	.LVL17:
 165 005c 1B78     		ldrb	r3, [r3]
 166 005e DBB2     		uxtb	r3, r3
 167 0060 0D4A     		ldr	r2, .L17+16
 168              	.LVL18:
 169 0062 1360     		str	r3, [r2]
 170 0064 06E0     		b	.L16
 171              	.LVL19:
 172              	.L15:
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 173              		.loc 1 532 0
 174 0066 182B     		cmp	r3, #24
 175 0068 04D1     		bne	.L16
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 176              		.loc 1 534 0
 177 006a 0F4B     		ldr	r3, .L17+32
 178              	.LVL20:
 179 006c 1B78     		ldrb	r3, [r3]
 180 006e DBB2     		uxtb	r3, r3
 181 0070 094A     		ldr	r2, .L17+16
 182              	.LVL21:
 183 0072 1360     		str	r3, [r2]
 184              	.L16:
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 185              		.loc 1 542 0
 186 0074 0A4A     		ldr	r2, .L17+24
 187 0076 1368     		ldr	r3, [r2]
 188 0078 1F21     		movs	r1, #31
 189 007a 8B43     		bics	r3, r1
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 190              		.loc 1 543 0
 191 007c 0B49     		ldr	r1, .L17+36
 192 007e 0978     		ldrb	r1, [r1]
 542:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 193              		.loc 1 542 0
 194 0080 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 14


 195 0082 1360     		str	r3, [r2]
 196              	.L6:
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 197              		.loc 1 545 0
 198              		@ sp needed
 199 0084 7047     		bx	lr
 200              	.L18:
 201 0086 C046     		.align	2
 202              	.L17:
 203 0088 2CFF0B40 		.word	1074528044
 204 008c 00000000 		.word	.LANCHOR0
 205 0090 02F3FF0F 		.word	268432130
 206 0094 3FF3FF0F 		.word	268432191
 207 0098 28FF0B40 		.word	1074528040
 208 009c 3EF3FF0F 		.word	268432190
 209 00a0 34FF0B40 		.word	1074528052
 210 00a4 C3F1FF0F 		.word	268431811
 211 00a8 C2F1FF0F 		.word	268431810
 212 00ac C0F1FF0F 		.word	268431808
 213              		.cfi_endproc
 214              	.LFE10:
 215              		.size	CySysClkImoSetImoTrims, .-CySysClkImoSetImoTrims
 216              		.section	.text.CySysClkImoStart,"ax",%progbits
 217              		.align	2
 218              		.global	CySysClkImoStart
 219              		.code	16
 220              		.thumb_func
 221              		.type	CySysClkImoStart, %function
 222              	CySysClkImoStart:
 223              	.LFB1:
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 224              		.loc 1 106 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c **** 
 229              		.loc 1 107 0
 230 0000 034A     		ldr	r2, .L20
 231 0002 1368     		ldr	r3, [r2]
 232 0004 8021     		movs	r1, #128
 233 0006 0906     		lsls	r1, r1, #24
 234 0008 0B43     		orrs	r3, r1
 235 000a 1360     		str	r3, [r2]
 122:Generated_Source\PSoC4/CyLib.c **** 
 236              		.loc 1 122 0
 237              		@ sp needed
 238 000c 7047     		bx	lr
 239              	.L21:
 240 000e C046     		.align	2
 241              	.L20:
 242 0010 08010B40 		.word	1074462984
 243              		.cfi_endproc
 244              	.LFE1:
 245              		.size	CySysClkImoStart, .-CySysClkImoStart
 246              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 15


 247              		.align	2
 248              		.global	CySysClkImoDisableWcoLock
 249              		.code	16
 250              		.thumb_func
 251              		.type	CySysClkImoDisableWcoLock, %function
 252              	CySysClkImoDisableWcoLock:
 253              	.LFB4:
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 254              		.loc 1 284 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL22:
 294:Generated_Source\PSoC4/CyLib.c ****             {
 260              		.loc 1 294 0
 261 0000 0023     		movs	r3, #0
 262 0002 0AE0     		b	.L23
 263              	.LVL23:
 264              	.L26:
 296:Generated_Source\PSoC4/CyLib.c ****                 {
 265              		.loc 1 296 0
 266 0004 0D4A     		ldr	r2, .L27
 267 0006 1268     		ldr	r2, [r2]
 268 0008 3F21     		movs	r1, #63
 269 000a 0A40     		ands	r2, r1
 270 000c 0C49     		ldr	r1, .L27+4
 271 000e C95C     		ldrb	r1, [r1, r3]
 272 0010 8A42     		cmp	r2, r1
 273 0012 01D1     		bne	.L24
 298:Generated_Source\PSoC4/CyLib.c ****                     break;
 274              		.loc 1 298 0
 275 0014 0333     		adds	r3, r3, #3
 276              	.LVL24:
 299:Generated_Source\PSoC4/CyLib.c ****                 }
 277              		.loc 1 299 0
 278 0016 03E0     		b	.L25
 279              	.LVL25:
 280              	.L24:
 294:Generated_Source\PSoC4/CyLib.c ****             {
 281              		.loc 1 294 0 discriminator 2
 282 0018 0133     		adds	r3, r3, #1
 283              	.LVL26:
 284              	.L23:
 294:Generated_Source\PSoC4/CyLib.c ****             {
 285              		.loc 1 294 0 is_stmt 0 discriminator 1
 286 001a 2D2B     		cmp	r3, #45
 287 001c F2D9     		bls	.L26
 293:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 288              		.loc 1 293 0 is_stmt 1
 289 001e 0323     		movs	r3, #3
 290              	.LVL27:
 291              	.L25:
 316:Generated_Source\PSoC4/CyLib.c **** 
 292              		.loc 1 316 0
 293 0020 0849     		ldr	r1, .L27+8
 294 0022 0868     		ldr	r0, [r1]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 16


 295 0024 084A     		ldr	r2, .L27+12
 296 0026 0240     		ands	r2, r0
 297 0028 0A60     		str	r2, [r1]
 321:Generated_Source\PSoC4/CyLib.c ****         #endif
 298              		.loc 1 321 0
 299 002a 084A     		ldr	r2, .L27+16
 300 002c 9446     		mov	ip, r2
 301 002e 6344     		add	r3, r3, ip
 302              	.LVL28:
 303 0030 1B78     		ldrb	r3, [r3]
 304              	.LVL29:
 305 0032 DBB2     		uxtb	r3, r3
 306 0034 064A     		ldr	r2, .L27+20
 307 0036 1360     		str	r3, [r2]
 323:Generated_Source\PSoC4/CyLib.c **** 
 308              		.loc 1 323 0
 309              		@ sp needed
 310 0038 7047     		bx	lr
 311              	.L28:
 312 003a C046     		.align	2
 313              	.L27:
 314 003c 2CFF0B40 		.word	1074528044
 315 0040 00000000 		.word	.LANCHOR0
 316 0044 00002240 		.word	1075970048
 317 0048 FFFFFFBF 		.word	-1073741825
 318 004c 4DF3FF0F 		.word	268432205
 319 0050 28FF0B40 		.word	1074528040
 320              		.cfi_endproc
 321              	.LFE4:
 322              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 323              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 324              		.align	2
 325              		.global	CySysClkImoGetWcoLock
 326              		.code	16
 327              		.thumb_func
 328              		.type	CySysClkImoGetWcoLock, %function
 329              	CySysClkImoGetWcoLock:
 330              	.LFB5:
 340:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 331              		.loc 1 340 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 341:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 336              		.loc 1 341 0
 337 0000 034B     		ldr	r3, .L31
 338 0002 1868     		ldr	r0, [r3]
 339 0004 8023     		movs	r3, #128
 340 0006 DB05     		lsls	r3, r3, #23
 341 0008 1840     		ands	r0, r3
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 342              		.loc 1 342 0
 343 000a 00D0     		beq	.L30
 344 000c 0120     		movs	r0, #1
 345              	.L30:
 344:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 17


 346              		.loc 1 344 0
 347              		@ sp needed
 348 000e 7047     		bx	lr
 349              	.L32:
 350              		.align	2
 351              	.L31:
 352 0010 00002240 		.word	1075970048
 353              		.cfi_endproc
 354              	.LFE5:
 355              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 356              		.section	.text.CySysClkImoEnableUsbLock,"ax",%progbits
 357              		.align	2
 358              		.global	CySysClkImoEnableUsbLock
 359              		.code	16
 360              		.thumb_func
 361              		.type	CySysClkImoEnableUsbLock, %function
 362              	CySysClkImoEnableUsbLock:
 363              	.LFB6:
 367:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 364              		.loc 1 367 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 10B5     		push	{r4, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
 370:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372              		.loc 1 370 0
 373 0002 0B4A     		ldr	r2, .L34
 374 0004 1368     		ldr	r3, [r2]
 375 0006 0121     		movs	r1, #1
 376 0008 8B43     		bics	r3, r1
 377 000a 1360     		str	r3, [r2]
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 378              		.loc 1 377 0
 379 000c 094B     		ldr	r3, .L34+4
 380 000e 1A68     		ldr	r2, [r3]
 381 0010 094B     		ldr	r3, .L34+8
 382 0012 1A60     		str	r2, [r3]
 378:Generated_Source\PSoC4/CyLib.c **** 
 383              		.loc 1 378 0
 384 0014 094A     		ldr	r2, .L34+12
 385 0016 1268     		ldr	r2, [r2]
 386 0018 5A60     		str	r2, [r3, #4]
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 387              		.loc 1 380 0
 388 001a FFF7FEFF 		bl	CySysClkImoSetImoTrims
 389              	.LVL30:
 381:Generated_Source\PSoC4/CyLib.c **** 
 390              		.loc 1 381 0
 391 001e FFF7FEFF 		bl	CySysClkImoSetPwrBgTrim5
 392              	.LVL31:
 385:Generated_Source\PSoC4/CyLib.c ****     }
 393              		.loc 1 385 0
 394 0022 074A     		ldr	r2, .L34+16
 395 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 18


 396 0026 0223     		movs	r3, #2
 397 0028 0B43     		orrs	r3, r1
 398 002a 1360     		str	r3, [r2]
 386:Generated_Source\PSoC4/CyLib.c **** 
 399              		.loc 1 386 0
 400              		@ sp needed
 401 002c 10BD     		pop	{r4, pc}
 402              	.L35:
 403 002e C046     		.align	2
 404              	.L34:
 405 0030 50000C40 		.word	1074528336
 406 0034 34FF0B40 		.word	1074528052
 407 0038 00000000 		.word	.LANCHOR1
 408 003c 20FF0B40 		.word	1074528032
 409 0040 24002C40 		.word	1076625444
 410              		.cfi_endproc
 411              	.LFE6:
 412              		.size	CySysClkImoEnableUsbLock, .-CySysClkImoEnableUsbLock
 413              		.section	.text.CySysClkImoDisableUsbLock,"ax",%progbits
 414              		.align	2
 415              		.global	CySysClkImoDisableUsbLock
 416              		.code	16
 417              		.thumb_func
 418              		.type	CySysClkImoDisableUsbLock, %function
 419              	CySysClkImoDisableUsbLock:
 420              	.LFB7:
 403:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 421              		.loc 1 403 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 30B5     		push	{r4, r5, lr}
 426              		.cfi_def_cfa_offset 12
 427              		.cfi_offset 4, -12
 428              		.cfi_offset 5, -8
 429              		.cfi_offset 14, -4
 430              	.LVL32:
 410:Generated_Source\PSoC4/CyLib.c ****             {
 431              		.loc 1 410 0
 432 0002 0023     		movs	r3, #0
 433 0004 0AE0     		b	.L37
 434              	.LVL33:
 435              	.L40:
 412:Generated_Source\PSoC4/CyLib.c ****                 {
 436              		.loc 1 412 0
 437 0006 134A     		ldr	r2, .L41
 438 0008 1268     		ldr	r2, [r2]
 439 000a 3F21     		movs	r1, #63
 440 000c 0A40     		ands	r2, r1
 441 000e 1249     		ldr	r1, .L41+4
 442 0010 C95C     		ldrb	r1, [r1, r3]
 443 0012 8A42     		cmp	r2, r1
 444 0014 01D1     		bne	.L38
 414:Generated_Source\PSoC4/CyLib.c ****                     break;
 445              		.loc 1 414 0
 446 0016 0333     		adds	r3, r3, #3
 447              	.LVL34:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 19


 415:Generated_Source\PSoC4/CyLib.c ****                 }
 448              		.loc 1 415 0
 449 0018 03E0     		b	.L39
 450              	.LVL35:
 451              	.L38:
 410:Generated_Source\PSoC4/CyLib.c ****             {
 452              		.loc 1 410 0 discriminator 2
 453 001a 0133     		adds	r3, r3, #1
 454              	.LVL36:
 455              	.L37:
 410:Generated_Source\PSoC4/CyLib.c ****             {
 456              		.loc 1 410 0 is_stmt 0 discriminator 1
 457 001c 2D2B     		cmp	r3, #45
 458 001e F2D9     		bls	.L40
 408:Generated_Source\PSoC4/CyLib.c **** 
 459              		.loc 1 408 0 is_stmt 1
 460 0020 0323     		movs	r3, #3
 461              	.LVL37:
 462              	.L39:
 420:Generated_Source\PSoC4/CyLib.c **** 
 463              		.loc 1 420 0
 464 0022 0E49     		ldr	r1, .L41+8
 465 0024 0A68     		ldr	r2, [r1]
 466 0026 0220     		movs	r0, #2
 467 0028 8243     		bics	r2, r0
 468 002a 0A60     		str	r2, [r1]
 424:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 469              		.loc 1 424 0
 470 002c 0C4C     		ldr	r4, .L41+12
 471 002e 2168     		ldr	r1, [r4]
 472 0030 1F22     		movs	r2, #31
 473 0032 9143     		bics	r1, r2
 425:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 474              		.loc 1 425 0
 475 0034 0B48     		ldr	r0, .L41+16
 476 0036 0568     		ldr	r5, [r0]
 477 0038 2A40     		ands	r2, r5
 424:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 478              		.loc 1 424 0
 479 003a 0A43     		orrs	r2, r1
 480 003c 2260     		str	r2, [r4]
 426:Generated_Source\PSoC4/CyLib.c **** 
 481              		.loc 1 426 0
 482 003e 4168     		ldr	r1, [r0, #4]
 483 0040 094A     		ldr	r2, .L41+20
 484 0042 1160     		str	r1, [r2]
 428:Generated_Source\PSoC4/CyLib.c **** 
 485              		.loc 1 428 0
 486 0044 094A     		ldr	r2, .L41+24
 487 0046 9446     		mov	ip, r2
 488 0048 6344     		add	r3, r3, ip
 489              	.LVL38:
 490 004a 1B78     		ldrb	r3, [r3]
 491              	.LVL39:
 492 004c DBB2     		uxtb	r3, r3
 493 004e 084A     		ldr	r2, .L41+28
 494 0050 1360     		str	r3, [r2]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 20


 431:Generated_Source\PSoC4/CyLib.c **** 
 495              		.loc 1 431 0
 496              		@ sp needed
 497 0052 30BD     		pop	{r4, r5, pc}
 498              	.L42:
 499              		.align	2
 500              	.L41:
 501 0054 2CFF0B40 		.word	1074528044
 502 0058 00000000 		.word	.LANCHOR0
 503 005c 24002C40 		.word	1076625444
 504 0060 34FF0B40 		.word	1074528052
 505 0064 00000000 		.word	.LANCHOR1
 506 0068 20FF0B40 		.word	1074528032
 507 006c 4DF3FF0F 		.word	268432205
 508 0070 28FF0B40 		.word	1074528040
 509              		.cfi_endproc
 510              	.LFE7:
 511              		.size	CySysClkImoDisableUsbLock, .-CySysClkImoDisableUsbLock
 512              		.section	.text.CySysClkImoStop,"ax",%progbits
 513              		.align	2
 514              		.global	CySysClkImoStop
 515              		.code	16
 516              		.thumb_func
 517              		.type	CySysClkImoStop, %function
 518              	CySysClkImoStop:
 519              	.LFB2:
 139:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 520              		.loc 1 139 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524 0000 10B5     		push	{r4, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 4, -8
 527              		.cfi_offset 14, -4
 141:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 528              		.loc 1 141 0
 529 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 530              	.LVL40:
 145:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 531              		.loc 1 145 0
 532 0006 FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 533              	.LVL41:
 148:Generated_Source\PSoC4/CyLib.c **** }
 534              		.loc 1 148 0
 535 000a 034A     		ldr	r2, .L44
 536 000c 1368     		ldr	r3, [r2]
 537 000e 5B00     		lsls	r3, r3, #1
 538 0010 5B08     		lsrs	r3, r3, #1
 539 0012 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** 
 540              		.loc 1 149 0
 541              		@ sp needed
 542 0014 10BD     		pop	{r4, pc}
 543              	.L45:
 544 0016 C046     		.align	2
 545              	.L44:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 21


 546 0018 08010B40 		.word	1074462984
 547              		.cfi_endproc
 548              	.LFE2:
 549              		.size	CySysClkImoStop, .-CySysClkImoStop
 550              		.section	.text.CySysClkImoGetUsbLock,"ax",%progbits
 551              		.align	2
 552              		.global	CySysClkImoGetUsbLock
 553              		.code	16
 554              		.thumb_func
 555              		.type	CySysClkImoGetUsbLock, %function
 556              	CySysClkImoGetUsbLock:
 557              	.LFB8:
 448:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 558              		.loc 1 448 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 449:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 563              		.loc 1 449 0
 564 0000 034B     		ldr	r3, .L48
 565 0002 1B68     		ldr	r3, [r3]
 566 0004 0220     		movs	r0, #2
 567 0006 1840     		ands	r0, r3
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 568              		.loc 1 450 0
 569 0008 00D0     		beq	.L47
 570 000a 0120     		movs	r0, #1
 571              	.L47:
 452:Generated_Source\PSoC4/CyLib.c **** 
 572              		.loc 1 452 0
 573              		@ sp needed
 574 000c 7047     		bx	lr
 575              	.L49:
 576 000e C046     		.align	2
 577              	.L48:
 578 0010 24002C40 		.word	1076625444
 579              		.cfi_endproc
 580              	.LFE8:
 581              		.size	CySysClkImoGetUsbLock, .-CySysClkImoGetUsbLock
 582              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 583              		.align	2
 584              		.global	CySysClkWriteHfclkDirect
 585              		.code	16
 586              		.thumb_func
 587              		.type	CySysClkWriteHfclkDirect, %function
 588              	CySysClkWriteHfclkDirect:
 589              	.LFB11:
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 22


 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
 590              		.loc 1 585 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              	.LVL42:
 595 0000 10B5     		push	{r4, lr}
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 4, -8
 598              		.cfi_offset 14, -4
 599 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 600              		.loc 1 593 0
 601 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 602              	.LVL43:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 23


 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 603              		.loc 1 625 0
 604 0008 0C4B     		ldr	r3, .L54
 605 000a 1A68     		ldr	r2, [r3]
 606 000c 0C4B     		ldr	r3, .L54+4
 607 000e 1340     		ands	r3, r2
 608              	.LVL44:
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 609              		.loc 1 629 0
 610 0010 8022     		movs	r2, #128
 611 0012 9202     		lsls	r2, r2, #10
 612 0014 9442     		cmp	r4, r2
 613 0016 03D0     		beq	.L51
 614              		.loc 1 629 0 is_stmt 0 discriminator 1
 615 0018 8022     		movs	r2, #128
 616 001a 5202     		lsls	r2, r2, #9
 617 001c 9442     		cmp	r4, r2
 618 001e 04D1     		bne	.L52
 619              	.L51:
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 620              		.loc 1 631 0 is_stmt 1
 621 0020 C022     		movs	r2, #192
 622 0022 9202     		lsls	r2, r2, #10
 623 0024 1440     		ands	r4, r2
 624              	.LVL45:
 625 0026 2343     		orrs	r3, r4
 626              	.LVL46:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 24


 627 0028 02E0     		b	.L53
 628              	.LVL47:
 629              	.L52:
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 630              		.loc 1 636 0
 631 002a 0722     		movs	r2, #7
 632 002c 1440     		ands	r4, r2
 633              	.LVL48:
 634 002e 2343     		orrs	r3, r4
 635              	.LVL49:
 636              	.L53:
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 637              		.loc 1 639 0
 638 0030 024A     		ldr	r2, .L54
 639 0032 1360     		str	r3, [r2]
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 640              		.loc 1 641 0
 641 0034 FFF7FEFF 		bl	CyExitCriticalSection
 642              	.LVL50:
 642:Generated_Source\PSoC4/CyLib.c **** }
 643              		.loc 1 642 0
 644              		@ sp needed
 645 0038 10BD     		pop	{r4, pc}
 646              	.L55:
 647 003a C046     		.align	2
 648              	.L54:
 649 003c 00010B40 		.word	1074462976
 650 0040 F8FFFCFF 		.word	-196616
 651              		.cfi_endproc
 652              	.LFE11:
 653              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 654              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 655              		.align	2
 656              		.global	CySysEnablePumpClock
 657              		.code	16
 658              		.thumb_func
 659              		.type	CySysEnablePumpClock, %function
 660              	CySysEnablePumpClock:
 661              	.LFB12:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 25


 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 662              		.loc 1 662 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL51:
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 668              		.loc 1 664 0
 669 0000 C307     		lsls	r3, r0, #31
 670 0002 07D5     		bpl	.L57
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 671              		.loc 1 666 0
 672 0004 094A     		ldr	r2, .L59
 673 0006 1168     		ldr	r1, [r2]
 674 0008 094B     		ldr	r3, .L59+4
 675 000a 1B68     		ldr	r3, [r3]
 676 000c 5B06     		lsls	r3, r3, #25
 677 000e 0B43     		orrs	r3, r1
 678 0010 1360     		str	r3, [r2]
 679 0012 0AE0     		b	.L56
 680              	.L57:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 681              		.loc 1 670 0
 682 0014 054A     		ldr	r2, .L59
 683 0016 1368     		ldr	r3, [r2]
 684 0018 5B0E     		lsrs	r3, r3, #25
 685 001a 0721     		movs	r1, #7
 686 001c 0B40     		ands	r3, r1
 687 001e 0449     		ldr	r1, .L59+4
 688 0020 0B60     		str	r3, [r1]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 689              		.loc 1 672 0
 690 0022 1168     		ldr	r1, [r2]
 691 0024 034B     		ldr	r3, .L59+8
 692 0026 0B40     		ands	r3, r1
 693 0028 1360     		str	r3, [r2]
 694              	.L56:
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 26


 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 695              		.loc 1 686 0
 696              		@ sp needed
 697 002a 7047     		bx	lr
 698              	.L60:
 699              		.align	2
 700              	.L59:
 701 002c 08010B40 		.word	1074462984
 702 0030 00000000 		.word	.LANCHOR2
 703 0034 FFFFFFF1 		.word	-234881025
 704              		.cfi_endproc
 705              	.LFE12:
 706              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 707              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 708              		.align	2
 709              		.global	CySysClkGetSysclkSource
 710              		.code	16
 711              		.thumb_func
 712              		.type	CySysClkGetSysclkSource, %function
 713              	CySysClkGetSysclkSource:
 714              	.LFB13:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 715              		.loc 1 699 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719 0000 10B5     		push	{r4, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 4, -8
 722              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 723              		.loc 1 703 0
 724 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 725              	.LVL52:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 27


 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 726              		.loc 1 706 0
 727 0006 0A4B     		ldr	r3, .L64
 728 0008 1A68     		ldr	r2, [r3]
 729 000a C023     		movs	r3, #192
 730 000c 9B02     		lsls	r3, r3, #10
 731 000e 1A42     		tst	r2, r3
 732 0010 05D0     		beq	.L62
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 733              		.loc 1 708 0
 734 0012 074B     		ldr	r3, .L64
 735 0014 1C68     		ldr	r4, [r3]
 736 0016 C023     		movs	r3, #192
 737 0018 9B02     		lsls	r3, r3, #10
 738 001a 1C40     		ands	r4, r3
 739              	.LVL53:
 740 001c 03E0     		b	.L63
 741              	.LVL54:
 742              	.L62:
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 743              		.loc 1 713 0
 744 001e 044B     		ldr	r3, .L64
 745 0020 1B68     		ldr	r3, [r3]
 746 0022 0724     		movs	r4, #7
 747 0024 1C40     		ands	r4, r3
 748              	.LVL55:
 749              	.L63:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 750              		.loc 1 722 0
 751 0026 FFF7FEFF 		bl	CyExitCriticalSection
 752              	.LVL56:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 753              		.loc 1 725 0
 754 002a 2000     		movs	r0, r4
 755              		@ sp needed
 756              	.LVL57:
 757 002c 10BD     		pop	{r4, pc}
 758              	.L65:
 759 002e C046     		.align	2
 760              	.L64:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 28


 761 0030 00010B40 		.word	1074462976
 762              		.cfi_endproc
 763              	.LFE13:
 764              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 765              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 766              		.align	2
 767              		.global	CySysClkWriteSysclkDiv
 768              		.code	16
 769              		.thumb_func
 770              		.type	CySysClkWriteSysclkDiv, %function
 771              	CySysClkWriteSysclkDiv:
 772              	.LFB14:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 773              		.loc 1 760 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL58:
 778 0000 10B5     		push	{r4, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 4, -8
 781              		.cfi_offset 14, -4
 782 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 29


 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 783              		.loc 1 763 0
 784 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 785              	.LVL59:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 786              		.loc 1 765 0
 787 0008 E304     		lsls	r3, r4, #19
 788 000a E022     		movs	r2, #224
 789 000c 9203     		lsls	r2, r2, #14
 790 000e 1340     		ands	r3, r2
 791 0010 1900     		movs	r1, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 792              		.loc 1 767 0
 793 0012 054C     		ldr	r4, .L67
 794              	.LVL60:
 795 0014 2368     		ldr	r3, [r4]
 796 0016 054A     		ldr	r2, .L67+4
 797 0018 1A40     		ands	r2, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 798              		.loc 1 766 0
 799 001a 0B00     		movs	r3, r1
 800 001c 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 801              		.loc 1 765 0
 802 001e 2360     		str	r3, [r4]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 803              		.loc 1 770 0
 804 0020 FFF7FEFF 		bl	CyExitCriticalSection
 805              	.LVL61:
 771:Generated_Source\PSoC4/CyLib.c **** }
 806              		.loc 1 771 0
 807              		@ sp needed
 808 0024 10BD     		pop	{r4, pc}
 809              	.L68:
 810 0026 C046     		.align	2
 811              	.L67:
 812 0028 00010B40 		.word	1074462976
 813 002c FFFFC7FF 		.word	-3670017
 814              		.cfi_endproc
 815              	.LFE14:
 816              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 817              		.section	.text.CySysClkEcoStop,"ax",%progbits
 818              		.align	2
 819              		.global	CySysClkEcoStop
 820              		.code	16
 821              		.thumb_func
 822              		.type	CySysClkEcoStop, %function
 823              	CySysClkEcoStop:
 824              	.LFB17:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 30


 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 31


 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 32


 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 33


 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 34


1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 35


1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 36


1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 37


1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 38


1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 39


1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 40


1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
 825              		.loc 1 1347 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
 830              		.loc 1 1357 0
 831 0000 024A     		ldr	r2, .L70
 832 0002 1168     		ldr	r1, [r2]
 833 0004 024B     		ldr	r3, .L70+4
 834 0006 0B40     		ands	r3, r1
 835 0008 1360     		str	r3, [r2]
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
 836              		.loc 1 1359 0
 837              		@ sp needed
 838 000a 7047     		bx	lr
 839              	.L71:
 840              		.align	2
 841              	.L70:
 842 000c 08000C40 		.word	1074528264
 843 0010 FEFFFF7F 		.word	2147483646
 844              		.cfi_endproc
 845              	.LFE17:
 846              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 847              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 848              		.align	2
 849              		.global	CySysClkEcoReadStatus
 850              		.code	16
 851              		.thumb_func
 852              		.type	CySysClkEcoReadStatus, %function
 853              	CySysClkEcoReadStatus:
 854              	.LFB18:
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 41


1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
 855              		.loc 1 1382 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
 860              		.loc 1 1395 0
 861 0000 034B     		ldr	r3, .L73
 862 0002 1B68     		ldr	r3, [r3]
 863 0004 0120     		movs	r0, #1
 864 0006 1840     		ands	r0, r3
 865 0008 4342     		rsbs	r3, r0, #0
 866 000a 5841     		adcs	r0, r0, r3
 867 000c C0B2     		uxtb	r0, r0
 868              	.LVL62:
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
 869              		.loc 1 1399 0
 870              		@ sp needed
 871 000e 7047     		bx	lr
 872              	.L74:
 873              		.align	2
 874              	.L73:
 875 0010 0C000C40 		.word	1074528268
 876              		.cfi_endproc
 877              	.LFE18:
 878              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 879              		.section	.text.CySysClkConfigureEcoTrim,"ax",%progbits
 880              		.align	2
 881              		.global	CySysClkConfigureEcoTrim
 882              		.code	16
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 42


 883              		.thumb_func
 884              		.type	CySysClkConfigureEcoTrim, %function
 885              	CySysClkConfigureEcoTrim:
 886              	.LFB19:
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 43


1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 44


1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
 887              		.loc 1 1518 0
 888              		.cfi_startproc
 889              		@ args = 4, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              	.LVL63:
 892 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 893              		.cfi_def_cfa_offset 20
 894              		.cfi_offset 4, -20
 895              		.cfi_offset 5, -16
 896              		.cfi_offset 6, -12
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 4746     		mov	r7, r8
 900 0004 80B4     		push	{r7}
 901              		.cfi_def_cfa_offset 24
 902              		.cfi_offset 8, -24
 903 0006 0700     		movs	r7, r0
 904 0008 0D00     		movs	r5, r1
 905 000a 1600     		movs	r6, r2
 906 000c 9846     		mov	r8, r3
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 907              		.loc 1 1522 0
 908 000e FFF7FEFF 		bl	CyEnterCriticalSection
 909              	.LVL64:
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
 910              		.loc 1 1524 0
 911 0012 114A     		ldr	r2, .L76
 912 0014 1368     		ldr	r3, [r2]
 913 0016 1F21     		movs	r1, #31
 914 0018 8B43     		bics	r3, r1
 915              	.LVL65:
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
 916              		.loc 1 1525 0
 917 001a 0324     		movs	r4, #3
 918 001c 2740     		ands	r7, r4
 919              	.LVL66:
 920 001e 1F43     		orrs	r7, r3
 921              	.LVL67:
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
 922              		.loc 1 1526 0
 923 0020 A900     		lsls	r1, r5, #2
 924 0022 1C25     		movs	r5, #28
 925              	.LVL68:
 926 0024 0D40     		ands	r5, r1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 45


 927 0026 3D43     		orrs	r5, r7
 928              	.LVL69:
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
 929              		.loc 1 1527 0
 930 0028 1560     		str	r5, [r2]
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
 931              		.loc 1 1529 0
 932 002a 0C4A     		ldr	r2, .L76+4
 933 002c 1368     		ldr	r3, [r2]
 934 002e 3F21     		movs	r1, #63
 935 0030 8B43     		bics	r3, r1
 936              	.LVL70:
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 937              		.loc 1 1532 0
 938 0032 2640     		ands	r6, r4
 939              	.LVL71:
 940 0034 3343     		orrs	r3, r6
 941              	.LVL72:
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 942              		.loc 1 1533 0
 943 0036 4146     		mov	r1, r8
 944 0038 8900     		lsls	r1, r1, #2
 945 003a 0934     		adds	r4, r4, #9
 946 003c 0C40     		ands	r4, r1
 947 003e 1C43     		orrs	r4, r3
 948              	.LVL73:
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 949              		.loc 1 1534 0
 950 0040 069B     		ldr	r3, [sp, #24]
 951 0042 1901     		lsls	r1, r3, #4
 952 0044 3023     		movs	r3, #48
 953 0046 1940     		ands	r1, r3
 954 0048 2300     		movs	r3, r4
 955 004a 0B43     		orrs	r3, r1
 956              	.LVL74:
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
 957              		.loc 1 1536 0
 958 004c 1360     		str	r3, [r2]
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 959              		.loc 1 1538 0
 960 004e FFF7FEFF 		bl	CyExitCriticalSection
 961              	.LVL75:
1539:Generated_Source\PSoC4/CyLib.c ****         }
 962              		.loc 1 1539 0
 963              		@ sp needed
 964              	.LVL76:
 965 0052 04BC     		pop	{r2}
 966 0054 9046     		mov	r8, r2
 967 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 968              	.L77:
 969              		.align	2
 970              	.L76:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 46


 971 0058 0CFF0C40 		.word	1074593548
 972 005c 10FF0C40 		.word	1074593552
 973              		.cfi_endproc
 974              	.LFE19:
 975              		.size	CySysClkConfigureEcoTrim, .-CySysClkConfigureEcoTrim
 976              		.global	__aeabi_uidiv
 977              		.section	.text.CySysClkConfigureEcoDrive,"ax",%progbits
 978              		.align	2
 979              		.global	CySysClkConfigureEcoDrive
 980              		.code	16
 981              		.thumb_func
 982              		.type	CySysClkConfigureEcoDrive, %function
 983              	CySysClkConfigureEcoDrive:
 984              	.LFB20:
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
 985              		.loc 1 1570 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 8
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL77:
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              		.cfi_def_cfa_offset 20
 992              		.cfi_offset 4, -20
 993              		.cfi_offset 5, -16
 994              		.cfi_offset 6, -12
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 47


 997 0002 5746     		mov	r7, r10
 998 0004 80B4     		push	{r7}
 999              		.cfi_def_cfa_offset 24
 1000              		.cfi_offset 10, -24
 1001 0006 84B0     		sub	sp, sp, #16
 1002              		.cfi_def_cfa_offset 40
 1003 0008 0600     		movs	r6, r0
 1004 000a 0C00     		movs	r4, r1
 1005 000c 1500     		movs	r5, r2
 1006 000e 1F00     		movs	r7, r3
 1007              	.LVL78:
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
 1008              		.loc 1 1582 0
 1009 0010 F423     		movs	r3, #244
 1010              	.LVL79:
 1011 0012 FF33     		adds	r3, r3, #255
 1012 0014 9F42     		cmp	r7, r3
 1013 0016 00D8     		bhi	.LCB908
 1014 0018 86E0     		b	.L85	@long jump
 1015              	.LCB908:
 1016              		.loc 1 1582 0 is_stmt 0 discriminator 1
 1017 001a 484B     		ldr	r3, .L101
 1018 001c 9842     		cmp	r0, r3
 1019 001e 00D8     		bhi	.LCB911
 1020 0020 84E0     		b	.L86	@long jump
 1021              	.LCB911:
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
 1022              		.loc 1 1583 0 is_stmt 1
 1023 0022 474B     		ldr	r3, .L101+4
 1024 0024 9842     		cmp	r0, r3
 1025 0026 00D9     		bls	.LCB914
 1026 0028 82E0     		b	.L87	@long jump
 1027              	.LCB914:
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
 1028              		.loc 1 1592 0 discriminator 4
 1029 002a 464B     		ldr	r3, .L101+8
 1030 002c 9F42     		cmp	r7, r3
 1031 002e 14D9     		bls	.L88
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 48


1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
 1032              		.loc 1 1596 0
 1033 0030 454B     		ldr	r3, .L101+12
 1034 0032 9F42     		cmp	r7, r3
 1035 0034 14D9     		bls	.L89
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
 1036              		.loc 1 1600 0
 1037 0036 454B     		ldr	r3, .L101+16
 1038 0038 9F42     		cmp	r7, r3
 1039 003a 14D9     		bls	.L90
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
 1040              		.loc 1 1604 0
 1041 003c 444B     		ldr	r3, .L101+20
 1042 003e 9F42     		cmp	r7, r3
 1043 0040 14D9     		bls	.L91
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
 1044              		.loc 1 1608 0
 1045 0042 7D33     		adds	r3, r3, #125
 1046 0044 9F42     		cmp	r7, r3
 1047 0046 14D9     		bls	.L92
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
 1048              		.loc 1 1612 0
 1049 0048 424B     		ldr	r3, .L101+24
 1050 004a 9F42     		cmp	r7, r3
 1051 004c 14D9     		bls	.L93
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
 1052              		.loc 1 1616 0
 1053 004e 424B     		ldr	r3, .L101+28
 1054 0050 9F42     		cmp	r7, r3
 1055 0052 14D8     		bhi	.L94
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
 1056              		.loc 1 1618 0
 1057 0054 0623     		movs	r3, #6
 1058 0056 0393     		str	r3, [sp, #12]
 1059 0058 13E0     		b	.L80
 1060              	.L88:
1594:Generated_Source\PSoC4/CyLib.c ****                 }
 1061              		.loc 1 1594 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 49


 1062 005a 0023     		movs	r3, #0
 1063 005c 0393     		str	r3, [sp, #12]
 1064 005e 10E0     		b	.L80
 1065              	.L89:
1598:Generated_Source\PSoC4/CyLib.c ****                 }
 1066              		.loc 1 1598 0
 1067 0060 0123     		movs	r3, #1
 1068 0062 0393     		str	r3, [sp, #12]
 1069 0064 0DE0     		b	.L80
 1070              	.L90:
1602:Generated_Source\PSoC4/CyLib.c ****                 }
 1071              		.loc 1 1602 0
 1072 0066 0223     		movs	r3, #2
 1073 0068 0393     		str	r3, [sp, #12]
 1074 006a 0AE0     		b	.L80
 1075              	.L91:
1606:Generated_Source\PSoC4/CyLib.c ****                 }
 1076              		.loc 1 1606 0
 1077 006c 0323     		movs	r3, #3
 1078 006e 0393     		str	r3, [sp, #12]
 1079 0070 07E0     		b	.L80
 1080              	.L92:
1610:Generated_Source\PSoC4/CyLib.c ****                 }
 1081              		.loc 1 1610 0
 1082 0072 0423     		movs	r3, #4
 1083 0074 0393     		str	r3, [sp, #12]
 1084 0076 04E0     		b	.L80
 1085              	.L93:
1614:Generated_Source\PSoC4/CyLib.c ****                 }
 1086              		.loc 1 1614 0
 1087 0078 0523     		movs	r3, #5
 1088 007a 0393     		str	r3, [sp, #12]
 1089 007c 01E0     		b	.L80
 1090              	.L94:
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
 1091              		.loc 1 1622 0
 1092 007e 0723     		movs	r3, #7
 1093 0080 0393     		str	r3, [sp, #12]
 1094              	.L80:
 1095              	.LVL80:
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
 1096              		.loc 1 1626 0
 1097 0082 364B     		ldr	r3, .L101+32
 1098 0084 9F42     		cmp	r7, r3
 1099 0086 06D8     		bhi	.L95
 1100              		.loc 1 1626 0 is_stmt 0 discriminator 1
 1101 0088 C821     		movs	r1, #200
 1102              	.LVL81:
 1103 008a 3800     		movs	r0, r7
 1104              	.LVL82:
 1105 008c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 50


 1106              	.LVL83:
 1107 0090 831E     		subs	r3, r0, #2
 1108 0092 0293     		str	r3, [sp, #8]
 1109 0094 01E0     		b	.L81
 1110              	.LVL84:
 1111              	.L95:
 1112              		.loc 1 1626 0
 1113 0096 0323     		movs	r3, #3
 1114 0098 0293     		str	r3, [sp, #8]
 1115              	.LVL85:
 1116              	.L81:
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
 1117              		.loc 1 1629 0 is_stmt 1 discriminator 4
 1118 009a 7443     		muls	r4, r6
 1119              	.LVL86:
 1120 009c A000     		lsls	r0, r4, #2
 1121 009e 0019     		adds	r0, r0, r4
 1122 00a0 0301     		lsls	r3, r0, #4
 1123 00a2 181B     		subs	r0, r3, r4
 1124 00a4 FA21     		movs	r1, #250
 1125 00a6 8900     		lsls	r1, r1, #2
 1126 00a8 FFF7FEFF 		bl	__aeabi_uidiv
 1127              	.LVL87:
 1128 00ac 8246     		mov	r10, r0
 1129 00ae 2800     		movs	r0, r5
 1130 00b0 6043     		muls	r0, r4
 1131 00b2 FA21     		movs	r1, #250
 1132 00b4 8900     		lsls	r1, r1, #2
 1133 00b6 FFF7FEFF 		bl	__aeabi_uidiv
 1134              	.LVL88:
 1135 00ba 5346     		mov	r3, r10
 1136 00bc 5843     		muls	r0, r3
 1137 00be 2849     		ldr	r1, .L101+36
 1138 00c0 FFF7FEFF 		bl	__aeabi_uidiv
 1139              	.LVL89:
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
 1140              		.loc 1 1630 0 discriminator 4
 1141 00c4 0328     		cmp	r0, #3
 1142 00c6 07D8     		bhi	.L96
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
 1143              		.loc 1 1635 0
 1144 00c8 0128     		cmp	r0, #1
 1145 00ca 08D8     		bhi	.L97
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
 1146              		.loc 1 1641 0
 1147 00cc 0138     		subs	r0, r0, #1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 51


 1148              	.LVL90:
 1149 00ce 431E     		subs	r3, r0, #1
 1150 00d0 9841     		sbcs	r0, r0, r3
 1151              	.LVL91:
 1152 00d2 C0B2     		uxtb	r0, r0
 1153              	.LVL92:
1571:Generated_Source\PSoC4/CyLib.c **** 
 1154              		.loc 1 1571 0
 1155 00d4 0024     		movs	r4, #0
 1156 00d6 03E0     		b	.L82
 1157              	.LVL93:
 1158              	.L96:
1633:Generated_Source\PSoC4/CyLib.c ****                 }
 1159              		.loc 1 1633 0
 1160 00d8 0020     		movs	r0, #0
 1161              	.LVL94:
1632:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
 1162              		.loc 1 1632 0
 1163 00da 0124     		movs	r4, #1
 1164 00dc 00E0     		b	.L82
 1165              	.LVL95:
 1166              	.L97:
1571:Generated_Source\PSoC4/CyLib.c **** 
 1167              		.loc 1 1571 0
 1168 00de 0024     		movs	r4, #0
 1169              	.LVL96:
 1170              	.L82:
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
 1171              		.loc 1 1645 0
 1172 00e0 204B     		ldr	r3, .L101+40
 1173 00e2 9E42     		cmp	r6, r3
 1174 00e4 07D8     		bhi	.L98
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
 1175              		.loc 1 1649 0
 1176 00e6 204B     		ldr	r3, .L101+44
 1177 00e8 9E42     		cmp	r6, r3
 1178 00ea 06D8     		bhi	.L99
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
 1179              		.loc 1 1653 0
 1180 00ec 1F4B     		ldr	r3, .L101+48
 1181 00ee 9E42     		cmp	r6, r3
 1182 00f0 05D9     		bls	.L100
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
 1183              		.loc 1 1655 0
 1184 00f2 0222     		movs	r2, #2
 1185 00f4 04E0     		b	.L83
 1186              	.L98:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 52


1647:Generated_Source\PSoC4/CyLib.c ****                 }
 1187              		.loc 1 1647 0
 1188 00f6 0022     		movs	r2, #0
 1189 00f8 02E0     		b	.L83
 1190              	.L99:
1651:Generated_Source\PSoC4/CyLib.c ****                 }
 1191              		.loc 1 1651 0
 1192 00fa 0122     		movs	r2, #1
 1193 00fc 00E0     		b	.L83
 1194              	.L100:
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
 1195              		.loc 1 1659 0
 1196 00fe 0322     		movs	r2, #3
 1197              	.L83:
 1198              	.LVL97:
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
 1199              		.loc 1 1665 0
 1200 0100 0090     		str	r0, [sp]
 1201 0102 1300     		movs	r3, r2
 1202 0104 0399     		ldr	r1, [sp, #12]
 1203 0106 0298     		ldr	r0, [sp, #8]
 1204              	.LVL98:
 1205 0108 FFF7FEFF 		bl	CySysClkConfigureEcoTrim
 1206              	.LVL99:
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
 1207              		.loc 1 1668 0
 1208 010c 012F     		cmp	r7, #1
 1209 010e 05D8     		bhi	.L84
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 1210              		.loc 1 1671 0
 1211 0110 174A     		ldr	r2, .L101+52
 1212 0112 1168     		ldr	r1, [r2]
 1213 0114 0223     		movs	r3, #2
 1214 0116 0B43     		orrs	r3, r1
 1215 0118 1360     		str	r3, [r2]
 1216              	.LVL100:
 1217 011a 0AE0     		b	.L79
 1218              	.LVL101:
 1219              	.L84:
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 53


1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 1220              		.loc 1 1678 0
 1221 011c 144A     		ldr	r2, .L101+52
 1222 011e 1368     		ldr	r3, [r2]
 1223 0120 0221     		movs	r1, #2
 1224 0122 8B43     		bics	r3, r1
 1225 0124 1360     		str	r3, [r2]
 1226              	.LVL102:
 1227 0126 04E0     		b	.L79
 1228              	.LVL103:
 1229              	.L85:
1585:Generated_Source\PSoC4/CyLib.c ****             }
 1230              		.loc 1 1585 0
 1231 0128 0124     		movs	r4, #1
 1232 012a 02E0     		b	.L79
 1233              	.L86:
 1234 012c 0124     		movs	r4, #1
 1235 012e 00E0     		b	.L79
 1236              	.L87:
 1237 0130 0124     		movs	r4, #1
 1238              	.LVL104:
 1239              	.L79:
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
 1240              		.loc 1 1683 0
 1241 0132 2000     		movs	r0, r4
 1242 0134 04B0     		add	sp, sp, #16
 1243              		@ sp needed
 1244              	.LVL105:
 1245              	.LVL106:
 1246              	.LVL107:
 1247              	.LVL108:
 1248 0136 04BC     		pop	{r2}
 1249 0138 9246     		mov	r10, r2
 1250 013a F0BD     		pop	{r4, r5, r6, r7, pc}
 1251              	.L102:
 1252              		.align	2
 1253              	.L101:
 1254 013c 9F0F0000 		.word	3999
 1255 0140 35820000 		.word	33333
 1256 0144 57020000 		.word	599
 1257 0148 BB020000 		.word	699
 1258 014c 1F030000 		.word	799
 1259 0150 83030000 		.word	899
 1260 0154 7D040000 		.word	1149
 1261 0158 FA040000 		.word	1274
 1262 015c AF040000 		.word	1199
 1263 0160 8074D21A 		.word	450000000
 1264 0164 30750000 		.word	30000
 1265 0168 C05D0000 		.word	24000
 1266 016c 68420000 		.word	17000
 1267 0170 08000C40 		.word	1074528264
 1268              		.cfi_endproc
 1269              	.LFE20:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 54


 1270              		.size	CySysClkConfigureEcoDrive, .-CySysClkConfigureEcoDrive
 1271              		.section	.text.CySysClkPllStop,"ax",%progbits
 1272              		.align	2
 1273              		.global	CySysClkPllStop
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	CySysClkPllStop, %function
 1277              	CySysClkPllStop:
 1278              	.LFB23:
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 55


1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 56


1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
 1279              		.loc 1 1825 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              	.LVL109:
 1284 0000 70B5     		push	{r4, r5, r6, lr}
 1285              		.cfi_def_cfa_offset 16
 1286              		.cfi_offset 4, -16
 1287              		.cfi_offset 5, -12
 1288              		.cfi_offset 6, -8
 1289              		.cfi_offset 14, -4
 1290 0002 0400     		movs	r4, r0
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 1291              		.loc 1 1828 0
 1292 0004 0128     		cmp	r0, #1
 1293 0006 0CD8     		bhi	.L103
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 57


 1294              		.loc 1 1830 0
 1295 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1296              	.LVL110:
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
 1297              		.loc 1 1831 0
 1298 000c 054A     		ldr	r2, .L105
 1299 000e 6100     		lsls	r1, r4, #1
 1300 0010 0D19     		adds	r5, r1, r4
 1301 0012 AB00     		lsls	r3, r5, #2
 1302 0014 9B58     		ldr	r3, [r3, r2]
 1303 0016 9B00     		lsls	r3, r3, #2
 1304 0018 9B08     		lsrs	r3, r3, #2
 1305 001a A900     		lsls	r1, r5, #2
 1306 001c 8B50     		str	r3, [r1, r2]
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1307              		.loc 1 1832 0
 1308 001e FFF7FEFF 		bl	CyExitCriticalSection
 1309              	.LVL111:
 1310              	.L103:
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
 1311              		.loc 1 1834 0
 1312              		@ sp needed
 1313              	.LVL112:
 1314 0022 70BD     		pop	{r4, r5, r6, pc}
 1315              	.L106:
 1316              		.align	2
 1317              	.L105:
 1318 0024 14000C40 		.word	1074528276
 1319              		.cfi_endproc
 1320              	.LFE23:
 1321              		.size	CySysClkPllStop, .-CySysClkPllStop
 1322              		.section	.text.CySysClkPllSetBypassMode,"ax",%progbits
 1323              		.align	2
 1324              		.global	CySysClkPllSetBypassMode
 1325              		.code	16
 1326              		.thumb_func
 1327              		.type	CySysClkPllSetBypassMode, %function
 1328              	CySysClkPllSetBypassMode:
 1329              	.LFB25:
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 58


1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 59


1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
 1330              		.loc 1 1938 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              	.LVL113:
 1335 0000 70B5     		push	{r4, r5, r6, lr}
 1336              		.cfi_def_cfa_offset 16
 1337              		.cfi_offset 4, -16
 1338              		.cfi_offset 5, -12
 1339              		.cfi_offset 6, -8
 1340              		.cfi_offset 14, -4
 1341 0002 0400     		movs	r4, r0
 1342 0004 0D00     		movs	r5, r1
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1343              		.loc 1 1942 0
 1344 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1345              	.LVL114:
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
 1346              		.loc 1 1944 0
 1347 000a 012C     		cmp	r4, #1
 1348 000c 0DD8     		bhi	.L108
 1349              		.loc 1 1944 0 is_stmt 0 discriminator 1
 1350 000e 032D     		cmp	r5, #3
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 60


 1351 0010 0BD8     		bhi	.L108
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
 1352              		.loc 1 1946 0 is_stmt 1
 1353 0012 074A     		ldr	r2, .L109
 1354 0014 6100     		lsls	r1, r4, #1
 1355 0016 0E19     		adds	r6, r1, r4
 1356 0018 B300     		lsls	r3, r6, #2
 1357 001a 9E58     		ldr	r6, [r3, r2]
 1358 001c 054B     		ldr	r3, .L109+4
 1359 001e 3340     		ands	r3, r6
 1360              	.LVL115:
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
 1361              		.loc 1 1947 0
 1362 0020 2D05     		lsls	r5, r5, #20
 1363              	.LVL116:
 1364 0022 1D43     		orrs	r5, r3
 1365              	.LVL117:
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 1366              		.loc 1 1948 0
 1367 0024 0C19     		adds	r4, r1, r4
 1368              	.LVL118:
 1369 0026 A300     		lsls	r3, r4, #2
 1370 0028 9D50     		str	r5, [r3, r2]
 1371              	.LVL119:
 1372              	.L108:
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1373              		.loc 1 1951 0
 1374 002a FFF7FEFF 		bl	CyExitCriticalSection
 1375              	.LVL120:
1952:Generated_Source\PSoC4/CyLib.c ****     }
 1376              		.loc 1 1952 0
 1377              		@ sp needed
 1378 002e 70BD     		pop	{r4, r5, r6, pc}
 1379              	.L110:
 1380              		.align	2
 1381              	.L109:
 1382 0030 14000C40 		.word	1074528276
 1383 0034 FFFFCFFF 		.word	-3145729
 1384              		.cfi_endproc
 1385              	.LFE25:
 1386              		.size	CySysClkPllSetBypassMode, .-CySysClkPllSetBypassMode
 1387              		.section	.text.CySysClkPllGetUnlockStatus,"ax",%progbits
 1388              		.align	2
 1389              		.global	CySysClkPllGetUnlockStatus
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	CySysClkPllGetUnlockStatus, %function
 1393              	CySysClkPllGetUnlockStatus:
 1394              	.LFB28:
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 61


1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 62


2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
 1395              		.loc 1 2043 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL121:
 1400 0000 70B5     		push	{r4, r5, r6, lr}
 1401              		.cfi_def_cfa_offset 16
 1402              		.cfi_offset 4, -16
 1403              		.cfi_offset 5, -12
 1404              		.cfi_offset 6, -8
 1405              		.cfi_offset 14, -4
 1406 0002 0400     		movs	r4, r0
 1407              	.LVL122:
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1408              		.loc 1 2047 0
 1409 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1410              	.LVL123:
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
 1411              		.loc 1 2049 0
 1412 0008 6100     		lsls	r1, r4, #1
 1413 000a 0A19     		adds	r2, r1, r4
 1414 000c 9300     		lsls	r3, r2, #2
 1415 000e 084A     		ldr	r2, .L112
 1416 0010 9446     		mov	ip, r2
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 63


 1417 0012 6344     		add	r3, r3, ip
 1418 0014 9D68     		ldr	r5, [r3, #8]
 1419 0016 1022     		movs	r2, #16
 1420 0018 1540     		ands	r5, r2
 1421              	.LVL124:
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
 1422              		.loc 1 2050 0
 1423 001a 9B68     		ldr	r3, [r3, #8]
 1424 001c 1A43     		orrs	r2, r3
 1425 001e 0C19     		adds	r4, r1, r4
 1426              	.LVL125:
 1427 0020 A300     		lsls	r3, r4, #2
 1428 0022 6344     		add	r3, r3, ip
 1429 0024 9A60     		str	r2, [r3, #8]
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1430              		.loc 1 2052 0
 1431 0026 FFF7FEFF 		bl	CyExitCriticalSection
 1432              	.LVL126:
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
 1433              		.loc 1 2055 0
 1434 002a 2800     		movs	r0, r5
 1435              		@ sp needed
 1436              	.LVL127:
 1437 002c 70BD     		pop	{r4, r5, r6, pc}
 1438              	.L113:
 1439 002e C046     		.align	2
 1440              	.L112:
 1441 0030 14000C40 		.word	1074528276
 1442              		.cfi_endproc
 1443              	.LFE28:
 1444              		.size	CySysClkPllGetUnlockStatus, .-CySysClkPllGetUnlockStatus
 1445              		.section	.text.CySysClkPllSetSource,"ax",%progbits
 1446              		.align	2
 1447              		.global	CySysClkPllSetSource
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CySysClkPllSetSource, %function
 1451              	CySysClkPllSetSource:
 1452              	.LFB30:
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 64


2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 65


2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 66


2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
 1453              		.loc 1 2193 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              	.LVL128:
 1458 0000 70B5     		push	{r4, r5, r6, lr}
 1459              		.cfi_def_cfa_offset 16
 1460              		.cfi_offset 4, -16
 1461              		.cfi_offset 5, -12
 1462              		.cfi_offset 6, -8
 1463              		.cfi_offset 14, -4
 1464 0002 0400     		movs	r4, r0
 1465 0004 0D00     		movs	r5, r1
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1466              		.loc 1 2202 0
 1467 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1468              	.LVL129:
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 1469              		.loc 1 2204 0
 1470 000a 012C     		cmp	r4, #1
 1471 000c 0BD8     		bhi	.L115
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
 1472              		.loc 1 2207 0
 1473 000e 0749     		ldr	r1, .L116
 1474 0010 0A68     		ldr	r2, [r1]
 1475 0012 0134     		adds	r4, r4, #1
 1476              	.LVL130:
 1477 0014 6300     		lsls	r3, r4, #1
 1478 0016 1C19     		adds	r4, r3, r4
 1479              	.LVL131:
 1480 0018 0723     		movs	r3, #7
 1481 001a A340     		lsls	r3, r3, r4
 1482 001c 9A43     		bics	r2, r3
 1483              	.LVL132:
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
 1484              		.loc 1 2208 0
 1485 001e A540     		lsls	r5, r5, r4
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 67


 1486              	.LVL133:
 1487 0020 2B40     		ands	r3, r5
 1488 0022 1343     		orrs	r3, r2
 1489              	.LVL134:
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
 1490              		.loc 1 2209 0
 1491 0024 0B60     		str	r3, [r1]
 1492              	.LVL135:
 1493              	.L115:
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1494              		.loc 1 2232 0
 1495 0026 FFF7FEFF 		bl	CyExitCriticalSection
 1496              	.LVL136:
2233:Generated_Source\PSoC4/CyLib.c ****     }
 1497              		.loc 1 2233 0
 1498              		@ sp needed
 1499 002a 70BD     		pop	{r4, r5, r6, pc}
 1500              	.L117:
 1501              		.align	2
 1502              	.L116:
 1503 002c 00010B40 		.word	1074462976
 1504              		.cfi_endproc
 1505              	.LFE30:
 1506              		.size	CySysClkPllSetSource, .-CySysClkPllSetSource
 1507              		.section	.text.CySysLvdDisable,"ax",%progbits
 1508              		.align	2
 1509              		.global	CySysLvdDisable
 1510              		.code	16
 1511              		.thumb_func
 1512              		.type	CySysLvdDisable, %function
 1513              	CySysLvdDisable:
 1514              	.LFB33:
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 68


2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 69


2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 70


2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 71


2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 72


2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 73


2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 74


2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 75


2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 76


2693:Generated_Source\PSoC4/CyLib.c ****     {
 1515              		.loc 1 2693 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1520              		.loc 1 2694 0
 1521 0000 054A     		ldr	r2, .L119
 1522 0002 1368     		ldr	r3, [r2]
 1523 0004 0221     		movs	r1, #2
 1524 0006 8B43     		bics	r3, r1
 1525 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1526              		.loc 1 2695 0
 1527 000a 044A     		ldr	r2, .L119+4
 1528 000c 1368     		ldr	r3, [r2]
 1529 000e 0139     		subs	r1, r1, #1
 1530 0010 8B43     		bics	r3, r1
 1531 0012 1360     		str	r3, [r2]
2696:Generated_Source\PSoC4/CyLib.c ****     }
 1532              		.loc 1 2696 0
 1533              		@ sp needed
 1534 0014 7047     		bx	lr
 1535              	.L120:
 1536 0016 C046     		.align	2
 1537              	.L119:
 1538 0018 08000B40 		.word	1074462728
 1539 001c 18000B40 		.word	1074462744
 1540              		.cfi_endproc
 1541              	.LFE33:
 1542              		.size	CySysLvdDisable, .-CySysLvdDisable
 1543              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 1544              		.align	2
 1545              		.global	CySysLvdGetInterruptSource
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	CySysLvdGetInterruptSource, %function
 1549              	CySysLvdGetInterruptSource:
 1550              	.LFB34:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 1551              		.loc 1 2711 0
 1552              		.cfi_startproc
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 77


 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1556              		.loc 1 2712 0
 1557 0000 024B     		ldr	r3, .L122
 1558 0002 1B68     		ldr	r3, [r3]
 1559 0004 0220     		movs	r0, #2
 1560 0006 1840     		ands	r0, r3
2713:Generated_Source\PSoC4/CyLib.c ****     }
 1561              		.loc 1 2713 0
 1562              		@ sp needed
 1563 0008 7047     		bx	lr
 1564              	.L123:
 1565 000a C046     		.align	2
 1566              	.L122:
 1567 000c 04000B40 		.word	1074462724
 1568              		.cfi_endproc
 1569              	.LFE34:
 1570              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1571              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1572              		.align	2
 1573              		.global	CySysLvdClearInterrupt
 1574              		.code	16
 1575              		.thumb_func
 1576              		.type	CySysLvdClearInterrupt, %function
 1577              	CySysLvdClearInterrupt:
 1578              	.LFB35:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 1579              		.loc 1 2727 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1584              		.loc 1 2728 0
 1585 0000 0222     		movs	r2, #2
 1586 0002 014B     		ldr	r3, .L125
 1587 0004 1A60     		str	r2, [r3]
2729:Generated_Source\PSoC4/CyLib.c ****     }
 1588              		.loc 1 2729 0
 1589              		@ sp needed
 1590 0006 7047     		bx	lr
 1591              	.L126:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 78


 1592              		.align	2
 1593              	.L125:
 1594 0008 04000B40 		.word	1074462724
 1595              		.cfi_endproc
 1596              	.LFE35:
 1597              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1598              		.section	.text.CySysGetResetReason,"ax",%progbits
 1599              		.align	2
 1600              		.global	CySysGetResetReason
 1601              		.code	16
 1602              		.thumb_func
 1603              		.type	CySysGetResetReason, %function
 1604              	CySysGetResetReason:
 1605              	.LFB36:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 1606              		.loc 1 2753 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
 1611              	.LVL137:
 1612 0000 0200     		movs	r2, r0
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1613              		.loc 1 2756 0
 1614 0002 1920     		movs	r0, #25
 1615              	.LVL138:
 1616 0004 0240     		ands	r2, r0
 1617              	.LVL139:
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1618              		.loc 1 2757 0
 1619 0006 0249     		ldr	r1, .L128
 1620 0008 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 79


 1621 000a 1840     		ands	r0, r3
 1622              	.LVL140:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1623              		.loc 1 2759 0
 1624 000c 0A60     		str	r2, [r1]
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 1625              		.loc 1 2762 0
 1626              		@ sp needed
 1627 000e 7047     		bx	lr
 1628              	.L129:
 1629              		.align	2
 1630              	.L128:
 1631 0010 00030B40 		.word	1074463488
 1632              		.cfi_endproc
 1633              	.LFE36:
 1634              		.size	CySysGetResetReason, .-CySysGetResetReason
 1635              		.section	.text.CyDisableInts,"ax",%progbits
 1636              		.align	2
 1637              		.global	CyDisableInts
 1638              		.code	16
 1639              		.thumb_func
 1640              		.type	CyDisableInts, %function
 1641              	CyDisableInts:
 1642              	.LFB37:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 1643              		.loc 1 2776 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1648              		.loc 1 2780 0
 1649 0000 024B     		ldr	r3, .L131
 1650 0002 1868     		ldr	r0, [r3]
 1651              	.LVL141:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 80


 1652              		.loc 1 2783 0
 1653 0004 0122     		movs	r2, #1
 1654 0006 5242     		rsbs	r2, r2, #0
 1655 0008 1A60     		str	r2, [r3]
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 1656              		.loc 1 2786 0
 1657              		@ sp needed
 1658 000a 7047     		bx	lr
 1659              	.L132:
 1660              		.align	2
 1661              	.L131:
 1662 000c 80E100E0 		.word	-536813184
 1663              		.cfi_endproc
 1664              	.LFE37:
 1665              		.size	CyDisableInts, .-CyDisableInts
 1666              		.section	.text.CyEnableInts,"ax",%progbits
 1667              		.align	2
 1668              		.global	CyEnableInts
 1669              		.code	16
 1670              		.thumb_func
 1671              		.type	CyEnableInts, %function
 1672              	CyEnableInts:
 1673              	.LFB38:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 1674              		.loc 1 2799 0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 0
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 1678              		@ link register save eliminated.
 1679              	.LVL142:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1680              		.loc 1 2800 0
 1681 0000 014B     		ldr	r3, .L134
 1682 0002 1860     		str	r0, [r3]
2801:Generated_Source\PSoC4/CyLib.c **** }
 1683              		.loc 1 2801 0
 1684              		@ sp needed
 1685 0004 7047     		bx	lr
 1686              	.L135:
 1687 0006 C046     		.align	2
 1688              	.L134:
 1689 0008 00E100E0 		.word	-536813312
 1690              		.cfi_endproc
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 81


 1691              	.LFE38:
 1692              		.size	CyEnableInts, .-CyEnableInts
 1693              		.section	.text.CyIntEnable,"ax",%progbits
 1694              		.align	2
 1695              		.global	CyIntEnable
 1696              		.code	16
 1697              		.thumb_func
 1698              		.type	CyIntEnable, %function
 1699              	CyIntEnable:
 1700              	.LFB45:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 82


2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 83


2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 84


2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 1701              		.loc 1 2982 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              		@ link register save eliminated.
 1706              	.LVL143:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1707              		.loc 1 2983 0
 1708 0000 1F23     		movs	r3, #31
 1709 0002 1840     		ands	r0, r3
 1710              	.LVL144:
 1711 0004 1E3B     		subs	r3, r3, #30
 1712 0006 8340     		lsls	r3, r3, r0
 1713 0008 014A     		ldr	r2, .L137
 1714 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** }
 1715              		.loc 1 2984 0
 1716              		@ sp needed
 1717 000c 7047     		bx	lr
 1718              	.L138:
 1719 000e C046     		.align	2
 1720              	.L137:
 1721 0010 00E100E0 		.word	-536813312
 1722              		.cfi_endproc
 1723              	.LFE45:
 1724              		.size	CyIntEnable, .-CyIntEnable
 1725              		.section	.text.CyIntGetState,"ax",%progbits
 1726              		.align	2
 1727              		.global	CyIntGetState
 1728              		.code	16
 1729              		.thumb_func
 1730              		.type	CyIntGetState, %function
 1731              	CyIntGetState:
 1732              	.LFB46:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 85


2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 1733              		.loc 1 3000 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 0
 1736              		@ frame_needed = 0, uses_anonymous_args = 0
 1737              		@ link register save eliminated.
 1738              	.LVL145:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1739              		.loc 1 3002 0
 1740 0000 044B     		ldr	r3, .L140
 1741 0002 1B68     		ldr	r3, [r3]
 1742 0004 1F22     		movs	r2, #31
 1743 0006 1040     		ands	r0, r2
 1744              	.LVL146:
 1745 0008 C340     		lsrs	r3, r3, r0
 1746 000a 1800     		movs	r0, r3
 1747 000c 0123     		movs	r3, #1
 1748 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** }
 1749              		.loc 1 3003 0
 1750              		@ sp needed
 1751 0010 7047     		bx	lr
 1752              	.L141:
 1753 0012 C046     		.align	2
 1754              	.L140:
 1755 0014 00E100E0 		.word	-536813312
 1756              		.cfi_endproc
 1757              	.LFE46:
 1758              		.size	CyIntGetState, .-CyIntGetState
 1759              		.section	.text.CyIntDisable,"ax",%progbits
 1760              		.align	2
 1761              		.global	CyIntDisable
 1762              		.code	16
 1763              		.thumb_func
 1764              		.type	CyIntDisable, %function
 1765              	CyIntDisable:
 1766              	.LFB47:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 86


3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 1767              		.loc 1 3016 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              		@ link register save eliminated.
 1772              	.LVL147:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1773              		.loc 1 3017 0
 1774 0000 1F23     		movs	r3, #31
 1775 0002 1840     		ands	r0, r3
 1776              	.LVL148:
 1777 0004 1E3B     		subs	r3, r3, #30
 1778 0006 8340     		lsls	r3, r3, r0
 1779 0008 014A     		ldr	r2, .L143
 1780 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** }
 1781              		.loc 1 3018 0
 1782              		@ sp needed
 1783 000c 7047     		bx	lr
 1784              	.L144:
 1785 000e C046     		.align	2
 1786              	.L143:
 1787 0010 80E100E0 		.word	-536813184
 1788              		.cfi_endproc
 1789              	.LFE47:
 1790              		.size	CyIntDisable, .-CyIntDisable
 1791              		.section	.text.CyIntSetPending,"ax",%progbits
 1792              		.align	2
 1793              		.global	CyIntSetPending
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	CyIntSetPending, %function
 1797              	CyIntSetPending:
 1798              	.LFB48:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 1799              		.loc 1 3030 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 87


 1804              	.LVL149:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1805              		.loc 1 3031 0
 1806 0000 1F23     		movs	r3, #31
 1807 0002 1840     		ands	r0, r3
 1808              	.LVL150:
 1809 0004 1E3B     		subs	r3, r3, #30
 1810 0006 8340     		lsls	r3, r3, r0
 1811 0008 014A     		ldr	r2, .L146
 1812 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 3032 0
 1814              		@ sp needed
 1815 000c 7047     		bx	lr
 1816              	.L147:
 1817 000e C046     		.align	2
 1818              	.L146:
 1819 0010 00E200E0 		.word	-536813056
 1820              		.cfi_endproc
 1821              	.LFE48:
 1822              		.size	CyIntSetPending, .-CyIntSetPending
 1823              		.section	.text.CyIntClearPending,"ax",%progbits
 1824              		.align	2
 1825              		.global	CyIntClearPending
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	CyIntClearPending, %function
 1829              	CyIntClearPending:
 1830              	.LFB49:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 1831              		.loc 1 3045 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
 1836              	.LVL151:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1837              		.loc 1 3046 0
 1838 0000 1F23     		movs	r3, #31
 1839 0002 1840     		ands	r0, r3
 1840              	.LVL152:
 1841 0004 1E3B     		subs	r3, r3, #30
 1842 0006 8340     		lsls	r3, r3, r0
 1843 0008 014A     		ldr	r2, .L149
 1844 000a 1360     		str	r3, [r2]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 88


3047:Generated_Source\PSoC4/CyLib.c **** }
 1845              		.loc 1 3047 0
 1846              		@ sp needed
 1847 000c 7047     		bx	lr
 1848              	.L150:
 1849 000e C046     		.align	2
 1850              	.L149:
 1851 0010 80E200E0 		.word	-536812928
 1852              		.cfi_endproc
 1853              	.LFE49:
 1854              		.size	CyIntClearPending, .-CyIntClearPending
 1855              		.section	.text.CyHalt,"ax",%progbits
 1856              		.align	2
 1857              		.global	CyHalt
 1858              		.code	16
 1859              		.thumb_func
 1860              		.type	CyHalt, %function
 1861              	CyHalt:
 1862              	.LFB50:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 1863              		.loc 1 3060 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              		@ link register save eliminated.
 1868              	.LVL153:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1869              		.loc 1 3069 0
 1870              		.syntax divided
 1871              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 1872 0000 01BE     		    bkpt    1
 1873              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 1874              		.loc 1 3073 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 89


 1875              		.thumb
 1876              		.syntax unified
 1877              		@ sp needed
 1878 0002 7047     		bx	lr
 1879              		.cfi_endproc
 1880              	.LFE50:
 1881              		.size	CyHalt, .-CyHalt
 1882              		.section	.text.CySysClkPllGetLockStatus,"ax",%progbits
 1883              		.align	2
 1884              		.global	CySysClkPllGetLockStatus
 1885              		.code	16
 1886              		.thumb_func
 1887              		.type	CySysClkPllGetLockStatus, %function
 1888              	CySysClkPllGetLockStatus:
 1889              	.LFB22:
1788:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1890              		.loc 1 1788 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              	.LVL154:
 1895 0000 70B5     		push	{r4, r5, r6, lr}
 1896              		.cfi_def_cfa_offset 16
 1897              		.cfi_offset 4, -16
 1898              		.cfi_offset 5, -12
 1899              		.cfi_offset 6, -8
 1900              		.cfi_offset 14, -4
 1901 0002 0400     		movs	r4, r0
1792:Generated_Source\PSoC4/CyLib.c **** 
 1902              		.loc 1 1792 0
 1903 0004 0128     		cmp	r0, #1
 1904 0006 02D9     		bls	.L153
1792:Generated_Source\PSoC4/CyLib.c **** 
 1905              		.loc 1 1792 0 is_stmt 0 discriminator 1
 1906 0008 0020     		movs	r0, #0
 1907              	.LVL155:
 1908 000a FFF7FEFF 		bl	CyHalt
 1909              	.LVL156:
 1910              	.L153:
1794:Generated_Source\PSoC4/CyLib.c **** 
 1911              		.loc 1 1794 0 is_stmt 1
 1912 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1913              	.LVL157:
1797:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
 1914              		.loc 1 1797 0
 1915 0012 6200     		lsls	r2, r4, #1
 1916 0014 1219     		adds	r2, r2, r4
 1917 0016 9300     		lsls	r3, r2, #2
 1918 0018 084A     		ldr	r2, .L155
 1919 001a 9446     		mov	ip, r2
 1920 001c 6344     		add	r3, r3, ip
 1921 001e 5B68     		ldr	r3, [r3, #4]
 1922 0020 0125     		movs	r5, #1
 1923 0022 1D40     		ands	r5, r3
 1924              	.LVL158:
1798:Generated_Source\PSoC4/CyLib.c ****         {
 1925              		.loc 1 1798 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 90


 1926 0024 06D0     		beq	.L154
1800:Generated_Source\PSoC4/CyLib.c ****         }
 1927              		.loc 1 1800 0
 1928 0026 6300     		lsls	r3, r4, #1
 1929 0028 1C19     		adds	r4, r3, r4
 1930              	.LVL159:
 1931 002a A300     		lsls	r3, r4, #2
 1932 002c 6344     		add	r3, r3, ip
 1933 002e 5B68     		ldr	r3, [r3, #4]
 1934 0030 0125     		movs	r5, #1
 1935              	.LVL160:
 1936 0032 1D40     		ands	r5, r3
 1937              	.LVL161:
 1938              	.L154:
1803:Generated_Source\PSoC4/CyLib.c **** 
 1939              		.loc 1 1803 0
 1940 0034 FFF7FEFF 		bl	CyExitCriticalSection
 1941              	.LVL162:
1806:Generated_Source\PSoC4/CyLib.c **** 
 1942              		.loc 1 1806 0
 1943 0038 2800     		movs	r0, r5
 1944              		@ sp needed
 1945              	.LVL163:
 1946 003a 70BD     		pop	{r4, r5, r6, pc}
 1947              	.L156:
 1948              		.align	2
 1949              	.L155:
 1950 003c 14000C40 		.word	1074528276
 1951              		.cfi_endproc
 1952              	.LFE22:
 1953              		.size	CySysClkPllGetLockStatus, .-CySysClkPllGetLockStatus
 1954              		.section	.text.CySysClkPllGetBypassMode,"ax",%progbits
 1955              		.align	2
 1956              		.code	16
 1957              		.thumb_func
 1958              		.type	CySysClkPllGetBypassMode, %function
 1959              	CySysClkPllGetBypassMode:
 1960              	.LFB26:
1967:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
 1961              		.loc 1 1967 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 0
 1964              		@ frame_needed = 0, uses_anonymous_args = 0
 1965              	.LVL164:
 1966 0000 10B5     		push	{r4, lr}
 1967              		.cfi_def_cfa_offset 8
 1968              		.cfi_offset 4, -8
 1969              		.cfi_offset 14, -4
 1970 0002 0400     		movs	r4, r0
1971:Generated_Source\PSoC4/CyLib.c **** 
 1971              		.loc 1 1971 0
 1972 0004 0128     		cmp	r0, #1
 1973 0006 02D9     		bls	.L158
1971:Generated_Source\PSoC4/CyLib.c **** 
 1974              		.loc 1 1971 0 is_stmt 0 discriminator 1
 1975 0008 0020     		movs	r0, #0
 1976              	.LVL165:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 91


 1977 000a FFF7FEFF 		bl	CyHalt
 1978              	.LVL166:
 1979              	.L158:
1973:Generated_Source\PSoC4/CyLib.c **** 
 1980              		.loc 1 1973 0 is_stmt 1
 1981 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1982              	.LVL167:
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
 1983              		.loc 1 1975 0
 1984 0012 6300     		lsls	r3, r4, #1
 1985 0014 1C19     		adds	r4, r3, r4
 1986              	.LVL168:
 1987 0016 A300     		lsls	r3, r4, #2
 1988 0018 044A     		ldr	r2, .L159
 1989 001a 9C58     		ldr	r4, [r3, r2]
 1990              	.LVL169:
1976:Generated_Source\PSoC4/CyLib.c **** 
 1991              		.loc 1 1976 0
 1992 001c 240D     		lsrs	r4, r4, #20
 1993              	.LVL170:
 1994 001e 0323     		movs	r3, #3
 1995 0020 1C40     		ands	r4, r3
 1996              	.LVL171:
1978:Generated_Source\PSoC4/CyLib.c **** 
 1997              		.loc 1 1978 0
 1998 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1999              	.LVL172:
1981:Generated_Source\PSoC4/CyLib.c **** 
 2000              		.loc 1 1981 0
 2001 0026 2000     		movs	r0, r4
 2002              		@ sp needed
 2003              	.LVL173:
 2004 0028 10BD     		pop	{r4, pc}
 2005              	.L160:
 2006 002a C046     		.align	2
 2007              	.L159:
 2008 002c 14000C40 		.word	1074528276
 2009              		.cfi_endproc
 2010              	.LFE26:
 2011              		.size	CySysClkPllGetBypassMode, .-CySysClkPllGetBypassMode
 2012              		.section	.text.CySysClkPllConfigChangeAllowed,"ax",%progbits
 2013              		.align	2
 2014              		.code	16
 2015              		.thumb_func
 2016              		.type	CySysClkPllConfigChangeAllowed, %function
 2017              	CySysClkPllConfigChangeAllowed:
 2018              	.LFB27:
2002:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
 2019              		.loc 1 2002 0
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 0
 2022              		@ frame_needed = 0, uses_anonymous_args = 0
 2023              	.LVL174:
 2024 0000 70B5     		push	{r4, r5, r6, lr}
 2025              		.cfi_def_cfa_offset 16
 2026              		.cfi_offset 4, -16
 2027              		.cfi_offset 5, -12
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 92


 2028              		.cfi_offset 6, -8
 2029              		.cfi_offset 14, -4
 2030 0002 0400     		movs	r4, r0
 2031              	.LVL175:
2007:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
 2032              		.loc 1 2007 0
 2033 0004 FFF7FEFF 		bl	CySysClkGetSysclkSource
 2034              	.LVL176:
 2035 0008 0500     		movs	r5, r0
 2036              	.LVL177:
2008:Generated_Source\PSoC4/CyLib.c **** 
 2037              		.loc 1 2008 0
 2038 000a 2000     		movs	r0, r4
 2039              	.LVL178:
 2040 000c FFF7FEFF 		bl	CySysClkPllGetBypassMode
 2041              	.LVL179:
2010:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
 2042              		.loc 1 2010 0
 2043 0010 0228     		cmp	r0, #2
 2044 0012 0DD0     		beq	.L164
2010:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
 2045              		.loc 1 2010 0 is_stmt 0 discriminator 1
 2046 0014 8023     		movs	r3, #128
 2047 0016 9B02     		lsls	r3, r3, #10
 2048 0018 9D42     		cmp	r5, r3
 2049 001a 01D0     		beq	.L163
2011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
 2050              		.loc 1 2011 0 is_stmt 1
 2051 001c 002C     		cmp	r4, #0
 2052 001e 09D0     		beq	.L165
 2053              	.L163:
2013:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
 2054              		.loc 1 2013 0
 2055 0020 8023     		movs	r3, #128
 2056 0022 5B02     		lsls	r3, r3, #9
 2057 0024 9D42     		cmp	r5, r3
 2058 0026 07D0     		beq	.L166
2013:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
 2059              		.loc 1 2013 0 is_stmt 0 discriminator 1
 2060 0028 012C     		cmp	r4, #1
 2061 002a 07D0     		beq	.L167
2005:Generated_Source\PSoC4/CyLib.c **** 
 2062              		.loc 1 2005 0 is_stmt 1
 2063 002c 1120     		movs	r0, #17
 2064              	.LVL180:
 2065 002e 06E0     		b	.L162
 2066              	.LVL181:
 2067              	.L164:
2017:Generated_Source\PSoC4/CyLib.c ****         }
 2068              		.loc 1 2017 0
 2069 0030 0020     		movs	r0, #0
 2070              	.LVL182:
 2071 0032 04E0     		b	.L162
 2072              	.LVL183:
 2073              	.L165:
 2074 0034 0020     		movs	r0, #0
 2075              	.LVL184:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 93


 2076 0036 02E0     		b	.L162
 2077              	.LVL185:
 2078              	.L166:
2005:Generated_Source\PSoC4/CyLib.c **** 
 2079              		.loc 1 2005 0
 2080 0038 1120     		movs	r0, #17
 2081              	.LVL186:
 2082 003a 00E0     		b	.L162
 2083              	.LVL187:
 2084              	.L167:
2017:Generated_Source\PSoC4/CyLib.c ****         }
 2085              		.loc 1 2017 0
 2086 003c 0020     		movs	r0, #0
 2087              	.LVL188:
 2088              	.L162:
2021:Generated_Source\PSoC4/CyLib.c **** 
 2089              		.loc 1 2021 0
 2090              		@ sp needed
 2091              	.LVL189:
 2092              	.LVL190:
 2093 003e 70BD     		pop	{r4, r5, r6, pc}
 2094              		.cfi_endproc
 2095              	.LFE27:
 2096              		.size	CySysClkPllConfigChangeAllowed, .-CySysClkPllConfigChangeAllowed
 2097              		.section	.text.CySysClkPllSetPQ,"ax",%progbits
 2098              		.align	2
 2099              		.global	CySysClkPllSetPQ
 2100              		.code	16
 2101              		.thumb_func
 2102              		.type	CySysClkPllSetPQ, %function
 2103              	CySysClkPllSetPQ:
 2104              	.LFB24:
1870:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
 2105              		.loc 1 1870 0
 2106              		.cfi_startproc
 2107              		@ args = 0, pretend = 0, frame = 8
 2108              		@ frame_needed = 0, uses_anonymous_args = 0
 2109              	.LVL191:
 2110 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2111              		.cfi_def_cfa_offset 20
 2112              		.cfi_offset 4, -20
 2113              		.cfi_offset 5, -16
 2114              		.cfi_offset 6, -12
 2115              		.cfi_offset 7, -8
 2116              		.cfi_offset 14, -4
 2117 0002 83B0     		sub	sp, sp, #12
 2118              		.cfi_def_cfa_offset 32
 2119 0004 0400     		movs	r4, r0
 2120 0006 0D00     		movs	r5, r1
 2121 0008 1600     		movs	r6, r2
 2122 000a 1F00     		movs	r7, r3
 2123              	.LVL192:
1876:Generated_Source\PSoC4/CyLib.c **** 
 2124              		.loc 1 1876 0
 2125 000c FFF7FEFF 		bl	CyEnterCriticalSection
 2126              	.LVL193:
 2127 0010 0190     		str	r0, [sp, #4]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 94


 2128              	.LVL194:
1878:Generated_Source\PSoC4/CyLib.c **** 
 2129              		.loc 1 1878 0
 2130 0012 2000     		movs	r0, r4
 2131 0014 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2132              	.LVL195:
1880:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 2133              		.loc 1 1880 0
 2134 0018 012C     		cmp	r4, #1
 2135 001a 29D8     		bhi	.L170
1880:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 2136              		.loc 1 1880 0 is_stmt 0 discriminator 1
 2137 001c 032D     		cmp	r5, #3
 2138 001e 29D9     		bls	.L171
1881:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 2139              		.loc 1 1881 0 is_stmt 1
 2140 0020 0423     		movs	r3, #4
 2141 0022 FF33     		adds	r3, r3, #255
 2142 0024 9D42     		cmp	r5, r3
 2143 0026 27D8     		bhi	.L172
1881:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 2144              		.loc 1 1881 0 is_stmt 0 discriminator 1
 2145 0028 002E     		cmp	r6, #0
 2146 002a 27D0     		beq	.L173
1882:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 2147              		.loc 1 1882 0 is_stmt 1
 2148 002c 402E     		cmp	r6, #64
 2149 002e 27D8     		bhi	.L174
1882:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 2150              		.loc 1 1882 0 is_stmt 0 discriminator 1
 2151 0030 012F     		cmp	r7, #1
 2152 0032 27D9     		bls	.L175
1883:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
 2153              		.loc 1 1883 0 is_stmt 1
 2154 0034 032F     		cmp	r7, #3
 2155 0036 27D8     		bhi	.L176
1883:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
 2156              		.loc 1 1883 0 is_stmt 0 discriminator 1
 2157 0038 0028     		cmp	r0, #0
 2158 003a 27D1     		bne	.L177
1887:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
 2159              		.loc 1 1887 0 is_stmt 1
 2160 003c 174B     		ldr	r3, .L178
 2161 003e 6200     		lsls	r2, r4, #1
 2162 0040 1019     		adds	r0, r2, r4
 2163              	.LVL196:
 2164 0042 8100     		lsls	r1, r0, #2
 2165 0044 C858     		ldr	r0, [r1, r3]
 2166 0046 1649     		ldr	r1, .L178+4
 2167 0048 0140     		ands	r1, r0
 2168              	.LVL197:
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
 2169              		.loc 1 1891 0
 2170 004a FF20     		movs	r0, #255
 2171 004c 0540     		ands	r5, r0
 2172              	.LVL198:
 2173 004e 0D43     		orrs	r5, r1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 95


 2174              	.LVL199:
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
 2175              		.loc 1 1892 0
 2176 0050 013E     		subs	r6, r6, #1
 2177              	.LVL200:
 2178 0052 3602     		lsls	r6, r6, #8
 2179              	.LVL201:
 2180 0054 FC21     		movs	r1, #252
 2181 0056 8901     		lsls	r1, r1, #6
 2182 0058 0E40     		ands	r6, r1
 2183 005a 3543     		orrs	r5, r6
 2184              	.LVL202:
1893:Generated_Source\PSoC4/CyLib.c **** 
 2185              		.loc 1 1893 0
 2186 005c 3F04     		lsls	r7, r7, #16
 2187              	.LVL203:
 2188 005e E021     		movs	r1, #224
 2189 0060 C902     		lsls	r1, r1, #11
 2190 0062 0F40     		ands	r7, r1
 2191 0064 2F43     		orrs	r7, r5
 2192              	.LVL204:
1895:Generated_Source\PSoC4/CyLib.c **** 
 2193              		.loc 1 1895 0
 2194 0066 1419     		adds	r4, r2, r4
 2195              	.LVL205:
 2196 0068 A200     		lsls	r2, r4, #2
 2197 006a D750     		str	r7, [r2, r3]
 2198              	.LVL206:
1897:Generated_Source\PSoC4/CyLib.c ****         }
 2199              		.loc 1 1897 0
 2200 006c 0024     		movs	r4, #0
 2201 006e 0EE0     		b	.L169
 2202              	.LVL207:
 2203              	.L170:
1874:Generated_Source\PSoC4/CyLib.c **** 
 2204              		.loc 1 1874 0
 2205 0070 0124     		movs	r4, #1
 2206              	.LVL208:
 2207 0072 0CE0     		b	.L169
 2208              	.LVL209:
 2209              	.L171:
 2210 0074 0124     		movs	r4, #1
 2211              	.LVL210:
 2212 0076 0AE0     		b	.L169
 2213              	.LVL211:
 2214              	.L172:
 2215 0078 0124     		movs	r4, #1
 2216              	.LVL212:
 2217 007a 08E0     		b	.L169
 2218              	.LVL213:
 2219              	.L173:
 2220 007c 0124     		movs	r4, #1
 2221              	.LVL214:
 2222 007e 06E0     		b	.L169
 2223              	.LVL215:
 2224              	.L174:
 2225 0080 0124     		movs	r4, #1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 96


 2226              	.LVL216:
 2227 0082 04E0     		b	.L169
 2228              	.LVL217:
 2229              	.L175:
 2230 0084 0124     		movs	r4, #1
 2231              	.LVL218:
 2232 0086 02E0     		b	.L169
 2233              	.LVL219:
 2234              	.L176:
 2235 0088 0124     		movs	r4, #1
 2236              	.LVL220:
 2237 008a 00E0     		b	.L169
 2238              	.LVL221:
 2239              	.L177:
 2240 008c 0124     		movs	r4, #1
 2241              	.LVL222:
 2242              	.L169:
1900:Generated_Source\PSoC4/CyLib.c **** 
 2243              		.loc 1 1900 0
 2244 008e 0198     		ldr	r0, [sp, #4]
 2245 0090 FFF7FEFF 		bl	CyExitCriticalSection
 2246              	.LVL223:
1903:Generated_Source\PSoC4/CyLib.c **** 
 2247              		.loc 1 1903 0
 2248 0094 2000     		movs	r0, r4
 2249 0096 03B0     		add	sp, sp, #12
 2250              		@ sp needed
 2251              	.LVL224:
 2252 0098 F0BD     		pop	{r4, r5, r6, r7, pc}
 2253              	.L179:
 2254 009a C046     		.align	2
 2255              	.L178:
 2256 009c 14000C40 		.word	1074528276
 2257 00a0 00C0F8FF 		.word	-475136
 2258              		.cfi_endproc
 2259              	.LFE24:
 2260              		.size	CySysClkPllSetPQ, .-CySysClkPllSetPQ
 2261              		.section	.text.CySysClkPllSetOutputDivider,"ax",%progbits
 2262              		.align	2
 2263              		.global	CySysClkPllSetOutputDivider
 2264              		.code	16
 2265              		.thumb_func
 2266              		.type	CySysClkPllSetOutputDivider, %function
 2267              	CySysClkPllSetOutputDivider:
 2268              	.LFB31:
2263:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
 2269              		.loc 1 2263 0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 0
 2272              		@ frame_needed = 0, uses_anonymous_args = 0
 2273              	.LVL225:
 2274 0000 70B5     		push	{r4, r5, r6, lr}
 2275              		.cfi_def_cfa_offset 16
 2276              		.cfi_offset 4, -16
 2277              		.cfi_offset 5, -12
 2278              		.cfi_offset 6, -8
 2279              		.cfi_offset 14, -4
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 97


 2280 0002 0400     		movs	r4, r0
 2281 0004 0D00     		movs	r5, r1
 2282              	.LVL226:
2270:Generated_Source\PSoC4/CyLib.c **** 
 2283              		.loc 1 2270 0
 2284 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 2285              	.LVL227:
 2286 000a 0600     		movs	r6, r0
 2287              	.LVL228:
2272:Generated_Source\PSoC4/CyLib.c **** 
 2288              		.loc 1 2272 0
 2289 000c 2000     		movs	r0, r4
 2290 000e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2291              	.LVL229:
2274:Generated_Source\PSoC4/CyLib.c ****         {
 2292              		.loc 1 2274 0
 2293 0012 012C     		cmp	r4, #1
 2294 0014 12D8     		bhi	.L182
2274:Generated_Source\PSoC4/CyLib.c ****         {
 2295              		.loc 1 2274 0 is_stmt 0 discriminator 1
 2296 0016 0028     		cmp	r0, #0
 2297 0018 12D1     		bne	.L183
2274:Generated_Source\PSoC4/CyLib.c ****         {
 2298              		.loc 1 2274 0 discriminator 2
 2299 001a 032D     		cmp	r5, #3
 2300 001c 12D8     		bhi	.L184
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
 2301              		.loc 1 2276 0 is_stmt 1
 2302 001e 0C4A     		ldr	r2, .L185
 2303 0020 6100     		lsls	r1, r4, #1
 2304 0022 0819     		adds	r0, r1, r4
 2305              	.LVL230:
 2306 0024 8300     		lsls	r3, r0, #2
 2307 0026 9858     		ldr	r0, [r3, r2]
 2308 0028 0A4B     		ldr	r3, .L185+4
 2309 002a 0340     		ands	r3, r0
 2310              	.LVL231:
2277:Generated_Source\PSoC4/CyLib.c **** 
 2311              		.loc 1 2277 0
 2312 002c AD07     		lsls	r5, r5, #30
 2313              	.LVL232:
 2314 002e 2D0C     		lsrs	r5, r5, #16
 2315 0030 1D43     		orrs	r5, r3
 2316              	.LVL233:
2279:Generated_Source\PSoC4/CyLib.c **** 
 2317              		.loc 1 2279 0
 2318 0032 0C19     		adds	r4, r1, r4
 2319              	.LVL234:
 2320 0034 A300     		lsls	r3, r4, #2
 2321 0036 9D50     		str	r5, [r3, r2]
 2322              	.LVL235:
2281:Generated_Source\PSoC4/CyLib.c ****         }
 2323              		.loc 1 2281 0
 2324 0038 0024     		movs	r4, #0
 2325 003a 04E0     		b	.L181
 2326              	.LVL236:
 2327              	.L182:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 98


2266:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
 2328              		.loc 1 2266 0
 2329 003c 0124     		movs	r4, #1
 2330              	.LVL237:
 2331 003e 02E0     		b	.L181
 2332              	.LVL238:
 2333              	.L183:
 2334 0040 0124     		movs	r4, #1
 2335              	.LVL239:
 2336 0042 00E0     		b	.L181
 2337              	.LVL240:
 2338              	.L184:
 2339 0044 0124     		movs	r4, #1
 2340              	.LVL241:
 2341              	.L181:
2284:Generated_Source\PSoC4/CyLib.c **** 
 2342              		.loc 1 2284 0
 2343 0046 3000     		movs	r0, r6
 2344 0048 FFF7FEFF 		bl	CyExitCriticalSection
 2345              	.LVL242:
2287:Generated_Source\PSoC4/CyLib.c **** 
 2346              		.loc 1 2287 0
 2347 004c 2000     		movs	r0, r4
 2348              		@ sp needed
 2349              	.LVL243:
 2350              	.LVL244:
 2351 004e 70BD     		pop	{r4, r5, r6, pc}
 2352              	.L186:
 2353              		.align	2
 2354              	.L185:
 2355 0050 14000C40 		.word	1074528276
 2356 0054 FF3FFFFF 		.word	-49153
 2357              		.cfi_endproc
 2358              	.LFE31:
 2359              		.size	CySysClkPllSetOutputDivider, .-CySysClkPllSetOutputDivider
 2360              		.global	__aeabi_idiv
 2361              		.section	.text.CySysClkPllSetFrequency,"ax",%progbits
 2362              		.align	2
 2363              		.global	CySysClkPllSetFrequency
 2364              		.code	16
 2365              		.thumb_func
 2366              		.type	CySysClkPllSetFrequency, %function
 2367              	CySysClkPllSetFrequency:
 2368              	.LFB29:
2095:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
 2369              		.loc 1 2095 0
 2370              		.cfi_startproc
 2371              		@ args = 4, pretend = 0, frame = 8
 2372              		@ frame_needed = 0, uses_anonymous_args = 0
 2373              	.LVL245:
 2374 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2375              		.cfi_def_cfa_offset 20
 2376              		.cfi_offset 4, -20
 2377              		.cfi_offset 5, -16
 2378              		.cfi_offset 6, -12
 2379              		.cfi_offset 7, -8
 2380              		.cfi_offset 14, -4
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 99


 2381 0002 5746     		mov	r7, r10
 2382 0004 4E46     		mov	r6, r9
 2383 0006 C0B4     		push	{r6, r7}
 2384              		.cfi_def_cfa_offset 28
 2385              		.cfi_offset 9, -28
 2386              		.cfi_offset 10, -24
 2387 0008 83B0     		sub	sp, sp, #12
 2388              		.cfi_def_cfa_offset 40
 2389 000a 0400     		movs	r4, r0
 2390 000c 0D00     		movs	r5, r1
 2391 000e 1600     		movs	r6, r2
 2392 0010 0193     		str	r3, [sp, #4]
 2393              	.LVL246:
2112:Generated_Source\PSoC4/CyLib.c **** 
 2394              		.loc 1 2112 0
 2395 0012 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2396              	.LVL247:
2114:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 2397              		.loc 1 2114 0
 2398 0016 012C     		cmp	r4, #1
 2399 0018 58D8     		bhi	.L195
2114:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 2400              		.loc 1 2114 0 is_stmt 0 discriminator 1
 2401 001a 384B     		ldr	r3, .L205
 2402 001c 9D42     		cmp	r5, r3
 2403 001e 57D9     		bls	.L196
2115:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 2404              		.loc 1 2115 0 is_stmt 1
 2405 0020 C023     		movs	r3, #192
 2406 0022 1B02     		lsls	r3, r3, #8
 2407 0024 9D42     		cmp	r5, r3
 2408 0026 55D8     		bhi	.L197
2115:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 2409              		.loc 1 2115 0 is_stmt 0 discriminator 1
 2410 0028 354B     		ldr	r3, .L205+4
 2411 002a 9E42     		cmp	r6, r3
 2412 002c 54D9     		bls	.L198
2116:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 2413              		.loc 1 2116 0 is_stmt 1
 2414 002e C023     		movs	r3, #192
 2415 0030 1B02     		lsls	r3, r3, #8
 2416 0032 9E42     		cmp	r6, r3
 2417 0034 52D8     		bhi	.L199
2116:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 2418              		.loc 1 2116 0 is_stmt 0 discriminator 1
 2419 0036 019B     		ldr	r3, [sp, #4]
 2420 0038 032B     		cmp	r3, #3
 2421 003a 51D8     		bhi	.L200
2117:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
 2422              		.loc 1 2117 0 is_stmt 1
 2423 003c 0028     		cmp	r0, #0
 2424 003e 51D1     		bne	.L201
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
 2425              		.loc 1 2122 0
 2426 0040 3049     		ldr	r1, .L205+8
 2427 0042 314B     		ldr	r3, .L205+12
 2428 0044 E818     		adds	r0, r5, r3
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 100


 2429              	.LVL248:
 2430 0046 FFF7FEFF 		bl	__aeabi_uidiv
 2431              	.LVL249:
 2432 004a 071E     		subs	r7, r0, #0
 2433              	.LVL250:
2123:Generated_Source\PSoC4/CyLib.c **** 
 2434              		.loc 1 2123 0
 2435 004c 00D1     		bne	.L189
 2436 004e 0137     		adds	r7, r7, #1
 2437              	.L189:
 2438              	.LVL251:
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
 2439              		.loc 1 2126 0 discriminator 4
 2440 0050 FA21     		movs	r1, #250
 2441 0052 8900     		lsls	r1, r1, #2
 2442 0054 2800     		movs	r0, r5
 2443 0056 FFF7FEFF 		bl	__aeabi_uidiv
 2444              	.LVL252:
2127:Generated_Source\PSoC4/CyLib.c **** 
 2445              		.loc 1 2127 0 discriminator 4
 2446 005a 8246     		mov	r10, r0
 2447 005c 4028     		cmp	r0, #64
 2448 005e 01D9     		bls	.L190
 2449 0060 4023     		movs	r3, #64
 2450 0062 9A46     		mov	r10, r3
 2451              	.L190:
 2452              	.LVL253:
2129:Generated_Source\PSoC4/CyLib.c ****             {
 2453              		.loc 1 2129 0 discriminator 4
 2454 0064 5745     		cmp	r7, r10
 2455 0066 1AD9     		bls	.L191
2109:Generated_Source\PSoC4/CyLib.c **** 
 2456              		.loc 1 2109 0
 2457 0068 0120     		movs	r0, #1
 2458 006a 42E0     		b	.L188
 2459              	.LVL254:
 2460              	.L194:
2136:Generated_Source\PSoC4/CyLib.c **** 
 2461              		.loc 1 2136 0
 2462 006c 6B08     		lsrs	r3, r5, #1
 2463 006e 3000     		movs	r0, r6
 2464 0070 7843     		muls	r0, r7
 2465 0072 C018     		adds	r0, r0, r3
 2466 0074 2900     		movs	r1, r5
 2467 0076 FFF7FEFF 		bl	__aeabi_uidiv
 2468              	.LVL255:
 2469 007a 8146     		mov	r9, r0
 2470              	.LVL256:
2139:Generated_Source\PSoC4/CyLib.c **** 
 2471              		.loc 1 2139 0
 2472 007c 6843     		muls	r0, r5
 2473              	.LVL257:
 2474 007e 3900     		movs	r1, r7
 2475 0080 FFF7FEFF 		bl	__aeabi_uidiv
 2476              	.LVL258:
2142:Generated_Source\PSoC4/CyLib.c **** 
 2477              		.loc 1 2142 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 101


 2478 0084 801B     		subs	r0, r0, r6
 2479              	.LVL259:
 2480 0086 214B     		ldr	r3, .L205+16
 2481 0088 5843     		muls	r0, r3
 2482 008a 3100     		movs	r1, r6
 2483 008c FFF7FEFF 		bl	__aeabi_idiv
 2484              	.LVL260:
2145:Generated_Source\PSoC4/CyLib.c ****                     {
 2485              		.loc 1 2145 0
 2486 0090 0A9A     		ldr	r2, [sp, #40]
 2487 0092 5342     		rsbs	r3, r2, #0
 2488 0094 9842     		cmp	r0, r3
 2489 0096 01DB     		blt	.L192
2145:Generated_Source\PSoC4/CyLib.c ****                     {
 2490              		.loc 1 2145 0 is_stmt 0 discriminator 1
 2491 0098 9042     		cmp	r0, r2
 2492 009a 05DD     		ble	.L193
 2493              	.L192:
2131:Generated_Source\PSoC4/CyLib.c ****                 {
 2494              		.loc 1 2131 0 is_stmt 1 discriminator 2
 2495 009c 0137     		adds	r7, r7, #1
 2496              	.LVL261:
 2497              	.L191:
2131:Generated_Source\PSoC4/CyLib.c ****                 {
 2498              		.loc 1 2131 0 is_stmt 0 discriminator 1
 2499 009e 5745     		cmp	r7, r10
 2500 00a0 E4D9     		bls	.L194
2100:Generated_Source\PSoC4/CyLib.c **** 
 2501              		.loc 1 2100 0 is_stmt 1
 2502 00a2 0023     		movs	r3, #0
 2503 00a4 9946     		mov	r9, r3
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
 2504              		.loc 1 2099 0
 2505 00a6 0027     		movs	r7, #0
 2506              	.LVL262:
 2507              	.L193:
2154:Generated_Source\PSoC4/CyLib.c ****                 {
 2508              		.loc 1 2154 0
 2509 00a8 4B46     		mov	r3, r9
 2510 00aa 002B     		cmp	r3, #0
 2511 00ac 1CD0     		beq	.L202
2154:Generated_Source\PSoC4/CyLib.c ****                 {
 2512              		.loc 1 2154 0 is_stmt 0 discriminator 1
 2513 00ae 002F     		cmp	r7, #0
 2514 00b0 1CD0     		beq	.L203
2156:Generated_Source\PSoC4/CyLib.c ****                     {
 2515              		.loc 1 2156 0 is_stmt 1
 2516 00b2 0223     		movs	r3, #2
 2517 00b4 3A00     		movs	r2, r7
 2518 00b6 4946     		mov	r1, r9
 2519 00b8 2000     		movs	r0, r4
 2520 00ba FFF7FEFF 		bl	CySysClkPllSetPQ
 2521              	.LVL263:
 2522 00be 0028     		cmp	r0, #0
 2523 00c0 16D1     		bne	.L204
2158:Generated_Source\PSoC4/CyLib.c ****                     }
 2524              		.loc 1 2158 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 102


 2525 00c2 0199     		ldr	r1, [sp, #4]
 2526 00c4 2000     		movs	r0, r4
 2527 00c6 FFF7FEFF 		bl	CySysClkPllSetOutputDivider
 2528              	.LVL264:
 2529 00ca 12E0     		b	.L188
 2530              	.LVL265:
 2531              	.L195:
2109:Generated_Source\PSoC4/CyLib.c **** 
 2532              		.loc 1 2109 0
 2533 00cc 0120     		movs	r0, #1
 2534              	.LVL266:
 2535 00ce 10E0     		b	.L188
 2536              	.LVL267:
 2537              	.L196:
 2538 00d0 0120     		movs	r0, #1
 2539              	.LVL268:
 2540 00d2 0EE0     		b	.L188
 2541              	.LVL269:
 2542              	.L197:
 2543 00d4 0120     		movs	r0, #1
 2544              	.LVL270:
 2545 00d6 0CE0     		b	.L188
 2546              	.LVL271:
 2547              	.L198:
 2548 00d8 0120     		movs	r0, #1
 2549              	.LVL272:
 2550 00da 0AE0     		b	.L188
 2551              	.LVL273:
 2552              	.L199:
 2553 00dc 0120     		movs	r0, #1
 2554              	.LVL274:
 2555 00de 08E0     		b	.L188
 2556              	.LVL275:
 2557              	.L200:
 2558 00e0 0120     		movs	r0, #1
 2559              	.LVL276:
 2560 00e2 06E0     		b	.L188
 2561              	.LVL277:
 2562              	.L201:
 2563 00e4 0120     		movs	r0, #1
 2564              	.LVL278:
 2565 00e6 04E0     		b	.L188
 2566              	.LVL279:
 2567              	.L202:
 2568 00e8 0120     		movs	r0, #1
 2569 00ea 02E0     		b	.L188
 2570              	.L203:
 2571 00ec 0120     		movs	r0, #1
 2572 00ee 00E0     		b	.L188
 2573              	.LVL280:
 2574              	.L204:
 2575 00f0 0120     		movs	r0, #1
 2576              	.LVL281:
 2577              	.L188:
2166:Generated_Source\PSoC4/CyLib.c **** 
 2578              		.loc 1 2166 0
 2579 00f2 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 103


 2580              		@ sp needed
 2581              	.LVL282:
 2582              	.LVL283:
 2583              	.LVL284:
 2584 00f4 0CBC     		pop	{r2, r3}
 2585 00f6 9146     		mov	r9, r2
 2586 00f8 9A46     		mov	r10, r3
 2587 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 2588              	.L206:
 2589              		.align	2
 2590              	.L205:
 2591 00fc E7030000 		.word	999
 2592 0100 E3570000 		.word	22499
 2593 0104 B80B0000 		.word	3000
 2594 0108 B70B0000 		.word	2999
 2595 010c 40420F00 		.word	1000000
 2596              		.cfi_endproc
 2597              	.LFE29:
 2598              		.size	CySysClkPllSetFrequency, .-CySysClkPllSetFrequency
 2599              		.section	.text.CyIntSetSysVector,"ax",%progbits
 2600              		.align	2
 2601              		.global	CyIntSetSysVector
 2602              		.code	16
 2603              		.thumb_func
 2604              		.type	CyIntSetSysVector, %function
 2605              	CyIntSetSysVector:
 2606              	.LFB39:
2824:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 2607              		.loc 1 2824 0
 2608              		.cfi_startproc
 2609              		@ args = 0, pretend = 0, frame = 0
 2610              		@ frame_needed = 0, uses_anonymous_args = 0
 2611              	.LVL285:
 2612 0000 70B5     		push	{r4, r5, r6, lr}
 2613              		.cfi_def_cfa_offset 16
 2614              		.cfi_offset 4, -16
 2615              		.cfi_offset 5, -12
 2616              		.cfi_offset 6, -8
 2617              		.cfi_offset 14, -4
 2618 0002 0400     		movs	r4, r0
 2619 0004 0D00     		movs	r5, r1
 2620              	.LVL286:
2828:Generated_Source\PSoC4/CyLib.c **** 
 2621              		.loc 1 2828 0
 2622 0006 0F28     		cmp	r0, #15
 2623 0008 02D9     		bls	.L208
2828:Generated_Source\PSoC4/CyLib.c **** 
 2624              		.loc 1 2828 0 is_stmt 0 discriminator 1
 2625 000a 0020     		movs	r0, #0
 2626              	.LVL287:
 2627 000c FFF7FEFF 		bl	CyHalt
 2628              	.LVL288:
 2629              	.L208:
2831:Generated_Source\PSoC4/CyLib.c **** 
 2630              		.loc 1 2831 0 is_stmt 1
 2631 0010 A400     		lsls	r4, r4, #2
 2632 0012 8023     		movs	r3, #128
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 104


 2633 0014 9B05     		lsls	r3, r3, #22
 2634 0016 9C46     		mov	ip, r3
 2635 0018 6444     		add	r4, r4, ip
 2636 001a 2068     		ldr	r0, [r4]
 2637              	.LVL289:
2834:Generated_Source\PSoC4/CyLib.c **** 
 2638              		.loc 1 2834 0
 2639 001c 2560     		str	r5, [r4]
2837:Generated_Source\PSoC4/CyLib.c **** 
 2640              		.loc 1 2837 0
 2641              		@ sp needed
 2642              	.LVL290:
 2643 001e 70BD     		pop	{r4, r5, r6, pc}
 2644              		.cfi_endproc
 2645              	.LFE39:
 2646              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 2647              		.section	.text.CyIntGetSysVector,"ax",%progbits
 2648              		.align	2
 2649              		.global	CyIntGetSysVector
 2650              		.code	16
 2651              		.thumb_func
 2652              		.type	CyIntGetSysVector, %function
 2653              	CyIntGetSysVector:
 2654              	.LFB40:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2655              		.loc 1 2858 0
 2656              		.cfi_startproc
 2657              		@ args = 0, pretend = 0, frame = 0
 2658              		@ frame_needed = 0, uses_anonymous_args = 0
 2659              	.LVL291:
 2660 0000 10B5     		push	{r4, lr}
 2661              		.cfi_def_cfa_offset 8
 2662              		.cfi_offset 4, -8
 2663              		.cfi_offset 14, -4
 2664 0002 0400     		movs	r4, r0
 2665              	.LVL292:
2861:Generated_Source\PSoC4/CyLib.c **** 
 2666              		.loc 1 2861 0
 2667 0004 0F28     		cmp	r0, #15
 2668 0006 02D9     		bls	.L210
2861:Generated_Source\PSoC4/CyLib.c **** 
 2669              		.loc 1 2861 0 is_stmt 0 discriminator 1
 2670 0008 0020     		movs	r0, #0
 2671              	.LVL293:
 2672 000a FFF7FEFF 		bl	CyHalt
 2673              	.LVL294:
 2674              	.L210:
2863:Generated_Source\PSoC4/CyLib.c **** }
 2675              		.loc 1 2863 0 is_stmt 1
 2676 000e A400     		lsls	r4, r4, #2
 2677 0010 8023     		movs	r3, #128
 2678 0012 9B05     		lsls	r3, r3, #22
 2679 0014 9C46     		mov	ip, r3
 2680 0016 6444     		add	r4, r4, ip
 2681 0018 2068     		ldr	r0, [r4]
2864:Generated_Source\PSoC4/CyLib.c **** 
 2682              		.loc 1 2864 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 105


 2683              		@ sp needed
 2684 001a 10BD     		pop	{r4, pc}
 2685              		.cfi_endproc
 2686              	.LFE40:
 2687              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 2688              		.section	.text.CyIntSetVector,"ax",%progbits
 2689              		.align	2
 2690              		.global	CyIntSetVector
 2691              		.code	16
 2692              		.thumb_func
 2693              		.type	CyIntSetVector, %function
 2694              	CyIntSetVector:
 2695              	.LFB41:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 2696              		.loc 1 2880 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
 2700              	.LVL295:
 2701 0000 70B5     		push	{r4, r5, r6, lr}
 2702              		.cfi_def_cfa_offset 16
 2703              		.cfi_offset 4, -16
 2704              		.cfi_offset 5, -12
 2705              		.cfi_offset 6, -8
 2706              		.cfi_offset 14, -4
 2707 0002 0400     		movs	r4, r0
 2708 0004 0D00     		movs	r5, r1
 2709              	.LVL296:
2884:Generated_Source\PSoC4/CyLib.c **** 
 2710              		.loc 1 2884 0
 2711 0006 1F28     		cmp	r0, #31
 2712 0008 02D9     		bls	.L212
2884:Generated_Source\PSoC4/CyLib.c **** 
 2713              		.loc 1 2884 0 is_stmt 0 discriminator 1
 2714 000a 0020     		movs	r0, #0
 2715              	.LVL297:
 2716 000c FFF7FEFF 		bl	CyHalt
 2717              	.LVL298:
 2718              	.L212:
2887:Generated_Source\PSoC4/CyLib.c **** 
 2719              		.loc 1 2887 0 is_stmt 1
 2720 0010 1034     		adds	r4, r4, #16
 2721 0012 A400     		lsls	r4, r4, #2
 2722 0014 8023     		movs	r3, #128
 2723 0016 9B05     		lsls	r3, r3, #22
 2724 0018 9C46     		mov	ip, r3
 2725 001a 6444     		add	r4, r4, ip
 2726 001c 2068     		ldr	r0, [r4]
 2727              	.LVL299:
2890:Generated_Source\PSoC4/CyLib.c **** 
 2728              		.loc 1 2890 0
 2729 001e 2560     		str	r5, [r4]
2893:Generated_Source\PSoC4/CyLib.c **** 
 2730              		.loc 1 2893 0
 2731              		@ sp needed
 2732              	.LVL300:
 2733 0020 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 106


 2734              		.cfi_endproc
 2735              	.LFE41:
 2736              		.size	CyIntSetVector, .-CyIntSetVector
 2737 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 2738              		.align	2
 2739              		.global	CyIntGetVector
 2740              		.code	16
 2741              		.thumb_func
 2742              		.type	CyIntGetVector, %function
 2743              	CyIntGetVector:
 2744              	.LFB42:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2745              		.loc 1 2908 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 0
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749              	.LVL301:
 2750 0000 10B5     		push	{r4, lr}
 2751              		.cfi_def_cfa_offset 8
 2752              		.cfi_offset 4, -8
 2753              		.cfi_offset 14, -4
 2754 0002 0400     		movs	r4, r0
 2755              	.LVL302:
2911:Generated_Source\PSoC4/CyLib.c **** 
 2756              		.loc 1 2911 0
 2757 0004 1F28     		cmp	r0, #31
 2758 0006 02D9     		bls	.L214
2911:Generated_Source\PSoC4/CyLib.c **** 
 2759              		.loc 1 2911 0 is_stmt 0 discriminator 1
 2760 0008 0020     		movs	r0, #0
 2761              	.LVL303:
 2762 000a FFF7FEFF 		bl	CyHalt
 2763              	.LVL304:
 2764              	.L214:
2913:Generated_Source\PSoC4/CyLib.c **** }
 2765              		.loc 1 2913 0 is_stmt 1
 2766 000e 1034     		adds	r4, r4, #16
 2767 0010 A400     		lsls	r4, r4, #2
 2768 0012 8023     		movs	r3, #128
 2769 0014 9B05     		lsls	r3, r3, #22
 2770 0016 9C46     		mov	ip, r3
 2771 0018 6444     		add	r4, r4, ip
 2772 001a 2068     		ldr	r0, [r4]
2914:Generated_Source\PSoC4/CyLib.c **** 
 2773              		.loc 1 2914 0
 2774              		@ sp needed
 2775 001c 10BD     		pop	{r4, pc}
 2776              		.cfi_endproc
 2777              	.LFE42:
 2778              		.size	CyIntGetVector, .-CyIntGetVector
 2779 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 2780              		.align	2
 2781              		.global	CyIntSetPriority
 2782              		.code	16
 2783              		.thumb_func
 2784              		.type	CyIntSetPriority, %function
 2785              	CyIntSetPriority:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 107


 2786              	.LFB43:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 2787              		.loc 1 2927 0
 2788              		.cfi_startproc
 2789              		@ args = 0, pretend = 0, frame = 0
 2790              		@ frame_needed = 0, uses_anonymous_args = 0
 2791              	.LVL305:
 2792 0000 70B5     		push	{r4, r5, r6, lr}
 2793              		.cfi_def_cfa_offset 16
 2794              		.cfi_offset 4, -16
 2795              		.cfi_offset 5, -12
 2796              		.cfi_offset 6, -8
 2797              		.cfi_offset 14, -4
 2798 0002 0400     		movs	r4, r0
 2799 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2800              		.loc 1 2932 0
 2801 0006 0329     		cmp	r1, #3
 2802 0008 02D9     		bls	.L216
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2803              		.loc 1 2932 0 is_stmt 0 discriminator 1
 2804 000a 0020     		movs	r0, #0
 2805              	.LVL306:
 2806 000c FFF7FEFF 		bl	CyHalt
 2807              	.LVL307:
 2808              	.L216:
2933:Generated_Source\PSoC4/CyLib.c **** 
 2809              		.loc 1 2933 0 is_stmt 1
 2810 0010 1F2C     		cmp	r4, #31
 2811 0012 02D9     		bls	.L217
2933:Generated_Source\PSoC4/CyLib.c **** 
 2812              		.loc 1 2933 0 is_stmt 0 discriminator 1
 2813 0014 0020     		movs	r0, #0
 2814 0016 FFF7FEFF 		bl	CyHalt
 2815              	.LVL308:
 2816              	.L217:
2935:Generated_Source\PSoC4/CyLib.c **** 
 2817              		.loc 1 2935 0 is_stmt 1
 2818 001a 0325     		movs	r5, #3
 2819 001c 2540     		ands	r5, r4
 2820 001e ED00     		lsls	r5, r5, #3
 2821 0020 0635     		adds	r5, r5, #6
 2822              	.LVL309:
2937:Generated_Source\PSoC4/CyLib.c **** 
 2823              		.loc 1 2937 0
 2824 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 2825              	.LVL310:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 2826              		.loc 1 2939 0
 2827 0026 A408     		lsrs	r4, r4, #2
 2828 0028 A400     		lsls	r4, r4, #2
 2829 002a 074B     		ldr	r3, .L218
 2830 002c 9C46     		mov	ip, r3
 2831 002e 6444     		add	r4, r4, ip
 2832 0030 2168     		ldr	r1, [r4]
 2833              	.LVL311:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 108


 2834              		.loc 1 2940 0
 2835 0032 0323     		movs	r3, #3
 2836 0034 AB40     		lsls	r3, r3, r5
 2837 0036 9943     		bics	r1, r3
 2838              	.LVL312:
 2839 0038 0B00     		movs	r3, r1
 2840              	.LVL313:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 2841              		.loc 1 2941 0
 2842 003a 3100     		movs	r1, r6
 2843              	.LVL314:
 2844 003c A940     		lsls	r1, r1, r5
 2845 003e 1943     		orrs	r1, r3
 2846              	.LVL315:
2942:Generated_Source\PSoC4/CyLib.c **** 
 2847              		.loc 1 2942 0
 2848 0040 2160     		str	r1, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 2849              		.loc 1 2944 0
 2850 0042 FFF7FEFF 		bl	CyExitCriticalSection
 2851              	.LVL316:
2945:Generated_Source\PSoC4/CyLib.c **** 
 2852              		.loc 1 2945 0
 2853              		@ sp needed
 2854              	.LVL317:
 2855 0046 70BD     		pop	{r4, r5, r6, pc}
 2856              	.L219:
 2857              		.align	2
 2858              	.L218:
 2859 0048 00E400E0 		.word	-536812544
 2860              		.cfi_endproc
 2861              	.LFE43:
 2862              		.size	CyIntSetPriority, .-CyIntSetPriority
 2863              		.section	.text.CyIntGetPriority,"ax",%progbits
 2864              		.align	2
 2865              		.global	CyIntGetPriority
 2866              		.code	16
 2867              		.thumb_func
 2868              		.type	CyIntGetPriority, %function
 2869              	CyIntGetPriority:
 2870              	.LFB44:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 2871              		.loc 1 2961 0
 2872              		.cfi_startproc
 2873              		@ args = 0, pretend = 0, frame = 0
 2874              		@ frame_needed = 0, uses_anonymous_args = 0
 2875              	.LVL318:
 2876 0000 10B5     		push	{r4, lr}
 2877              		.cfi_def_cfa_offset 8
 2878              		.cfi_offset 4, -8
 2879              		.cfi_offset 14, -4
 2880 0002 0400     		movs	r4, r0
2964:Generated_Source\PSoC4/CyLib.c **** 
 2881              		.loc 1 2964 0
 2882 0004 1F28     		cmp	r0, #31
 2883 0006 02D9     		bls	.L221
2964:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 109


 2884              		.loc 1 2964 0 is_stmt 0 discriminator 1
 2885 0008 0020     		movs	r0, #0
 2886              	.LVL319:
 2887 000a FFF7FEFF 		bl	CyHalt
 2888              	.LVL320:
 2889              	.L221:
2966:Generated_Source\PSoC4/CyLib.c **** 
 2890              		.loc 1 2966 0 is_stmt 1
 2891 000e A308     		lsrs	r3, r4, #2
 2892 0010 9B00     		lsls	r3, r3, #2
 2893 0012 054A     		ldr	r2, .L222
 2894 0014 9446     		mov	ip, r2
 2895 0016 6344     		add	r3, r3, ip
 2896 0018 1868     		ldr	r0, [r3]
 2897 001a 0323     		movs	r3, #3
 2898 001c 1C40     		ands	r4, r3
 2899 001e E400     		lsls	r4, r4, #3
 2900 0020 0634     		adds	r4, r4, #6
 2901 0022 E040     		lsrs	r0, r0, r4
 2902              	.LVL321:
2968:Generated_Source\PSoC4/CyLib.c **** }
 2903              		.loc 1 2968 0
 2904 0024 1840     		ands	r0, r3
 2905              	.LVL322:
2969:Generated_Source\PSoC4/CyLib.c **** 
 2906              		.loc 1 2969 0
 2907              		@ sp needed
 2908 0026 10BD     		pop	{r4, pc}
 2909              	.L223:
 2910              		.align	2
 2911              	.L222:
 2912 0028 00E400E0 		.word	-536812544
 2913              		.cfi_endproc
 2914              	.LFE44:
 2915              		.size	CyIntGetPriority, .-CyIntGetPriority
 2916              		.section	.text.CySoftwareReset,"ax",%progbits
 2917              		.align	2
 2918              		.global	CySoftwareReset
 2919              		.code	16
 2920              		.thumb_func
 2921              		.type	CySoftwareReset, %function
 2922              	CySoftwareReset:
 2923              	.LFB51:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 2924              		.loc 1 3084 0
 2925              		.cfi_startproc
 2926              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 110


 2927              		@ frame_needed = 0, uses_anonymous_args = 0
 2928              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 2929              		.loc 1 3089 0
 2930 0000 034A     		ldr	r2, .L225
 2931 0002 1368     		ldr	r3, [r2]
 2932 0004 1B04     		lsls	r3, r3, #16
 2933 0006 1B0C     		lsrs	r3, r3, #16
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2934              		.loc 1 3090 0
 2935 0008 0249     		ldr	r1, .L225+4
 2936 000a 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2937              		.loc 1 3089 0
 2938 000c 1360     		str	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 2939              		.loc 1 3091 0
 2940              		@ sp needed
 2941 000e 7047     		bx	lr
 2942              	.L226:
 2943              		.align	2
 2944              	.L225:
 2945 0010 0CED00E0 		.word	-536810228
 2946 0014 0400FA05 		.word	100270084
 2947              		.cfi_endproc
 2948              	.LFE51:
 2949              		.size	CySoftwareReset, .-CySoftwareReset
 2950              		.section	.text.CyDelay,"ax",%progbits
 2951              		.align	2
 2952              		.global	CyDelay
 2953              		.code	16
 2954              		.thumb_func
 2955              		.type	CyDelay, %function
 2956              	CyDelay:
 2957              	.LFB52:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 2958              		.loc 1 3104 0
 2959              		.cfi_startproc
 2960              		@ args = 0, pretend = 0, frame = 0
 2961              		@ frame_needed = 0, uses_anonymous_args = 0
 2962              	.LVL323:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 111


 2963 0000 10B5     		push	{r4, lr}
 2964              		.cfi_def_cfa_offset 8
 2965              		.cfi_offset 4, -8
 2966              		.cfi_offset 14, -4
 2967 0002 0400     		movs	r4, r0
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2968              		.loc 1 3105 0
 2969 0004 06E0     		b	.L228
 2970              	.LVL324:
 2971              	.L229:
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 2972              		.loc 1 3110 0
 2973 0006 084B     		ldr	r3, .L230
 2974 0008 5868     		ldr	r0, [r3, #4]
 2975 000a FFF7FEFF 		bl	CyDelayCycles
 2976              	.LVL325:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 2977              		.loc 1 3111 0
 2978 000e 074B     		ldr	r3, .L230+4
 2979 0010 9C46     		mov	ip, r3
 2980 0012 6444     		add	r4, r4, ip
 2981              	.LVL326:
 2982              	.L228:
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2983              		.loc 1 3105 0
 2984 0014 8023     		movs	r3, #128
 2985 0016 1B02     		lsls	r3, r3, #8
 2986 0018 9C42     		cmp	r4, r3
 2987 001a F4D8     		bhi	.L229
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 2988              		.loc 1 3114 0
 2989 001c 024B     		ldr	r3, .L230
 2990 001e 9868     		ldr	r0, [r3, #8]
 2991 0020 6043     		muls	r0, r4
 2992 0022 FFF7FEFF 		bl	CyDelayCycles
 2993              	.LVL327:
3115:Generated_Source\PSoC4/CyLib.c **** }
 2994              		.loc 1 3115 0
 2995              		@ sp needed
 2996              	.LVL328:
 2997 0026 10BD     		pop	{r4, pc}
 2998              	.L231:
 2999              		.align	2
 3000              	.L230:
 3001 0028 00000000 		.word	.LANCHOR2
 3002 002c 0080FFFF 		.word	-32768
 3003              		.cfi_endproc
 3004              	.LFE52:
 3005              		.size	CyDelay, .-CyDelay
 3006              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 3007              		.align	2
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 112


 3008              		.global	CySysClkImoEnableWcoLock
 3009              		.code	16
 3010              		.thumb_func
 3011              		.type	CySysClkImoEnableWcoLock, %function
 3012              	CySysClkImoEnableWcoLock:
 3013              	.LFB3:
 175:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 3014              		.loc 1 175 0
 3015              		.cfi_startproc
 3016              		@ args = 0, pretend = 0, frame = 8
 3017              		@ frame_needed = 0, uses_anonymous_args = 0
 3018 0000 70B5     		push	{r4, r5, r6, lr}
 3019              		.cfi_def_cfa_offset 16
 3020              		.cfi_offset 4, -16
 3021              		.cfi_offset 5, -12
 3022              		.cfi_offset 6, -8
 3023              		.cfi_offset 14, -4
 3024 0002 82B0     		sub	sp, sp, #8
 3025              		.cfi_def_cfa_offset 24
 3026              	.LVL329:
 186:Generated_Source\PSoC4/CyLib.c ****         {
 3027              		.loc 1 186 0
 3028 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 3029              	.LVL330:
 3030 0008 0028     		cmp	r0, #0
 3031 000a 62D0     		beq	.L232
 188:Generated_Source\PSoC4/CyLib.c **** 
 3032              		.loc 1 188 0
 3033 000c FFF7FEFF 		bl	CyEnterCriticalSection
 3034              	.LVL331:
 3035 0010 0500     		movs	r5, r0
 3036              	.LVL332:
 193:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 3037              		.loc 1 193 0
 3038 0012 314A     		ldr	r2, .L241
 3039 0014 1168     		ldr	r1, [r2]
 3040 0016 0123     		movs	r3, #1
 3041 0018 0B43     		orrs	r3, r1
 192:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 3042              		.loc 1 192 0
 3043 001a 1360     		str	r3, [r2]
 3044              	.LVL333:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 3045              		.loc 1 200 0
 3046 001c 0023     		movs	r3, #0
 3047 001e 0AE0     		b	.L234
 3048              	.LVL334:
 3049              	.L237:
 202:Generated_Source\PSoC4/CyLib.c ****                     {
 3050              		.loc 1 202 0
 3051 0020 2E4A     		ldr	r2, .L241+4
 3052 0022 1268     		ldr	r2, [r2]
 3053 0024 3F21     		movs	r1, #63
 3054 0026 0A40     		ands	r2, r1
 3055 0028 2D49     		ldr	r1, .L241+8
 3056 002a C95C     		ldrb	r1, [r1, r3]
 3057 002c 8A42     		cmp	r2, r1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 113


 3058 002e 01D1     		bne	.L235
 204:Generated_Source\PSoC4/CyLib.c ****                         break;
 3059              		.loc 1 204 0
 3060 0030 0333     		adds	r3, r3, #3
 3061              	.LVL335:
 205:Generated_Source\PSoC4/CyLib.c ****                     }
 3062              		.loc 1 205 0
 3063 0032 03E0     		b	.L236
 3064              	.LVL336:
 3065              	.L235:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 3066              		.loc 1 200 0 discriminator 2
 3067 0034 0133     		adds	r3, r3, #1
 3068              	.LVL337:
 3069              	.L234:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 3070              		.loc 1 200 0 is_stmt 0 discriminator 1
 3071 0036 2D2B     		cmp	r3, #45
 3072 0038 F2D9     		bls	.L237
 199:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 3073              		.loc 1 199 0 is_stmt 1
 3074 003a 0323     		movs	r3, #3
 3075              	.LVL338:
 3076              	.L236:
 222:Generated_Source\PSoC4/CyLib.c **** 
 3077              		.loc 1 222 0
 3078 003c 0021     		movs	r1, #0
 3079 003e 294A     		ldr	r2, .L241+12
 3080 0040 1160     		str	r1, [r2]
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 3081              		.loc 1 226 0
 3082 0042 294A     		ldr	r2, .L241+16
 3083 0044 1268     		ldr	r2, [r2]
 3084 0046 D206     		lsls	r2, r2, #27
 3085 0048 06D1     		bne	.L238
 228:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 3086              		.loc 1 228 0
 3087 004a 2748     		ldr	r0, .L241+16
 3088 004c 0268     		ldr	r2, [r0]
 3089 004e 1F31     		adds	r1, r1, #31
 3090 0050 8A43     		bics	r2, r1
 3091 0052 1339     		subs	r1, r1, #19
 3092 0054 0A43     		orrs	r2, r1
 3093 0056 0260     		str	r2, [r0]
 3094              	.L238:
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 3095              		.loc 1 233 0
 3096 0058 244C     		ldr	r4, .L241+20
 3097 005a 2168     		ldr	r1, [r4]
 3098 005c 244A     		ldr	r2, .L241+24
 3099 005e 1140     		ands	r1, r2
 3100              	.LVL339:
 239:Generated_Source\PSoC4/CyLib.c **** 
 3101              		.loc 1 239 0
 3102 0060 244A     		ldr	r2, .L241+28
 3103 0062 5A43     		muls	r2, r3
 3104 0064 8023     		movs	r3, #128
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 114


 3105              	.LVL340:
 3106 0066 DB01     		lsls	r3, r3, #7
 3107 0068 9C46     		mov	ip, r3
 3108 006a 6244     		add	r2, r2, ip
 3109 006c D20B     		lsrs	r2, r2, #15
 3110 006e 013A     		subs	r2, r2, #1
 3111 0070 5205     		lsls	r2, r2, #21
 3112 0072 520D     		lsrs	r2, r2, #21
 3113 0074 0B00     		movs	r3, r1
 3114 0076 1343     		orrs	r3, r2
 3115              	.LVL341:
 242:Generated_Source\PSoC4/CyLib.c **** 
 3116              		.loc 1 242 0
 3117 0078 A022     		movs	r2, #160
 3118 007a 5203     		lsls	r2, r2, #13
 3119 007c 1343     		orrs	r3, r2
 3120              	.LVL342:
 244:Generated_Source\PSoC4/CyLib.c **** 
 3121              		.loc 1 244 0
 3122 007e 2360     		str	r3, [r4]
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 3123              		.loc 1 246 0
 3124 0080 1D4B     		ldr	r3, .L241+32
 3125              	.LVL343:
 3126 0082 1B68     		ldr	r3, [r3]
 3127 0084 0193     		str	r3, [sp, #4]
 3128              	.LVL344:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 3129              		.loc 1 247 0
 3130 0086 3020     		movs	r0, #48
 3131 0088 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 3132              	.LVL345:
 248:Generated_Source\PSoC4/CyLib.c **** 
 3133              		.loc 1 248 0
 3134 008c 1B4A     		ldr	r2, .L241+36
 3135 008e 1368     		ldr	r3, [r2]
 3136 0090 8021     		movs	r1, #128
 3137 0092 C905     		lsls	r1, r1, #23
 3138 0094 0B43     		orrs	r3, r1
 3139 0096 1360     		str	r3, [r2]
 250:Generated_Source\PSoC4/CyLib.c **** 
 3140              		.loc 1 250 0
 3141 0098 2668     		ldr	r6, [r4]
 3142 009a 194B     		ldr	r3, .L241+40
 3143 009c 1E40     		ands	r6, r3
 3144              	.LVL346:
 183:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 3145              		.loc 1 183 0
 3146 009e 0024     		movs	r4, #0
 252:Generated_Source\PSoC4/CyLib.c ****             {
 3147              		.loc 1 252 0
 3148 00a0 07E0     		b	.L239
 3149              	.LVL347:
 3150              	.L240:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 3151              		.loc 1 254 0
 3152 00a2 0120     		movs	r0, #1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 115


 3153 00a4 FFF7FEFF 		bl	CyDelay
 3154              	.LVL348:
 255:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 3155              		.loc 1 255 0
 3156 00a8 1034     		adds	r4, r4, #16
 3157              	.LVL349:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 3158              		.loc 1 256 0
 3159 00aa A305     		lsls	r3, r4, #22
 3160 00ac 3343     		orrs	r3, r6
 3161 00ae 0F4A     		ldr	r2, .L241+20
 3162 00b0 1360     		str	r3, [r2]
 3163              	.LVL350:
 3164              	.L239:
 252:Generated_Source\PSoC4/CyLib.c ****             {
 3165              		.loc 1 252 0
 3166 00b2 EE2C     		cmp	r4, #238
 3167 00b4 F5D9     		bls	.L240
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 3168              		.loc 1 259 0
 3169 00b6 0120     		movs	r0, #1
 3170 00b8 FFF7FEFF 		bl	CyDelay
 3171              	.LVL351:
 260:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 3172              		.loc 1 260 0
 3173 00bc FF23     		movs	r3, #255
 3174 00be 9B05     		lsls	r3, r3, #22
 3175 00c0 1E43     		orrs	r6, r3
 3176              	.LVL352:
 3177 00c2 0A4B     		ldr	r3, .L241+20
 3178 00c4 1E60     		str	r6, [r3]
 263:Generated_Source\PSoC4/CyLib.c **** 
 3179              		.loc 1 263 0
 3180 00c6 019A     		ldr	r2, [sp, #4]
 3181 00c8 0B4B     		ldr	r3, .L241+32
 3182 00ca 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 3183              		.loc 1 265 0
 3184 00cc 2800     		movs	r0, r5
 3185 00ce FFF7FEFF 		bl	CyExitCriticalSection
 3186              	.LVL353:
 3187              	.L232:
 267:Generated_Source\PSoC4/CyLib.c **** 
 3188              		.loc 1 267 0
 3189 00d2 02B0     		add	sp, sp, #8
 3190              		@ sp needed
 3191 00d4 70BD     		pop	{r4, r5, r6, pc}
 3192              	.L242:
 3193 00d6 C046     		.align	2
 3194              	.L241:
 3195 00d8 50000C40 		.word	1074528336
 3196 00dc 2CFF0B40 		.word	1074528044
 3197 00e0 00000000 		.word	.LANCHOR0
 3198 00e4 28FF0B40 		.word	1074528040
 3199 00e8 34FF0B40 		.word	1074528052
 3200 00ec 08002240 		.word	1075970056
 3201 00f0 00F800C0 		.word	-1073678336
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 116


 3202 00f4 40420F00 		.word	1000000
 3203 00f8 30001040 		.word	1074790448
 3204 00fc 00002240 		.word	1075970048
 3205 0100 FFFF3FC0 		.word	-1069547521
 3206              		.cfi_endproc
 3207              	.LFE3:
 3208              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 3209              		.section	.text.CyDelayUs,"ax",%progbits
 3210              		.align	2
 3211              		.global	CyDelayUs
 3212              		.code	16
 3213              		.thumb_func
 3214              		.type	CyDelayUs, %function
 3215              	CyDelayUs:
 3216              	.LFB53:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 3217              		.loc 1 3127 0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 3221              	.LVL354:
 3222 0000 10B5     		push	{r4, lr}
 3223              		.cfi_def_cfa_offset 8
 3224              		.cfi_offset 4, -8
 3225              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 3226              		.loc 1 3128 0
 3227 0002 034B     		ldr	r3, .L244
 3228 0004 1B7B     		ldrb	r3, [r3, #12]
 3229 0006 5843     		muls	r0, r3
 3230              	.LVL355:
 3231 0008 FFF7FEFF 		bl	CyDelayCycles
 3232              	.LVL356:
3129:Generated_Source\PSoC4/CyLib.c **** }
 3233              		.loc 1 3129 0
 3234              		@ sp needed
 3235 000c 10BD     		pop	{r4, pc}
 3236              	.L245:
 3237 000e C046     		.align	2
 3238              	.L244:
 3239 0010 00000000 		.word	.LANCHOR2
 3240              		.cfi_endproc
 3241              	.LFE53:
 3242              		.size	CyDelayUs, .-CyDelayUs
 3243              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 3244              		.align	2
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 117


 3245              		.global	CySysClkWriteImoFreq
 3246              		.code	16
 3247              		.thumb_func
 3248              		.type	CySysClkWriteImoFreq, %function
 3249              	CySysClkWriteImoFreq:
 3250              	.LFB15:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 3251              		.loc 1 818 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 8
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              	.LVL357:
 3256 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3257              		.cfi_def_cfa_offset 20
 3258              		.cfi_offset 4, -20
 3259              		.cfi_offset 5, -16
 3260              		.cfi_offset 6, -12
 3261              		.cfi_offset 7, -8
 3262              		.cfi_offset 14, -4
 3263 0002 5F46     		mov	r7, fp
 3264 0004 5646     		mov	r6, r10
 3265 0006 4D46     		mov	r5, r9
 3266 0008 4446     		mov	r4, r8
 3267 000a F0B4     		push	{r4, r5, r6, r7}
 3268              		.cfi_def_cfa_offset 36
 3269              		.cfi_offset 8, -36
 3270              		.cfi_offset 9, -32
 3271              		.cfi_offset 10, -28
 3272              		.cfi_offset 11, -24
 3273 000c 83B0     		sub	sp, sp, #12
 3274              		.cfi_def_cfa_offset 48
 3275 000e 0400     		movs	r4, r0
 3276              	.LVL358:
 840:Generated_Source\PSoC4/CyLib.c **** 
 3277              		.loc 1 840 0
 3278 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 3279              	.LVL359:
 3280 0014 0190     		str	r0, [sp, #4]
 3281              	.LVL360:
 843:Generated_Source\PSoC4/CyLib.c ****             {
 3282              		.loc 1 843 0
 3283 0016 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 3284              	.LVL361:
 3285 001a 0028     		cmp	r0, #0
 3286 001c 04D0     		beq	.L262
 3287              	.LVL362:
 846:Generated_Source\PSoC4/CyLib.c ****             }
 3288              		.loc 1 846 0
 3289 001e FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 3290              	.LVL363:
 845:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 3291              		.loc 1 845 0
 3292 0022 0123     		movs	r3, #1
 3293 0024 9A46     		mov	r10, r3
 3294 0026 01E0     		b	.L247
 3295              	.LVL364:
 3296              	.L262:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 118


 830:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 3297              		.loc 1 830 0
 3298 0028 0023     		movs	r3, #0
 3299 002a 9A46     		mov	r10, r3
 3300              	.LVL365:
 3301              	.L247:
 854:Generated_Source\PSoC4/CyLib.c ****                 {
 3302              		.loc 1 854 0
 3303 002c FFF7FEFF 		bl	CySysClkImoGetUsbLock
 3304              	.LVL366:
 3305 0030 0028     		cmp	r0, #0
 3306 0032 08D0     		beq	.L263
 858:Generated_Source\PSoC4/CyLib.c ****                 {
 3307              		.loc 1 858 0
 3308 0034 182C     		cmp	r4, #24
 3309 0036 01D0     		beq	.L249
 858:Generated_Source\PSoC4/CyLib.c ****                 {
 3310              		.loc 1 858 0 is_stmt 0 discriminator 1
 3311 0038 302C     		cmp	r4, #48
 3312 003a 07D1     		bne	.L264
 3313              	.L249:
 3314              	.LVL367:
 861:Generated_Source\PSoC4/CyLib.c ****                 }
 3315              		.loc 1 861 0 is_stmt 1
 3316 003c FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 3317              	.LVL368:
 860:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 3318              		.loc 1 860 0
 3319 0040 0123     		movs	r3, #1
 3320 0042 9B46     		mov	fp, r3
 3321 0044 04E0     		b	.L248
 3322              	.LVL369:
 3323              	.L263:
 834:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 3324              		.loc 1 834 0
 3325 0046 0023     		movs	r3, #0
 3326 0048 9B46     		mov	fp, r3
 3327 004a 01E0     		b	.L248
 3328              	.L264:
 3329 004c 0023     		movs	r3, #0
 3330 004e 9B46     		mov	fp, r3
 3331              	.LVL370:
 3332              	.L248:
 890:Generated_Source\PSoC4/CyLib.c ****         {
 3333              		.loc 1 890 0
 3334 0050 E61E     		subs	r6, r4, #3
 3335 0052 2D2E     		cmp	r6, #45
 3336 0054 74D8     		bhi	.L250
 892:Generated_Source\PSoC4/CyLib.c ****             {
 3337              		.loc 1 892 0
 3338 0056 464B     		ldr	r3, .L265
 3339 0058 1B78     		ldrb	r3, [r3]
 3340 005a DBB2     		uxtb	r3, r3
 3341 005c 9C42     		cmp	r4, r3
 3342 005e 08D8     		bhi	.L251
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 3343              		.loc 1 894 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 119


 3344 0060 444B     		ldr	r3, .L265+4
 3345 0062 1B78     		ldrb	r3, [r3]
 3346 0064 DBB2     		uxtb	r3, r3
 3347 0066 9946     		mov	r9, r3
 3348              	.LVL371:
 895:Generated_Source\PSoC4/CyLib.c ****             }
 3349              		.loc 1 895 0
 3350 0068 434B     		ldr	r3, .L265+8
 3351 006a 1B78     		ldrb	r3, [r3]
 3352 006c DBB2     		uxtb	r3, r3
 3353 006e 9846     		mov	r8, r3
 3354              	.LVL372:
 3355 0070 31E0     		b	.L252
 3356              	.LVL373:
 3357              	.L251:
 897:Generated_Source\PSoC4/CyLib.c ****             {
 3358              		.loc 1 897 0
 3359 0072 424B     		ldr	r3, .L265+12
 3360 0074 1B78     		ldrb	r3, [r3]
 3361 0076 DBB2     		uxtb	r3, r3
 3362 0078 9C42     		cmp	r4, r3
 3363 007a 08D8     		bhi	.L253
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 3364              		.loc 1 899 0
 3365 007c 404B     		ldr	r3, .L265+16
 3366 007e 1B78     		ldrb	r3, [r3]
 3367 0080 DBB2     		uxtb	r3, r3
 3368 0082 9946     		mov	r9, r3
 3369              	.LVL374:
 900:Generated_Source\PSoC4/CyLib.c ****             }
 3370              		.loc 1 900 0
 3371 0084 3F4B     		ldr	r3, .L265+20
 3372 0086 1B78     		ldrb	r3, [r3]
 3373 0088 DBB2     		uxtb	r3, r3
 3374 008a 9846     		mov	r8, r3
 3375              	.LVL375:
 3376 008c 23E0     		b	.L252
 3377              	.LVL376:
 3378              	.L253:
 902:Generated_Source\PSoC4/CyLib.c ****             {
 3379              		.loc 1 902 0
 3380 008e 3E4B     		ldr	r3, .L265+24
 3381 0090 1B78     		ldrb	r3, [r3]
 3382 0092 DBB2     		uxtb	r3, r3
 3383 0094 9C42     		cmp	r4, r3
 3384 0096 08D8     		bhi	.L254
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 3385              		.loc 1 904 0
 3386 0098 3C4B     		ldr	r3, .L265+28
 3387 009a 1B78     		ldrb	r3, [r3]
 3388 009c DBB2     		uxtb	r3, r3
 3389 009e 9946     		mov	r9, r3
 3390              	.LVL377:
 905:Generated_Source\PSoC4/CyLib.c ****             }
 3391              		.loc 1 905 0
 3392 00a0 3B4B     		ldr	r3, .L265+32
 3393 00a2 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 120


 3394 00a4 DBB2     		uxtb	r3, r3
 3395 00a6 9846     		mov	r8, r3
 3396              	.LVL378:
 3397 00a8 15E0     		b	.L252
 3398              	.LVL379:
 3399              	.L254:
 907:Generated_Source\PSoC4/CyLib.c ****             {
 3400              		.loc 1 907 0
 3401 00aa 3A4B     		ldr	r3, .L265+36
 3402 00ac 1B78     		ldrb	r3, [r3]
 3403 00ae DBB2     		uxtb	r3, r3
 3404 00b0 9C42     		cmp	r4, r3
 3405 00b2 08D8     		bhi	.L255
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 3406              		.loc 1 909 0
 3407 00b4 384B     		ldr	r3, .L265+40
 3408 00b6 1B78     		ldrb	r3, [r3]
 3409 00b8 DBB2     		uxtb	r3, r3
 3410 00ba 9946     		mov	r9, r3
 3411              	.LVL380:
 910:Generated_Source\PSoC4/CyLib.c ****             }
 3412              		.loc 1 910 0
 3413 00bc 374B     		ldr	r3, .L265+44
 3414 00be 1B78     		ldrb	r3, [r3]
 3415 00c0 DBB2     		uxtb	r3, r3
 3416 00c2 9846     		mov	r8, r3
 3417              	.LVL381:
 3418 00c4 07E0     		b	.L252
 3419              	.LVL382:
 3420              	.L255:
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 3421              		.loc 1 914 0
 3422 00c6 364B     		ldr	r3, .L265+48
 3423 00c8 1B78     		ldrb	r3, [r3]
 3424 00ca DBB2     		uxtb	r3, r3
 3425 00cc 9946     		mov	r9, r3
 3426              	.LVL383:
 915:Generated_Source\PSoC4/CyLib.c ****             }
 3427              		.loc 1 915 0
 3428 00ce 354B     		ldr	r3, .L265+52
 3429 00d0 1B78     		ldrb	r3, [r3]
 3430 00d2 DBB2     		uxtb	r3, r3
 3431 00d4 9846     		mov	r8, r3
 3432              	.LVL384:
 3433              	.L252:
 919:Generated_Source\PSoC4/CyLib.c **** 
 3434              		.loc 1 919 0
 3435 00d6 344B     		ldr	r3, .L265+56
 3436 00d8 9F5D     		ldrb	r7, [r3, r6]
 3437              	.LVL385:
 931:Generated_Source\PSoC4/CyLib.c ****             {
 3438              		.loc 1 931 0
 3439 00da 2F2F     		cmp	r7, #47
 3440 00dc 09D9     		bls	.L256
 931:Generated_Source\PSoC4/CyLib.c ****             {
 3441              		.loc 1 931 0 is_stmt 0 discriminator 1
 3442 00de 2A2C     		cmp	r4, #42
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 121


 3443 00e0 07D9     		bls	.L256
 934:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 3444              		.loc 1 934 0 is_stmt 1
 3445 00e2 1922     		movs	r2, #25
 3446 00e4 314B     		ldr	r3, .L265+60
 3447 00e6 1A60     		str	r2, [r3]
 3448              	.LVL386:
 937:Generated_Source\PSoC4/CyLib.c **** 
 3449              		.loc 1 937 0
 3450 00e8 0520     		movs	r0, #5
 3451 00ea FFF7FEFF 		bl	CyDelayCycles
 3452              	.LVL387:
 939:Generated_Source\PSoC4/CyLib.c ****             }
 3453              		.loc 1 939 0
 3454 00ee 1925     		movs	r5, #25
 3455 00f0 03E0     		b	.L257
 3456              	.LVL388:
 3457              	.L256:
 943:Generated_Source\PSoC4/CyLib.c ****             }
 3458              		.loc 1 943 0
 3459 00f2 2E4B     		ldr	r3, .L265+60
 3460 00f4 1D68     		ldr	r5, [r3]
 3461 00f6 3F23     		movs	r3, #63
 3462 00f8 1D40     		ands	r5, r3
 3463              	.LVL389:
 3464              	.L257:
 955:Generated_Source\PSoC4/CyLib.c ****             {
 3465              		.loc 1 955 0
 3466 00fa BD42     		cmp	r5, r7
 3467 00fc 06D9     		bls	.L258
 958:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 3468              		.loc 1 958 0
 3469 00fe 2A4B     		ldr	r3, .L265+56
 3470 0100 9A5D     		ldrb	r2, [r3, r6]
 3471 0102 2A4B     		ldr	r3, .L265+60
 3472 0104 1A60     		str	r2, [r3]
 959:Generated_Source\PSoC4/CyLib.c ****             }
 3473              		.loc 1 959 0
 3474 0106 0520     		movs	r0, #5
 3475 0108 FFF7FEFF 		bl	CyDelayCycles
 3476              	.LVL390:
 3477              	.L258:
 963:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 3478              		.loc 1 963 0
 3479 010c 254B     		ldr	r3, .L265+52
 3480 010e 9C46     		mov	ip, r3
 3481 0110 6444     		add	r4, r4, ip
 3482              	.LVL391:
 3483 0112 2378     		ldrb	r3, [r4]
 3484 0114 DBB2     		uxtb	r3, r3
 3485 0116 264A     		ldr	r2, .L265+64
 3486 0118 1360     		str	r3, [r2]
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 3487              		.loc 1 964 0
 3488 011a 264B     		ldr	r3, .L265+68
 3489 011c 4A46     		mov	r2, r9
 3490 011e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 122


 965:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 3491              		.loc 1 965 0
 3492 0120 254B     		ldr	r3, .L265+72
 3493 0122 4246     		mov	r2, r8
 3494 0124 1A60     		str	r2, [r3]
 966:Generated_Source\PSoC4/CyLib.c **** 
 3495              		.loc 1 966 0
 3496 0126 0520     		movs	r0, #5
 3497 0128 FFF7FEFF 		bl	CyDelayUs
 3498              	.LVL392:
 968:Generated_Source\PSoC4/CyLib.c ****             {
 3499              		.loc 1 968 0
 3500 012c BD42     		cmp	r5, r7
 3501 012e 0AD2     		bcs	.L259
 971:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 3502              		.loc 1 971 0
 3503 0130 1D4B     		ldr	r3, .L265+56
 3504 0132 9A5D     		ldrb	r2, [r3, r6]
 3505 0134 1D4B     		ldr	r3, .L265+60
 3506 0136 1A60     		str	r2, [r3]
 972:Generated_Source\PSoC4/CyLib.c ****             }
 3507              		.loc 1 972 0
 3508 0138 0520     		movs	r0, #5
 3509 013a FFF7FEFF 		bl	CyDelayCycles
 3510              	.LVL393:
 3511 013e 02E0     		b	.L259
 3512              	.LVL394:
 3513              	.L250:
 978:Generated_Source\PSoC4/CyLib.c ****         }
 3514              		.loc 1 978 0 discriminator 1
 3515 0140 0020     		movs	r0, #0
 3516 0142 FFF7FEFF 		bl	CyHalt
 3517              	.LVL395:
 3518              	.L259:
 984:Generated_Source\PSoC4/CyLib.c ****             {
 3519              		.loc 1 984 0
 3520 0146 5346     		mov	r3, r10
 3521 0148 012B     		cmp	r3, #1
 3522 014a 01D1     		bne	.L260
 3523              	.LVL396:
 986:Generated_Source\PSoC4/CyLib.c ****             }
 3524              		.loc 1 986 0
 3525 014c FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 3526              	.LVL397:
 3527              	.L260:
 991:Generated_Source\PSoC4/CyLib.c ****             {
 3528              		.loc 1 991 0
 3529 0150 5B46     		mov	r3, fp
 3530 0152 012B     		cmp	r3, #1
 3531 0154 01D1     		bne	.L261
 3532              	.LVL398:
 993:Generated_Source\PSoC4/CyLib.c ****             }
 3533              		.loc 1 993 0
 3534 0156 FFF7FEFF 		bl	CySysClkImoEnableUsbLock
 3535              	.LVL399:
 3536              	.L261:
 997:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 123


 3537              		.loc 1 997 0
 3538 015a 0198     		ldr	r0, [sp, #4]
 3539 015c FFF7FEFF 		bl	CyExitCriticalSection
 3540              	.LVL400:
 998:Generated_Source\PSoC4/CyLib.c **** 
 3541              		.loc 1 998 0
 3542 0160 03B0     		add	sp, sp, #12
 3543              		@ sp needed
 3544              	.LVL401:
 3545              	.LVL402:
 3546              	.LVL403:
 3547 0162 3CBC     		pop	{r2, r3, r4, r5}
 3548 0164 9046     		mov	r8, r2
 3549 0166 9946     		mov	r9, r3
 3550 0168 A246     		mov	r10, r4
 3551 016a AB46     		mov	fp, r5
 3552 016c F0BD     		pop	{r4, r5, r6, r7, pc}
 3553              	.L266:
 3554 016e C046     		.align	2
 3555              	.L265:
 3556 0170 40F3FF0F 		.word	268432192
 3557 0174 41F3FF0F 		.word	268432193
 3558 0178 42F3FF0F 		.word	268432194
 3559 017c 43F3FF0F 		.word	268432195
 3560 0180 44F3FF0F 		.word	268432196
 3561 0184 45F3FF0F 		.word	268432197
 3562 0188 46F3FF0F 		.word	268432198
 3563 018c 47F3FF0F 		.word	268432199
 3564 0190 48F3FF0F 		.word	268432200
 3565 0194 49F3FF0F 		.word	268432201
 3566 0198 4AF3FF0F 		.word	268432202
 3567 019c 4BF3FF0F 		.word	268432203
 3568 01a0 4CF3FF0F 		.word	268432204
 3569 01a4 4DF3FF0F 		.word	268432205
 3570 01a8 00000000 		.word	.LANCHOR0
 3571 01ac 2CFF0B40 		.word	1074528044
 3572 01b0 28FF0B40 		.word	1074528040
 3573 01b4 1CFF0B40 		.word	1074528028
 3574 01b8 20FF0B40 		.word	1074528032
 3575              		.cfi_endproc
 3576              	.LFE15:
 3577              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 3578              		.section	.text.CySysClkEcoStart,"ax",%progbits
 3579              		.align	2
 3580              		.global	CySysClkEcoStart
 3581              		.code	16
 3582              		.thumb_func
 3583              		.type	CySysClkEcoStart, %function
 3584              	CySysClkEcoStart:
 3585              	.LFB16:
1202:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 3586              		.loc 1 1202 0
 3587              		.cfi_startproc
 3588              		@ args = 0, pretend = 0, frame = 0
 3589              		@ frame_needed = 0, uses_anonymous_args = 0
 3590              	.LVL404:
 3591 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 124


 3592              		.cfi_def_cfa_offset 16
 3593              		.cfi_offset 4, -16
 3594              		.cfi_offset 5, -12
 3595              		.cfi_offset 6, -8
 3596              		.cfi_offset 14, -4
 3597 0002 0400     		movs	r4, r0
 3598              	.LVL405:
1306:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 3599              		.loc 1 1306 0
 3600 0004 0F4D     		ldr	r5, .L272
 3601 0006 2B68     		ldr	r3, [r5]
 3602 0008 8022     		movs	r2, #128
 3603 000a 1206     		lsls	r2, r2, #24
 3604 000c 1343     		orrs	r3, r2
 3605 000e 2B60     		str	r3, [r5]
1307:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
 3606              		.loc 1 1307 0
 3607 0010 0A20     		movs	r0, #10
 3608              	.LVL406:
 3609 0012 FFF7FEFF 		bl	CyDelayUs
 3610              	.LVL407:
1311:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
 3611              		.loc 1 1311 0
 3612 0016 2A68     		ldr	r2, [r5]
 3613 0018 0123     		movs	r3, #1
 3614 001a 1343     		orrs	r3, r2
 3615 001c 2B60     		str	r3, [r5]
1314:Generated_Source\PSoC4/CyLib.c ****         {
 3616              		.loc 1 1314 0
 3617 001e 002C     		cmp	r4, #0
 3618 0020 09D1     		bne	.L268
1203:Generated_Source\PSoC4/CyLib.c **** 
 3619              		.loc 1 1203 0
 3620 0022 0020     		movs	r0, #0
 3621 0024 0CE0     		b	.L269
 3622              	.L270:
1320:Generated_Source\PSoC4/CyLib.c **** 
 3623              		.loc 1 1320 0
 3624 0026 0120     		movs	r0, #1
 3625 0028 FFF7FEFF 		bl	CyDelayUs
 3626              	.LVL408:
1322:Generated_Source\PSoC4/CyLib.c ****                 {
 3627              		.loc 1 1322 0
 3628 002c FFF7FEFF 		bl	CySysClkEcoReadStatus
 3629              	.LVL409:
 3630 0030 0028     		cmp	r0, #0
 3631 0032 04D1     		bne	.L271
1318:Generated_Source\PSoC4/CyLib.c ****             {
 3632              		.loc 1 1318 0
 3633 0034 013C     		subs	r4, r4, #1
 3634              	.LVL410:
 3635              	.L268:
1318:Generated_Source\PSoC4/CyLib.c ****             {
 3636              		.loc 1 1318 0 is_stmt 0 discriminator 1
 3637 0036 002C     		cmp	r4, #0
 3638 0038 F5D1     		bne	.L270
1316:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 125


 3639              		.loc 1 1316 0 is_stmt 1
 3640 003a 1020     		movs	r0, #16
 3641 003c 00E0     		b	.L269
 3642              	.L271:
1324:Generated_Source\PSoC4/CyLib.c ****                     break;
 3643              		.loc 1 1324 0
 3644 003e 0020     		movs	r0, #0
 3645              	.L269:
 3646              	.LVL411:
1332:Generated_Source\PSoC4/CyLib.c **** 
 3647              		.loc 1 1332 0
 3648              		@ sp needed
 3649              	.LVL412:
 3650 0040 70BD     		pop	{r4, r5, r6, pc}
 3651              	.L273:
 3652 0042 C046     		.align	2
 3653              	.L272:
 3654 0044 08000C40 		.word	1074528264
 3655              		.cfi_endproc
 3656              	.LFE16:
 3657              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 3658              		.section	.text.CySysClkPllStart,"ax",%progbits
 3659              		.align	2
 3660              		.global	CySysClkPllStart
 3661              		.code	16
 3662              		.thumb_func
 3663              		.type	CySysClkPllStart, %function
 3664              	CySysClkPllStart:
 3665              	.LFB21:
1721:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
 3666              		.loc 1 1721 0
 3667              		.cfi_startproc
 3668              		@ args = 0, pretend = 0, frame = 0
 3669              		@ frame_needed = 0, uses_anonymous_args = 0
 3670              	.LVL413:
 3671 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3672              		.cfi_def_cfa_offset 24
 3673              		.cfi_offset 3, -24
 3674              		.cfi_offset 4, -20
 3675              		.cfi_offset 5, -16
 3676              		.cfi_offset 6, -12
 3677              		.cfi_offset 7, -8
 3678              		.cfi_offset 14, -4
 3679 0002 0400     		movs	r4, r0
 3680 0004 0D00     		movs	r5, r1
 3681              	.LVL414:
1726:Generated_Source\PSoC4/CyLib.c ****         {
 3682              		.loc 1 1726 0
 3683 0006 0128     		cmp	r0, #1
 3684 0008 3FD8     		bhi	.L279
1726:Generated_Source\PSoC4/CyLib.c ****         {
 3685              		.loc 1 1726 0 is_stmt 0 discriminator 1
 3686 000a 0129     		cmp	r1, #1
 3687 000c 3FD8     		bhi	.L280
1728:Generated_Source\PSoC4/CyLib.c **** 
 3688              		.loc 1 1728 0 is_stmt 1
 3689 000e FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 126


 3690              	.LVL415:
1731:Generated_Source\PSoC4/CyLib.c **** 
 3691              		.loc 1 1731 0
 3692 0012 204F     		ldr	r7, .L282
 3693 0014 6600     		lsls	r6, r4, #1
 3694 0016 3219     		adds	r2, r6, r4
 3695 0018 9300     		lsls	r3, r2, #2
 3696 001a DA59     		ldr	r2, [r3, r7]
 3697 001c 1E4B     		ldr	r3, .L282+4
 3698 001e 1340     		ands	r3, r2
 3699 0020 3119     		adds	r1, r6, r4
 3700 0022 8A00     		lsls	r2, r1, #2
 3701 0024 1100     		movs	r1, r2
 3702 0026 D351     		str	r3, [r2, r7]
1734:Generated_Source\PSoC4/CyLib.c **** 
 3703              		.loc 1 1734 0
 3704 0028 CB59     		ldr	r3, [r1, r7]
 3705 002a 8022     		movs	r2, #128
 3706 002c 1206     		lsls	r2, r2, #24
 3707 002e 1343     		orrs	r3, r2
 3708 0030 3119     		adds	r1, r6, r4
 3709 0032 8A00     		lsls	r2, r1, #2
 3710 0034 D351     		str	r3, [r2, r7]
1736:Generated_Source\PSoC4/CyLib.c **** 
 3711              		.loc 1 1736 0
 3712 0036 FFF7FEFF 		bl	CyExitCriticalSection
 3713              	.LVL416:
1739:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 3714              		.loc 1 1739 0
 3715 003a 0520     		movs	r0, #5
 3716 003c FFF7FEFF 		bl	CyDelayUs
 3717              	.LVL417:
1740:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 3718              		.loc 1 1740 0
 3719 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 3720              	.LVL418:
1741:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 3721              		.loc 1 1741 0
 3722 0044 3219     		adds	r2, r6, r4
 3723 0046 9300     		lsls	r3, r2, #2
 3724 0048 DB59     		ldr	r3, [r3, r7]
 3725 004a 8022     		movs	r2, #128
 3726 004c D205     		lsls	r2, r2, #23
 3727 004e 1343     		orrs	r3, r2
 3728 0050 3619     		adds	r6, r6, r4
 3729 0052 B200     		lsls	r2, r6, #2
 3730 0054 D351     		str	r3, [r2, r7]
1742:Generated_Source\PSoC4/CyLib.c **** 
 3731              		.loc 1 1742 0
 3732 0056 FFF7FEFF 		bl	CyExitCriticalSection
 3733              	.LVL419:
1744:Generated_Source\PSoC4/CyLib.c ****             {
 3734              		.loc 1 1744 0
 3735 005a 002D     		cmp	r5, #0
 3736 005c 10D1     		bne	.L281
1724:Generated_Source\PSoC4/CyLib.c **** 
 3737              		.loc 1 1724 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 127


 3738 005e 0020     		movs	r0, #0
 3739 0060 16E0     		b	.L275
 3740              	.LVL420:
 3741              	.L278:
1751:Generated_Source\PSoC4/CyLib.c ****                     {
 3742              		.loc 1 1751 0
 3743 0062 2000     		movs	r0, r4
 3744 0064 FFF7FEFF 		bl	CySysClkPllGetLockStatus
 3745              	.LVL421:
 3746 0068 0028     		cmp	r0, #0
 3747 006a 04D0     		beq	.L277
1754:Generated_Source\PSoC4/CyLib.c ****                         break;
 3748              		.loc 1 1754 0
 3749 006c 2000     		movs	r0, r4
 3750 006e FFF7FEFF 		bl	CySysClkPllGetUnlockStatus
 3751              	.LVL422:
1753:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
 3752              		.loc 1 1753 0
 3753 0072 0020     		movs	r0, #0
1755:Generated_Source\PSoC4/CyLib.c ****                     }
 3754              		.loc 1 1755 0
 3755 0074 0CE0     		b	.L275
 3756              	.L277:
1758:Generated_Source\PSoC4/CyLib.c ****                     counts--;
 3757              		.loc 1 1758 0
 3758 0076 0120     		movs	r0, #1
 3759 0078 FFF7FEFF 		bl	CyDelayUs
 3760              	.LVL423:
1759:Generated_Source\PSoC4/CyLib.c ****                 }
 3761              		.loc 1 1759 0
 3762 007c 013D     		subs	r5, r5, #1
 3763              	.LVL424:
 3764 007e 00E0     		b	.L276
 3765              	.LVL425:
 3766              	.L281:
 3767 0080 FF25     		movs	r5, #255
 3768              	.LVL426:
 3769              	.L276:
1748:Generated_Source\PSoC4/CyLib.c ****                 {
 3770              		.loc 1 1748 0
 3771 0082 002D     		cmp	r5, #0
 3772 0084 EDD1     		bne	.L278
1746:Generated_Source\PSoC4/CyLib.c **** 
 3773              		.loc 1 1746 0
 3774 0086 1020     		movs	r0, #16
 3775 0088 02E0     		b	.L275
 3776              	.LVL427:
 3777              	.L279:
1765:Generated_Source\PSoC4/CyLib.c ****         }
 3778              		.loc 1 1765 0
 3779 008a 0120     		movs	r0, #1
 3780              	.LVL428:
 3781 008c 00E0     		b	.L275
 3782              	.LVL429:
 3783              	.L280:
 3784 008e 0120     		movs	r0, #1
 3785              	.LVL430:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 128


 3786              	.L275:
1769:Generated_Source\PSoC4/CyLib.c **** 
 3787              		.loc 1 1769 0
 3788              		@ sp needed
 3789              	.LVL431:
 3790 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3791              	.L283:
 3792 0092 C046     		.align	2
 3793              	.L282:
 3794 0094 14000C40 		.word	1074528276
 3795 0098 FFFFFFBF 		.word	-1073741825
 3796              		.cfi_endproc
 3797              	.LFE21:
 3798              		.size	CySysClkPllStart, .-CySysClkPllStart
 3799              		.section	.text.CySysLvdEnable,"ax",%progbits
 3800              		.align	2
 3801              		.global	CySysLvdEnable
 3802              		.code	16
 3803              		.thumb_func
 3804              		.type	CySysLvdEnable, %function
 3805              	CySysLvdEnable:
 3806              	.LFB32:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 3807              		.loc 1 2663 0
 3808              		.cfi_startproc
 3809              		@ args = 0, pretend = 0, frame = 0
 3810              		@ frame_needed = 0, uses_anonymous_args = 0
 3811              	.LVL432:
 3812 0000 70B5     		push	{r4, r5, r6, lr}
 3813              		.cfi_def_cfa_offset 16
 3814              		.cfi_offset 4, -16
 3815              		.cfi_offset 5, -12
 3816              		.cfi_offset 6, -8
 3817              		.cfi_offset 14, -4
 3818 0002 0300     		movs	r3, r0
2665:Generated_Source\PSoC4/CyLib.c **** 
 3819              		.loc 1 2665 0
 3820 0004 0D4C     		ldr	r4, .L285
 3821 0006 2268     		ldr	r2, [r4]
 3822 0008 0225     		movs	r5, #2
 3823 000a AA43     		bics	r2, r5
 3824 000c 2260     		str	r2, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3825              		.loc 1 2668 0
 3826 000e 0C4A     		ldr	r2, .L285+4
 3827 0010 1168     		ldr	r1, [r2]
 3828 0012 1E20     		movs	r0, #30
 3829              	.LVL433:
 3830 0014 8143     		bics	r1, r0
2669:Generated_Source\PSoC4/CyLib.c **** 
 3831              		.loc 1 2669 0
 3832 0016 5B00     		lsls	r3, r3, #1
 3833              	.LVL434:
 3834 0018 1840     		ands	r0, r3
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3835              		.loc 1 2668 0
 3836 001a 0843     		orrs	r0, r1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 129


 3837 001c 1060     		str	r0, [r2]
2672:Generated_Source\PSoC4/CyLib.c **** 
 3838              		.loc 1 2672 0
 3839 001e 1168     		ldr	r1, [r2]
 3840 0020 0123     		movs	r3, #1
 3841 0022 0B43     		orrs	r3, r1
 3842 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 3843              		.loc 1 2675 0
 3844 0026 FA20     		movs	r0, #250
 3845 0028 8000     		lsls	r0, r0, #2
 3846 002a FFF7FEFF 		bl	CyDelayUs
 3847              	.LVL435:
2678:Generated_Source\PSoC4/CyLib.c **** 
 3848              		.loc 1 2678 0
 3849 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 3850              	.LVL436:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 3851              		.loc 1 2681 0
 3852 0032 2368     		ldr	r3, [r4]
 3853 0034 1D43     		orrs	r5, r3
 3854 0036 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 3855              		.loc 1 2682 0
 3856              		@ sp needed
 3857 0038 70BD     		pop	{r4, r5, r6, pc}
 3858              	.L286:
 3859 003a C046     		.align	2
 3860              	.L285:
 3861 003c 08000B40 		.word	1074462728
 3862 0040 18000B40 		.word	1074462744
 3863              		.cfi_endproc
 3864              	.LFE32:
 3865              		.size	CySysLvdEnable, .-CySysLvdEnable
 3866              		.section	.text.CyDelayFreq,"ax",%progbits
 3867              		.align	2
 3868              		.global	CyDelayFreq
 3869              		.code	16
 3870              		.thumb_func
 3871              		.type	CyDelayFreq, %function
 3872              	CyDelayFreq:
 3873              	.LFB54:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 3874              		.loc 1 3141 0
 3875              		.cfi_startproc
 3876              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 130


 3877              		@ frame_needed = 0, uses_anonymous_args = 0
 3878              	.LVL437:
 3879 0000 70B5     		push	{r4, r5, r6, lr}
 3880              		.cfi_def_cfa_offset 16
 3881              		.cfi_offset 4, -16
 3882              		.cfi_offset 5, -12
 3883              		.cfi_offset 6, -8
 3884              		.cfi_offset 14, -4
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 3885              		.loc 1 3142 0
 3886 0002 0028     		cmp	r0, #0
 3887 0004 02D0     		beq	.L288
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 3888              		.loc 1 3144 0
 3889 0006 0C4B     		ldr	r3, .L290
 3890 0008 1861     		str	r0, [r3, #16]
 3891 000a 02E0     		b	.L289
 3892              	.L288:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 3893              		.loc 1 3148 0
 3894 000c 0B4A     		ldr	r2, .L290+4
 3895 000e 0A4B     		ldr	r3, .L290
 3896 0010 1A61     		str	r2, [r3, #16]
 3897              	.L289:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 3898              		.loc 1 3151 0
 3899 0012 094C     		ldr	r4, .L290
 3900 0014 2569     		ldr	r5, [r4, #16]
 3901 0016 0A4B     		ldr	r3, .L290+8
 3902 0018 E818     		adds	r0, r5, r3
 3903              	.LVL438:
 3904 001a 0A49     		ldr	r1, .L290+12
 3905 001c FFF7FEFF 		bl	__aeabi_uidiv
 3906              	.LVL439:
 3907 0020 2073     		strb	r0, [r4, #12]
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 3908              		.loc 1 3152 0
 3909 0022 094B     		ldr	r3, .L290+16
 3910 0024 E818     		adds	r0, r5, r3
 3911 0026 FA21     		movs	r1, #250
 3912 0028 8900     		lsls	r1, r1, #2
 3913 002a FFF7FEFF 		bl	__aeabi_uidiv
 3914              	.LVL440:
 3915 002e A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 3916              		.loc 1 3153 0
 3917 0030 C003     		lsls	r0, r0, #15
 3918 0032 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 3919              		.loc 1 3154 0
 3920              		@ sp needed
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 131


 3921 0034 70BD     		pop	{r4, r5, r6, pc}
 3922              	.L291:
 3923 0036 C046     		.align	2
 3924              	.L290:
 3925 0038 00000000 		.word	.LANCHOR2
 3926 003c 006CDC02 		.word	48000000
 3927 0040 3F420F00 		.word	999999
 3928 0044 40420F00 		.word	1000000
 3929 0048 E7030000 		.word	999
 3930              		.cfi_endproc
 3931              	.LFE54:
 3932              		.size	CyDelayFreq, .-CyDelayFreq
 3933              		.section	.text.CySysTickStop,"ax",%progbits
 3934              		.align	2
 3935              		.global	CySysTickStop
 3936              		.code	16
 3937              		.thumb_func
 3938              		.type	CySysTickStop, %function
 3939              	CySysTickStop:
 3940              	.LFB58:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 132


3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 133


3249:Generated_Source\PSoC4/CyLib.c **** {
 3941              		.loc 1 3249 0
 3942              		.cfi_startproc
 3943              		@ args = 0, pretend = 0, frame = 0
 3944              		@ frame_needed = 0, uses_anonymous_args = 0
 3945              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 3946              		.loc 1 3250 0
 3947 0000 024A     		ldr	r2, .L293
 3948 0002 1368     		ldr	r3, [r2]
 3949 0004 0121     		movs	r1, #1
 3950 0006 8B43     		bics	r3, r1
 3951 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** }
 3952              		.loc 1 3251 0
 3953              		@ sp needed
 3954 000a 7047     		bx	lr
 3955              	.L294:
 3956              		.align	2
 3957              	.L293:
 3958 000c 10E000E0 		.word	-536813552
 3959              		.cfi_endproc
 3960              	.LFE58:
 3961              		.size	CySysTickStop, .-CySysTickStop
 3962              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 3963              		.align	2
 3964              		.global	CySysTickEnableInterrupt
 3965              		.code	16
 3966              		.thumb_func
 3967              		.type	CySysTickEnableInterrupt, %function
 3968              	CySysTickEnableInterrupt:
 3969              	.LFB59:
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
 3970              		.loc 1 3265 0
 3971              		.cfi_startproc
 3972              		@ args = 0, pretend = 0, frame = 0
 3973              		@ frame_needed = 0, uses_anonymous_args = 0
 3974              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 3975              		.loc 1 3266 0
 3976 0000 024A     		ldr	r2, .L296
 3977 0002 1168     		ldr	r1, [r2]
 3978 0004 0223     		movs	r3, #2
 3979 0006 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 134


 3980 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** }
 3981              		.loc 1 3267 0
 3982              		@ sp needed
 3983 000a 7047     		bx	lr
 3984              	.L297:
 3985              		.align	2
 3986              	.L296:
 3987 000c 10E000E0 		.word	-536813552
 3988              		.cfi_endproc
 3989              	.LFE59:
 3990              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 3991              		.section	.text.CySysTickEnable,"ax",%progbits
 3992              		.align	2
 3993              		.global	CySysTickEnable
 3994              		.code	16
 3995              		.thumb_func
 3996              		.type	CySysTickEnable, %function
 3997              	CySysTickEnable:
 3998              	.LFB57:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 3999              		.loc 1 3232 0
 4000              		.cfi_startproc
 4001              		@ args = 0, pretend = 0, frame = 0
 4002              		@ frame_needed = 0, uses_anonymous_args = 0
 4003 0000 10B5     		push	{r4, lr}
 4004              		.cfi_def_cfa_offset 8
 4005              		.cfi_offset 4, -8
 4006              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 4007              		.loc 1 3233 0
 4008 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 4009              	.LVL441:
3234:Generated_Source\PSoC4/CyLib.c **** }
 4010              		.loc 1 3234 0
 4011 0006 034A     		ldr	r2, .L299
 4012 0008 1168     		ldr	r1, [r2]
 4013 000a 0123     		movs	r3, #1
 4014 000c 0B43     		orrs	r3, r1
 4015 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 4016              		.loc 1 3235 0
 4017              		@ sp needed
 4018 0010 10BD     		pop	{r4, pc}
 4019              	.L300:
 4020 0012 C046     		.align	2
 4021              	.L299:
 4022 0014 10E000E0 		.word	-536813552
 4023              		.cfi_endproc
 4024              	.LFE57:
 4025              		.size	CySysTickEnable, .-CySysTickEnable
 4026              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 4027              		.align	2
 4028              		.global	CySysTickDisableInterrupt
 4029              		.code	16
 4030              		.thumb_func
 4031              		.type	CySysTickDisableInterrupt, %function
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 135


 4032              	CySysTickDisableInterrupt:
 4033              	.LFB60:
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
 4034              		.loc 1 3281 0
 4035              		.cfi_startproc
 4036              		@ args = 0, pretend = 0, frame = 0
 4037              		@ frame_needed = 0, uses_anonymous_args = 0
 4038              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 4039              		.loc 1 3282 0
 4040 0000 024A     		ldr	r2, .L302
 4041 0002 1368     		ldr	r3, [r2]
 4042 0004 0221     		movs	r1, #2
 4043 0006 8B43     		bics	r3, r1
 4044 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** }
 4045              		.loc 1 3283 0
 4046              		@ sp needed
 4047 000a 7047     		bx	lr
 4048              	.L303:
 4049              		.align	2
 4050              	.L302:
 4051 000c 10E000E0 		.word	-536813552
 4052              		.cfi_endproc
 4053              	.LFE60:
 4054              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 4055              		.section	.text.CySysTickSetReload,"ax",%progbits
 4056              		.align	2
 4057              		.global	CySysTickSetReload
 4058              		.code	16
 4059              		.thumb_func
 4060              		.type	CySysTickSetReload, %function
 4061              	CySysTickSetReload:
 4062              	.LFB61:
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 136


3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
 4063              		.loc 1 3298 0
 4064              		.cfi_startproc
 4065              		@ args = 0, pretend = 0, frame = 0
 4066              		@ frame_needed = 0, uses_anonymous_args = 0
 4067              		@ link register save eliminated.
 4068              	.LVL442:
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 4069              		.loc 1 3299 0
 4070 0000 0002     		lsls	r0, r0, #8
 4071              	.LVL443:
 4072 0002 000A     		lsrs	r0, r0, #8
 4073 0004 014B     		ldr	r3, .L305
 4074 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** }
 4075              		.loc 1 3300 0
 4076              		@ sp needed
 4077 0008 7047     		bx	lr
 4078              	.L306:
 4079 000a C046     		.align	2
 4080              	.L305:
 4081 000c 14E000E0 		.word	-536813548
 4082              		.cfi_endproc
 4083              	.LFE61:
 4084              		.size	CySysTickSetReload, .-CySysTickSetReload
 4085              		.section	.text.CySysTickGetReload,"ax",%progbits
 4086              		.align	2
 4087              		.global	CySysTickGetReload
 4088              		.code	16
 4089              		.thumb_func
 4090              		.type	CySysTickGetReload, %function
 4091              	CySysTickGetReload:
 4092              	.LFB62:
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
 4093              		.loc 1 3314 0
 4094              		.cfi_startproc
 4095              		@ args = 0, pretend = 0, frame = 0
 4096              		@ frame_needed = 0, uses_anonymous_args = 0
 4097              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 137


 4098              		.loc 1 3315 0
 4099 0000 024B     		ldr	r3, .L308
 4100 0002 1868     		ldr	r0, [r3]
 4101 0004 0002     		lsls	r0, r0, #8
 4102 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** }
 4103              		.loc 1 3316 0
 4104              		@ sp needed
 4105 0008 7047     		bx	lr
 4106              	.L309:
 4107 000a C046     		.align	2
 4108              	.L308:
 4109 000c 14E000E0 		.word	-536813548
 4110              		.cfi_endproc
 4111              	.LFE62:
 4112              		.size	CySysTickGetReload, .-CySysTickGetReload
 4113              		.section	.text.CySysTickGetValue,"ax",%progbits
 4114              		.align	2
 4115              		.global	CySysTickGetValue
 4116              		.code	16
 4117              		.thumb_func
 4118              		.type	CySysTickGetValue, %function
 4119              	CySysTickGetValue:
 4120              	.LFB63:
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
 4121              		.loc 1 3330 0
 4122              		.cfi_startproc
 4123              		@ args = 0, pretend = 0, frame = 0
 4124              		@ frame_needed = 0, uses_anonymous_args = 0
 4125              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 4126              		.loc 1 3331 0
 4127 0000 024B     		ldr	r3, .L311
 4128 0002 1868     		ldr	r0, [r3]
 4129 0004 0002     		lsls	r0, r0, #8
 4130 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** }
 4131              		.loc 1 3332 0
 4132              		@ sp needed
 4133 0008 7047     		bx	lr
 4134              	.L312:
 4135 000a C046     		.align	2
 4136              	.L311:
 4137 000c 18E000E0 		.word	-536813544
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 138


 4138              		.cfi_endproc
 4139              	.LFE63:
 4140              		.size	CySysTickGetValue, .-CySysTickGetValue
 4141              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 4142              		.align	2
 4143              		.global	CySysTickSetClockSource
 4144              		.code	16
 4145              		.thumb_func
 4146              		.type	CySysTickSetClockSource, %function
 4147              	CySysTickSetClockSource:
 4148              	.LFB64:
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
 4149              		.loc 1 3362 0
 4150              		.cfi_startproc
 4151              		@ args = 0, pretend = 0, frame = 0
 4152              		@ frame_needed = 0, uses_anonymous_args = 0
 4153              		@ link register save eliminated.
 4154              	.LVL444:
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 4155              		.loc 1 3363 0
 4156 0000 0128     		cmp	r0, #1
 4157 0002 05D1     		bne	.L314
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 4158              		.loc 1 3365 0
 4159 0004 054A     		ldr	r2, .L316
 4160 0006 1168     		ldr	r1, [r2]
 4161 0008 0423     		movs	r3, #4
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 139


 4162 000a 0B43     		orrs	r3, r1
 4163 000c 1360     		str	r3, [r2]
 4164 000e 04E0     		b	.L313
 4165              	.L314:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 4166              		.loc 1 3369 0
 4167 0010 024A     		ldr	r2, .L316
 4168 0012 1368     		ldr	r3, [r2]
 4169 0014 0421     		movs	r1, #4
 4170 0016 8B43     		bics	r3, r1
 4171 0018 1360     		str	r3, [r2]
 4172              	.L313:
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
 4173              		.loc 1 3371 0
 4174              		@ sp needed
 4175 001a 7047     		bx	lr
 4176              	.L317:
 4177              		.align	2
 4178              	.L316:
 4179 001c 10E000E0 		.word	-536813552
 4180              		.cfi_endproc
 4181              	.LFE64:
 4182              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 4183              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 4184              		.align	2
 4185              		.global	CySysTickGetClockSource
 4186              		.code	16
 4187              		.thumb_func
 4188              		.type	CySysTickGetClockSource, %function
 4189              	CySysTickGetClockSource:
 4190              	.LFB65:
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
 4191              		.loc 1 3387 0
 4192              		.cfi_startproc
 4193              		@ args = 0, pretend = 0, frame = 0
 4194              		@ frame_needed = 0, uses_anonymous_args = 0
 4195              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 140


 4196              		.loc 1 3388 0
 4197 0000 024B     		ldr	r3, .L319
 4198 0002 1868     		ldr	r0, [r3]
 4199 0004 8008     		lsrs	r0, r0, #2
 4200 0006 0123     		movs	r3, #1
 4201 0008 1840     		ands	r0, r3
3389:Generated_Source\PSoC4/CyLib.c ****     }
 4202              		.loc 1 3389 0
 4203              		@ sp needed
 4204 000a 7047     		bx	lr
 4205              	.L320:
 4206              		.align	2
 4207              	.L319:
 4208 000c 10E000E0 		.word	-536813552
 4209              		.cfi_endproc
 4210              	.LFE65:
 4211              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 4212              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 4213              		.align	2
 4214              		.global	CySysTickGetCountFlag
 4215              		.code	16
 4216              		.thumb_func
 4217              		.type	CySysTickGetCountFlag, %function
 4218              	CySysTickGetCountFlag:
 4219              	.LFB66:
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
 4220              		.loc 1 3410 0
 4221              		.cfi_startproc
 4222              		@ args = 0, pretend = 0, frame = 0
 4223              		@ frame_needed = 0, uses_anonymous_args = 0
 4224              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 4225              		.loc 1 3411 0
 4226 0000 024B     		ldr	r3, .L322
 4227 0002 1868     		ldr	r0, [r3]
 4228 0004 000C     		lsrs	r0, r0, #16
 4229 0006 0123     		movs	r3, #1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 141


 4230 0008 1840     		ands	r0, r3
3412:Generated_Source\PSoC4/CyLib.c **** }
 4231              		.loc 1 3412 0
 4232              		@ sp needed
 4233 000a 7047     		bx	lr
 4234              	.L323:
 4235              		.align	2
 4236              	.L322:
 4237 000c 10E000E0 		.word	-536813552
 4238              		.cfi_endproc
 4239              	.LFE66:
 4240              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 4241              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 4242              		.align	2
 4243              		.code	16
 4244              		.thumb_func
 4245              		.type	CySysTickServiceCallbacks, %function
 4246              	CySysTickServiceCallbacks:
 4247              	.LFB70:
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 142


3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 4248              		.loc 1 3495 0
 4249              		.cfi_startproc
 4250              		@ args = 0, pretend = 0, frame = 0
 4251              		@ frame_needed = 0, uses_anonymous_args = 0
 4252 0000 10B5     		push	{r4, lr}
 4253              		.cfi_def_cfa_offset 8
 4254              		.cfi_offset 4, -8
 4255              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 143


 4256              		.loc 1 3499 0
 4257 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 4258              	.LVL445:
 4259 0006 0128     		cmp	r0, #1
 4260 0008 0CD1     		bne	.L324
 4261 000a 08E0     		b	.L329
 4262              	.LVL446:
 4263              	.L328:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 4264              		.loc 1 3503 0
 4265 000c A300     		lsls	r3, r4, #2
 4266 000e 064A     		ldr	r2, .L330
 4267 0010 D318     		adds	r3, r2, r3
 4268 0012 9B68     		ldr	r3, [r3, #8]
 4269 0014 002B     		cmp	r3, #0
 4270 0016 00D0     		beq	.L327
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 4271              		.loc 1 3505 0
 4272 0018 9847     		blx	r3
 4273              	.LVL447:
 4274              	.L327:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 4275              		.loc 1 3501 0 discriminator 2
 4276 001a 0134     		adds	r4, r4, #1
 4277              	.LVL448:
 4278 001c 00E0     		b	.L325
 4279              	.LVL449:
 4280              	.L329:
 4281 001e 0024     		movs	r4, #0
 4282              	.L325:
 4283              	.LVL450:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 4284              		.loc 1 3501 0 is_stmt 0 discriminator 1
 4285 0020 042C     		cmp	r4, #4
 4286 0022 F3D9     		bls	.L328
 4287              	.LVL451:
 4288              	.L324:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 4289              		.loc 1 3509 0 is_stmt 1
 4290              		@ sp needed
 4291 0024 10BD     		pop	{r4, pc}
 4292              	.L331:
 4293 0026 C046     		.align	2
 4294              	.L330:
 4295 0028 00000000 		.word	.LANCHOR1
 4296              		.cfi_endproc
 4297              	.LFE70:
 4298              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 4299              		.section	.text.CySysTickClear,"ax",%progbits
 4300              		.align	2
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 144


 4301              		.global	CySysTickClear
 4302              		.code	16
 4303              		.thumb_func
 4304              		.type	CySysTickClear, %function
 4305              	CySysTickClear:
 4306              	.LFB67:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 4307              		.loc 1 3423 0
 4308              		.cfi_startproc
 4309              		@ args = 0, pretend = 0, frame = 0
 4310              		@ frame_needed = 0, uses_anonymous_args = 0
 4311              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 4312              		.loc 1 3424 0
 4313 0000 0022     		movs	r2, #0
 4314 0002 014B     		ldr	r3, .L333
 4315 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 4316              		.loc 1 3425 0
 4317              		@ sp needed
 4318 0006 7047     		bx	lr
 4319              	.L334:
 4320              		.align	2
 4321              	.L333:
 4322 0008 18E000E0 		.word	-536813544
 4323              		.cfi_endproc
 4324              	.LFE67:
 4325              		.size	CySysTickClear, .-CySysTickClear
 4326              		.section	.text.CySysTickInit,"ax",%progbits
 4327              		.align	2
 4328              		.global	CySysTickInit
 4329              		.code	16
 4330              		.thumb_func
 4331              		.type	CySysTickInit, %function
 4332              	CySysTickInit:
 4333              	.LFB56:
3202:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 4334              		.loc 1 3202 0
 4335              		.cfi_startproc
 4336              		@ args = 0, pretend = 0, frame = 0
 4337              		@ frame_needed = 0, uses_anonymous_args = 0
 4338 0000 10B5     		push	{r4, lr}
 4339              		.cfi_def_cfa_offset 8
 4340              		.cfi_offset 4, -8
 4341              		.cfi_offset 14, -4
 4342              	.LVL452:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 4343              		.loc 1 3205 0
 4344 0002 0023     		movs	r3, #0
 4345 0004 05E0     		b	.L336
 4346              	.LVL453:
 4347              	.L337:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 4348              		.loc 1 3207 0 discriminator 3
 4349 0006 9A00     		lsls	r2, r3, #2
 4350 0008 0C49     		ldr	r1, .L338
 4351 000a 8A18     		adds	r2, r1, r2
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 145


 4352 000c 0021     		movs	r1, #0
 4353 000e 9160     		str	r1, [r2, #8]
3205:Generated_Source\PSoC4/CyLib.c ****     {
 4354              		.loc 1 3205 0 discriminator 3
 4355 0010 0133     		adds	r3, r3, #1
 4356              	.LVL454:
 4357              	.L336:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 4358              		.loc 1 3205 0 is_stmt 0 discriminator 1
 4359 0012 042B     		cmp	r3, #4
 4360 0014 F7D9     		bls	.L337
3210:Generated_Source\PSoC4/CyLib.c **** 
 4361              		.loc 1 3210 0 is_stmt 1
 4362 0016 0A49     		ldr	r1, .L338+4
 4363 0018 0F20     		movs	r0, #15
 4364 001a FFF7FEFF 		bl	CyIntSetSysVector
 4365              	.LVL455:
3213:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 4366              		.loc 1 3213 0
 4367 001e 0120     		movs	r0, #1
 4368 0020 FFF7FEFF 		bl	CySysTickSetClockSource
 4369              	.LVL456:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 4370              		.loc 1 3216 0
 4371 0024 074B     		ldr	r3, .L338+8
 4372 0026 1869     		ldr	r0, [r3, #16]
 4373 0028 FA21     		movs	r1, #250
 4374 002a 8900     		lsls	r1, r1, #2
 4375 002c FFF7FEFF 		bl	__aeabi_uidiv
 4376              	.LVL457:
 4377 0030 FFF7FEFF 		bl	CySysTickSetReload
 4378              	.LVL458:
3217:Generated_Source\PSoC4/CyLib.c **** }
 4379              		.loc 1 3217 0
 4380 0034 FFF7FEFF 		bl	CySysTickClear
 4381              	.LVL459:
3218:Generated_Source\PSoC4/CyLib.c **** 
 4382              		.loc 1 3218 0
 4383              		@ sp needed
 4384 0038 10BD     		pop	{r4, pc}
 4385              	.L339:
 4386 003a C046     		.align	2
 4387              	.L338:
 4388 003c 00000000 		.word	.LANCHOR1
 4389 0040 00000000 		.word	CySysTickServiceCallbacks
 4390 0044 00000000 		.word	.LANCHOR2
 4391              		.cfi_endproc
 4392              	.LFE56:
 4393              		.size	CySysTickInit, .-CySysTickInit
 4394              		.section	.text.CySysTickStart,"ax",%progbits
 4395              		.align	2
 4396              		.global	CySysTickStart
 4397              		.code	16
 4398              		.thumb_func
 4399              		.type	CySysTickStart, %function
 4400              	CySysTickStart:
 4401              	.LFB55:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 146


3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 4402              		.loc 1 3173 0
 4403              		.cfi_startproc
 4404              		@ args = 0, pretend = 0, frame = 0
 4405              		@ frame_needed = 0, uses_anonymous_args = 0
 4406 0000 10B5     		push	{r4, lr}
 4407              		.cfi_def_cfa_offset 8
 4408              		.cfi_offset 4, -8
 4409              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 4410              		.loc 1 3174 0
 4411 0002 064B     		ldr	r3, .L342
 4412 0004 DB69     		ldr	r3, [r3, #28]
 4413 0006 002B     		cmp	r3, #0
 4414 0008 04D1     		bne	.L341
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 4415              		.loc 1 3176 0
 4416 000a FFF7FEFF 		bl	CySysTickInit
 4417              	.LVL460:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 4418              		.loc 1 3177 0
 4419 000e 0122     		movs	r2, #1
 4420 0010 024B     		ldr	r3, .L342
 4421 0012 DA61     		str	r2, [r3, #28]
 4422              	.L341:
3180:Generated_Source\PSoC4/CyLib.c **** }
 4423              		.loc 1 3180 0
 4424 0014 FFF7FEFF 		bl	CySysTickEnable
 4425              	.LVL461:
3181:Generated_Source\PSoC4/CyLib.c **** 
 4426              		.loc 1 3181 0
 4427              		@ sp needed
 4428 0018 10BD     		pop	{r4, pc}
 4429              	.L343:
 4430 001a C046     		.align	2
 4431              	.L342:
 4432 001c 00000000 		.word	.LANCHOR1
 4433              		.cfi_endproc
 4434              	.LFE55:
 4435              		.size	CySysTickStart, .-CySysTickStart
 4436              		.section	.text.CySysTickSetCallback,"ax",%progbits
 4437              		.align	2
 4438              		.global	CySysTickSetCallback
 4439              		.code	16
 4440              		.thumb_func
 4441              		.type	CySysTickSetCallback, %function
 4442              	CySysTickSetCallback:
 4443              	.LFB68:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 4444              		.loc 1 3458 0
 4445              		.cfi_startproc
 4446              		@ args = 0, pretend = 0, frame = 0
 4447              		@ frame_needed = 0, uses_anonymous_args = 0
 4448              		@ link register save eliminated.
 4449              	.LVL462:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 4450              		.loc 1 3461 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 147


 4451 0000 8000     		lsls	r0, r0, #2
 4452              	.LVL463:
 4453 0002 024B     		ldr	r3, .L345
 4454 0004 1B18     		adds	r3, r3, r0
 4455 0006 9868     		ldr	r0, [r3, #8]
 4456              	.LVL464:
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 4457              		.loc 1 3462 0
 4458 0008 9960     		str	r1, [r3, #8]
3464:Generated_Source\PSoC4/CyLib.c **** 
 4459              		.loc 1 3464 0
 4460              		@ sp needed
 4461 000a 7047     		bx	lr
 4462              	.L346:
 4463              		.align	2
 4464              	.L345:
 4465 000c 00000000 		.word	.LANCHOR1
 4466              		.cfi_endproc
 4467              	.LFE68:
 4468              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 4469              		.section	.text.CySysTickGetCallback,"ax",%progbits
 4470              		.align	2
 4471              		.global	CySysTickGetCallback
 4472              		.code	16
 4473              		.thumb_func
 4474              		.type	CySysTickGetCallback, %function
 4475              	CySysTickGetCallback:
 4476              	.LFB69:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 4477              		.loc 1 3482 0
 4478              		.cfi_startproc
 4479              		@ args = 0, pretend = 0, frame = 0
 4480              		@ frame_needed = 0, uses_anonymous_args = 0
 4481              		@ link register save eliminated.
 4482              	.LVL465:
3483:Generated_Source\PSoC4/CyLib.c **** }
 4483              		.loc 1 3483 0
 4484 0000 8000     		lsls	r0, r0, #2
 4485              	.LVL466:
 4486 0002 024B     		ldr	r3, .L348
 4487 0004 1818     		adds	r0, r3, r0
 4488 0006 8068     		ldr	r0, [r0, #8]
3484:Generated_Source\PSoC4/CyLib.c **** 
 4489              		.loc 1 3484 0
 4490              		@ sp needed
 4491 0008 7047     		bx	lr
 4492              	.L349:
 4493 000a C046     		.align	2
 4494              	.L348:
 4495 000c 00000000 		.word	.LANCHOR1
 4496              		.cfi_endproc
 4497              	.LFE69:
 4498              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 4499              		.section	.text.CyGetUniqueId,"ax",%progbits
 4500              		.align	2
 4501              		.global	CyGetUniqueId
 4502              		.code	16
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 148


 4503              		.thumb_func
 4504              		.type	CyGetUniqueId, %function
 4505              	CyGetUniqueId:
 4506              	.LFB71:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 4507              		.loc 1 3527 0
 4508              		.cfi_startproc
 4509              		@ args = 0, pretend = 0, frame = 0
 4510              		@ frame_needed = 0, uses_anonymous_args = 0
 4511              		@ link register save eliminated.
 4512              	.LVL467:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 4513              		.loc 1 3529 0
 4514 0000 134B     		ldr	r3, .L351
 4515 0002 1B78     		ldrb	r3, [r3]
 4516 0004 DAB2     		uxtb	r2, r3
 4517 0006 0260     		str	r2, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 4518              		.loc 1 3530 0
 4519 0008 124B     		ldr	r3, .L351+4
 4520 000a 1B78     		ldrb	r3, [r3]
 4521 000c 1B02     		lsls	r3, r3, #8
 4522 000e 1343     		orrs	r3, r2
 4523 0010 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 4524              		.loc 1 3531 0
 4525 0012 114A     		ldr	r2, .L351+8
 4526 0014 1278     		ldrb	r2, [r2]
 4527 0016 1204     		lsls	r2, r2, #16
 4528 0018 1343     		orrs	r3, r2
 4529 001a 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 4530              		.loc 1 3532 0
 4531 001c 0F4A     		ldr	r2, .L351+12
 4532 001e 1278     		ldrb	r2, [r2]
 4533 0020 1206     		lsls	r2, r2, #24
 4534 0022 1343     		orrs	r3, r2
 4535 0024 0360     		str	r3, [r0]
3533:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 149


3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 4536              		.loc 1 3534 0
 4537 0026 0E4B     		ldr	r3, .L351+16
 4538 0028 1B78     		ldrb	r3, [r3]
 4539 002a DAB2     		uxtb	r2, r3
 4540 002c 4260     		str	r2, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 4541              		.loc 1 3535 0
 4542 002e 0D4B     		ldr	r3, .L351+20
 4543 0030 1B78     		ldrb	r3, [r3]
 4544 0032 1B02     		lsls	r3, r3, #8
 4545 0034 1343     		orrs	r3, r2
 4546 0036 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 4547              		.loc 1 3536 0
 4548 0038 0B4A     		ldr	r2, .L351+24
 4549 003a 1278     		ldrb	r2, [r2]
 4550 003c 1204     		lsls	r2, r2, #16
 4551 003e 1343     		orrs	r3, r2
 4552 0040 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 4553              		.loc 1 3537 0
 4554 0042 0A4A     		ldr	r2, .L351+28
 4555 0044 1278     		ldrb	r2, [r2]
 4556 0046 1206     		lsls	r2, r2, #24
 4557 0048 1343     		orrs	r3, r2
 4558 004a 4360     		str	r3, [r0, #4]
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 4559              		.loc 1 3549 0
 4560              		@ sp needed
 4561 004c 7047     		bx	lr
 4562              	.L352:
 4563 004e C046     		.align	2
 4564              	.L351:
 4565 0050 78F2FF0F 		.word	268431992
 4566 0054 79F2FF0F 		.word	268431993
 4567 0058 7AF2FF0F 		.word	268431994
 4568 005c 7BF2FF0F 		.word	268431995
 4569 0060 7CF2FF0F 		.word	268431996
 4570 0064 7DF2FF0F 		.word	268431997
 4571 0068 7EF2FF0F 		.word	268431998
 4572 006c 7FF2FF0F 		.word	268431999
 4573              		.cfi_endproc
 4574              	.LFE71:
 4575              		.size	CyGetUniqueId, .-CyGetUniqueId
 4576              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 150


 4577              		.align	2
 4578              		.global	CySysSetRamAccessArbPriority
 4579              		.code	16
 4580              		.thumb_func
 4581              		.type	CySysSetRamAccessArbPriority, %function
 4582              	CySysSetRamAccessArbPriority:
 4583              	.LFB72:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
 4584              		.loc 1 3572 0
 4585              		.cfi_startproc
 4586              		@ args = 0, pretend = 0, frame = 0
 4587              		@ frame_needed = 0, uses_anonymous_args = 0
 4588              		@ link register save eliminated.
 4589              	.LVL468:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 4590              		.loc 1 3575 0
 4591 0000 0549     		ldr	r1, .L354
 4592 0002 0A68     		ldr	r2, [r1]
 4593 0004 054B     		ldr	r3, .L354+4
 4594 0006 1A40     		ands	r2, r3
 4595              	.LVL469:
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 4596              		.loc 1 3576 0
 4597 0008 4004     		lsls	r0, r0, #17
 4598              	.LVL470:
 4599 000a C023     		movs	r3, #192
 4600 000c DB02     		lsls	r3, r3, #11
 4601 000e 1840     		ands	r0, r3
 4602 0010 1043     		orrs	r0, r2
 4603              	.LVL471:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 4604              		.loc 1 3577 0
 4605 0012 0860     		str	r0, [r1]
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 151


3578:Generated_Source\PSoC4/CyLib.c ****     }
 4606              		.loc 1 3578 0
 4607              		@ sp needed
 4608 0014 7047     		bx	lr
 4609              	.L355:
 4610 0016 C046     		.align	2
 4611              	.L354:
 4612 0018 38001040 		.word	1074790456
 4613 001c FFFFF9FF 		.word	-393217
 4614              		.cfi_endproc
 4615              	.LFE72:
 4616              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 4617              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 4618              		.align	2
 4619              		.global	CySysSetFlashAccessArbPriority
 4620              		.code	16
 4621              		.thumb_func
 4622              		.type	CySysSetFlashAccessArbPriority, %function
 4623              	CySysSetFlashAccessArbPriority:
 4624              	.LFB73:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 4625              		.loc 1 3600 0
 4626              		.cfi_startproc
 4627              		@ args = 0, pretend = 0, frame = 0
 4628              		@ frame_needed = 0, uses_anonymous_args = 0
 4629              		@ link register save eliminated.
 4630              	.LVL472:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 4631              		.loc 1 3603 0
 4632 0000 0549     		ldr	r1, .L357
 4633 0002 0A68     		ldr	r2, [r1]
 4634 0004 054B     		ldr	r3, .L357+4
 4635 0006 1A40     		ands	r2, r3
 4636              	.LVL473:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 152


3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 4637              		.loc 1 3604 0
 4638 0008 4004     		lsls	r0, r0, #17
 4639              	.LVL474:
 4640 000a C023     		movs	r3, #192
 4641 000c DB02     		lsls	r3, r3, #11
 4642 000e 1840     		ands	r0, r3
 4643 0010 1043     		orrs	r0, r2
 4644              	.LVL475:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 4645              		.loc 1 3605 0
 4646 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 4647              		.loc 1 3606 0
 4648              		@ sp needed
 4649 0014 7047     		bx	lr
 4650              	.L358:
 4651 0016 C046     		.align	2
 4652              	.L357:
 4653 0018 30001040 		.word	1074790448
 4654 001c FFFFF9FF 		.word	-393217
 4655              		.cfi_endproc
 4656              	.LFE73:
 4657              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 4658              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 4659              		.align	2
 4660              		.global	CySysSetDmacAccessArbPriority
 4661              		.code	16
 4662              		.thumb_func
 4663              		.type	CySysSetDmacAccessArbPriority, %function
 4664              	CySysSetDmacAccessArbPriority:
 4665              	.LFB74:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 4666              		.loc 1 3628 0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 153


 4669              		@ frame_needed = 0, uses_anonymous_args = 0
 4670              		@ link register save eliminated.
 4671              	.LVL476:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 4672              		.loc 1 3631 0
 4673 0000 0549     		ldr	r1, .L360
 4674 0002 0A68     		ldr	r2, [r1]
 4675 0004 054B     		ldr	r3, .L360+4
 4676 0006 1A40     		ands	r2, r3
 4677              	.LVL477:
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 4678              		.loc 1 3632 0
 4679 0008 4004     		lsls	r0, r0, #17
 4680              	.LVL478:
 4681 000a C023     		movs	r3, #192
 4682 000c DB02     		lsls	r3, r3, #11
 4683 000e 1840     		ands	r0, r3
 4684 0010 1043     		orrs	r0, r2
 4685              	.LVL479:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 4686              		.loc 1 3633 0
 4687 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 4688              		.loc 1 3634 0
 4689              		@ sp needed
 4690 0014 7047     		bx	lr
 4691              	.L361:
 4692 0016 C046     		.align	2
 4693              	.L360:
 4694 0018 3C001040 		.word	1074790460
 4695 001c FFFFF9FF 		.word	-393217
 4696              		.cfi_endproc
 4697              	.LFE74:
 4698              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 4699              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 4700              		.align	2
 4701              		.global	CySysSetPeripheralAccessArbPriority
 4702              		.code	16
 4703              		.thumb_func
 4704              		.type	CySysSetPeripheralAccessArbPriority, %function
 4705              	CySysSetPeripheralAccessArbPriority:
 4706              	.LFB75:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 154


3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 4707              		.loc 1 3658 0
 4708              		.cfi_startproc
 4709              		@ args = 0, pretend = 0, frame = 0
 4710              		@ frame_needed = 0, uses_anonymous_args = 0
 4711              	.LVL480:
 4712 0000 10B5     		push	{r4, lr}
 4713              		.cfi_def_cfa_offset 8
 4714              		.cfi_offset 4, -8
 4715              		.cfi_offset 14, -4
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 4716              		.loc 1 3661 0
 4717 0002 0028     		cmp	r0, #0
 4718 0004 0AD1     		bne	.L363
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 4719              		.loc 1 3663 0
 4720 0006 1448     		ldr	r0, .L367
 4721              	.LVL481:
 4722 0008 0268     		ldr	r2, [r0]
 4723 000a 144B     		ldr	r3, .L367+4
 4724 000c 1A40     		ands	r2, r3
 4725              	.LVL482:
3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 4726              		.loc 1 3664 0
 4727 000e 4904     		lsls	r1, r1, #17
 4728              	.LVL483:
 4729 0010 C023     		movs	r3, #192
 4730 0012 DB02     		lsls	r3, r3, #11
 4731 0014 1940     		ands	r1, r3
 4732 0016 1143     		orrs	r1, r2
 4733              	.LVL484:
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 4734              		.loc 1 3665 0
 4735 0018 0160     		str	r1, [r0]
 4736 001a 1CE0     		b	.L362
 4737              	.LVL485:
 4738              	.L363:
3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 4739              		.loc 1 3668 0
 4740 001c 0128     		cmp	r0, #1
 4741 001e 0AD1     		bne	.L365
3669:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 155


3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 4742              		.loc 1 3670 0
 4743 0020 0F48     		ldr	r0, .L367+8
 4744              	.LVL486:
 4745 0022 0268     		ldr	r2, [r0]
 4746 0024 0D4B     		ldr	r3, .L367+4
 4747 0026 1A40     		ands	r2, r3
 4748              	.LVL487:
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 4749              		.loc 1 3671 0
 4750 0028 4904     		lsls	r1, r1, #17
 4751              	.LVL488:
 4752 002a C023     		movs	r3, #192
 4753 002c DB02     		lsls	r3, r3, #11
 4754 002e 1940     		ands	r1, r3
 4755 0030 1143     		orrs	r1, r2
 4756              	.LVL489:
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 4757              		.loc 1 3672 0
 4758 0032 0160     		str	r1, [r0]
 4759 0034 0FE0     		b	.L362
 4760              	.LVL490:
 4761              	.L365:
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 4762              		.loc 1 3676 0
 4763 0036 0228     		cmp	r0, #2
 4764 0038 0AD1     		bne	.L366
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 4765              		.loc 1 3678 0
 4766 003a 0A48     		ldr	r0, .L367+12
 4767              	.LVL491:
 4768 003c 0268     		ldr	r2, [r0]
 4769 003e 074B     		ldr	r3, .L367+4
 4770 0040 1A40     		ands	r2, r3
 4771              	.LVL492:
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 4772              		.loc 1 3679 0
 4773 0042 4904     		lsls	r1, r1, #17
 4774              	.LVL493:
 4775 0044 C023     		movs	r3, #192
 4776 0046 DB02     		lsls	r3, r3, #11
 4777 0048 1940     		ands	r1, r3
 4778 004a 1143     		orrs	r1, r2
 4779              	.LVL494:
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 4780              		.loc 1 3680 0
 4781 004c 0160     		str	r1, [r0]
 4782 004e 02E0     		b	.L362
 4783              	.LVL495:
 4784              	.L366:
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 156


3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 4785              		.loc 1 3685 0 discriminator 1
 4786 0050 0020     		movs	r0, #0
 4787              	.LVL496:
 4788 0052 FFF7FEFF 		bl	CyHalt
 4789              	.LVL497:
 4790              	.L362:
3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 4791              		.loc 1 3687 0
 4792              		@ sp needed
 4793 0056 10BD     		pop	{r4, pc}
 4794              	.L368:
 4795              		.align	2
 4796              	.L367:
 4797 0058 00011040 		.word	1074790656
 4798 005c FFFFF9FF 		.word	-393217
 4799 0060 04011040 		.word	1074790660
 4800 0064 08011040 		.word	1074790664
 4801              		.cfi_endproc
 4802              	.LFE75:
 4803              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 4804              		.global	CySysClkPumpConfig
 4805              		.global	CySysClkImoTrim5
 4806              		.global	CySysClkImoTrim4
 4807              		.global	cyImoFreqMhz2Reg
 4808              		.global	CySysTickInitVar
 4809              		.global	cydelay32kMs
 4810              		.global	cydelayFreqMhz
 4811              		.global	cydelayFreqKhz
 4812              		.global	cydelayFreqHz
 4813              		.section	.rodata
 4814              		.align	2
 4815              		.set	.LANCHOR0,. + 0
 4816              		.type	cyImoFreqMhz2Reg, %object
 4817              		.size	cyImoFreqMhz2Reg, 46
 4818              	cyImoFreqMhz2Reg:
 4819 0000 03       		.byte	3
 4820 0001 04       		.byte	4
 4821 0002 05       		.byte	5
 4822 0003 06       		.byte	6
 4823 0004 07       		.byte	7
 4824 0005 08       		.byte	8
 4825 0006 09       		.byte	9
 4826 0007 0A       		.byte	10
 4827 0008 0B       		.byte	11
 4828 0009 0C       		.byte	12
 4829 000a 0E       		.byte	14
 4830 000b 0F       		.byte	15
 4831 000c 10       		.byte	16
 4832 000d 11       		.byte	17
 4833 000e 12       		.byte	18
 4834 000f 13       		.byte	19
 4835 0010 14       		.byte	20
 4836 0011 15       		.byte	21
 4837 0012 16       		.byte	22
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 157


 4838 0013 17       		.byte	23
 4839 0014 18       		.byte	24
 4840 0015 19       		.byte	25
 4841 0016 1B       		.byte	27
 4842 0017 1C       		.byte	28
 4843 0018 1D       		.byte	29
 4844 0019 1E       		.byte	30
 4845 001a 1F       		.byte	31
 4846 001b 20       		.byte	32
 4847 001c 21       		.byte	33
 4848 001d 22       		.byte	34
 4849 001e 23       		.byte	35
 4850 001f 25       		.byte	37
 4851 0020 26       		.byte	38
 4852 0021 27       		.byte	39
 4853 0022 28       		.byte	40
 4854 0023 29       		.byte	41
 4855 0024 2A       		.byte	42
 4856 0025 2B       		.byte	43
 4857 0026 2E       		.byte	46
 4858 0027 2F       		.byte	47
 4859 0028 30       		.byte	48
 4860 0029 31       		.byte	49
 4861 002a 32       		.byte	50
 4862 002b 33       		.byte	51
 4863 002c 34       		.byte	52
 4864 002d 35       		.byte	53
 4865              		.data
 4866              		.align	2
 4867              		.set	.LANCHOR2,. + 0
 4868              		.type	CySysClkPumpConfig, %object
 4869              		.size	CySysClkPumpConfig, 4
 4870              	CySysClkPumpConfig:
 4871 0000 01000000 		.word	1
 4872              		.type	cydelay32kMs, %object
 4873              		.size	cydelay32kMs, 4
 4874              	cydelay32kMs:
 4875 0004 0000C05D 		.word	1572864000
 4876              		.type	cydelayFreqKhz, %object
 4877              		.size	cydelayFreqKhz, 4
 4878              	cydelayFreqKhz:
 4879 0008 80BB0000 		.word	48000
 4880              		.type	cydelayFreqMhz, %object
 4881              		.size	cydelayFreqMhz, 1
 4882              	cydelayFreqMhz:
 4883 000c 30       		.byte	48
 4884 000d 000000   		.space	3
 4885              		.type	cydelayFreqHz, %object
 4886              		.size	cydelayFreqHz, 4
 4887              	cydelayFreqHz:
 4888 0010 006CDC02 		.word	48000000
 4889              		.bss
 4890              		.align	2
 4891              		.set	.LANCHOR1,. + 0
 4892              		.type	CySysClkImoTrim4, %object
 4893              		.size	CySysClkImoTrim4, 4
 4894              	CySysClkImoTrim4:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 158


 4895 0000 00000000 		.space	4
 4896              		.type	CySysClkImoTrim5, %object
 4897              		.size	CySysClkImoTrim5, 4
 4898              	CySysClkImoTrim5:
 4899 0004 00000000 		.space	4
 4900              		.type	CySysTickCallbacks, %object
 4901              		.size	CySysTickCallbacks, 20
 4902              	CySysTickCallbacks:
 4903 0008 00000000 		.space	20
 4903      00000000 
 4903      00000000 
 4903      00000000 
 4903      00000000 
 4904              		.type	CySysTickInitVar, %object
 4905              		.size	CySysTickInitVar, 4
 4906              	CySysTickInitVar:
 4907 001c 00000000 		.space	4
 4908              		.text
 4909              	.Letext0:
 4910              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 4911              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 4912              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 4913              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 4914              		.section	.debug_info,"",%progbits
 4915              	.Ldebug_info0:
 4916 0000 E0170000 		.4byte	0x17e0
 4917 0004 0400     		.2byte	0x4
 4918 0006 00000000 		.4byte	.Ldebug_abbrev0
 4919 000a 04       		.byte	0x4
 4920 000b 01       		.uleb128 0x1
 4921 000c AA020000 		.4byte	.LASF181
 4922 0010 0C       		.byte	0xc
 4923 0011 0A080000 		.4byte	.LASF182
 4924 0015 52080000 		.4byte	.LASF183
 4925 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4926 001d 00000000 		.4byte	0
 4927 0021 00000000 		.4byte	.Ldebug_line0
 4928 0025 02       		.uleb128 0x2
 4929 0026 01       		.byte	0x1
 4930 0027 06       		.byte	0x6
 4931 0028 080B0000 		.4byte	.LASF0
 4932 002c 02       		.uleb128 0x2
 4933 002d 01       		.byte	0x1
 4934 002e 08       		.byte	0x8
 4935 002f 80090000 		.4byte	.LASF1
 4936 0033 02       		.uleb128 0x2
 4937 0034 02       		.byte	0x2
 4938 0035 05       		.byte	0x5
 4939 0036 25070000 		.4byte	.LASF2
 4940 003a 02       		.uleb128 0x2
 4941 003b 02       		.byte	0x2
 4942 003c 07       		.byte	0x7
 4943 003d 140B0000 		.4byte	.LASF3
 4944 0041 02       		.uleb128 0x2
 4945 0042 04       		.byte	0x4
 4946 0043 05       		.byte	0x5
 4947 0044 4E070000 		.4byte	.LASF4
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 159


 4948 0048 02       		.uleb128 0x2
 4949 0049 04       		.byte	0x4
 4950 004a 07       		.byte	0x7
 4951 004b FE080000 		.4byte	.LASF5
 4952 004f 02       		.uleb128 0x2
 4953 0050 08       		.byte	0x8
 4954 0051 05       		.byte	0x5
 4955 0052 28050000 		.4byte	.LASF6
 4956 0056 02       		.uleb128 0x2
 4957 0057 08       		.byte	0x8
 4958 0058 07       		.byte	0x7
 4959 0059 54020000 		.4byte	.LASF7
 4960 005d 03       		.uleb128 0x3
 4961 005e 04       		.byte	0x4
 4962 005f 05       		.byte	0x5
 4963 0060 696E7400 		.ascii	"int\000"
 4964 0064 02       		.uleb128 0x2
 4965 0065 04       		.byte	0x4
 4966 0066 07       		.byte	0x7
 4967 0067 CD000000 		.4byte	.LASF8
 4968 006b 04       		.uleb128 0x4
 4969 006c 2F0B0000 		.4byte	.LASF9
 4970 0070 02       		.byte	0x2
 4971 0071 FB01     		.2byte	0x1fb
 4972 0073 2C000000 		.4byte	0x2c
 4973 0077 04       		.uleb128 0x4
 4974 0078 66040000 		.4byte	.LASF10
 4975 007c 02       		.byte	0x2
 4976 007d FC01     		.2byte	0x1fc
 4977 007f 3A000000 		.4byte	0x3a
 4978 0083 04       		.uleb128 0x4
 4979 0084 0F060000 		.4byte	.LASF11
 4980 0088 02       		.byte	0x2
 4981 0089 FD01     		.2byte	0x1fd
 4982 008b 48000000 		.4byte	0x48
 4983 008f 04       		.uleb128 0x4
 4984 0090 19020000 		.4byte	.LASF12
 4985 0094 02       		.byte	0x2
 4986 0095 0002     		.2byte	0x200
 4987 0097 41000000 		.4byte	0x41
 4988 009b 02       		.uleb128 0x2
 4989 009c 04       		.byte	0x4
 4990 009d 04       		.byte	0x4
 4991 009e 0D020000 		.4byte	.LASF13
 4992 00a2 02       		.uleb128 0x2
 4993 00a3 08       		.byte	0x8
 4994 00a4 04       		.byte	0x4
 4995 00a5 350B0000 		.4byte	.LASF14
 4996 00a9 02       		.uleb128 0x2
 4997 00aa 01       		.byte	0x1
 4998 00ab 08       		.byte	0x8
 4999 00ac 08040000 		.4byte	.LASF15
 5000 00b0 04       		.uleb128 0x4
 5001 00b1 5C090000 		.4byte	.LASF16
 5002 00b5 02       		.byte	0x2
 5003 00b6 9D02     		.2byte	0x29d
 5004 00b8 48000000 		.4byte	0x48
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 160


 5005 00bc 04       		.uleb128 0x4
 5006 00bd 4C010000 		.4byte	.LASF17
 5007 00c1 02       		.byte	0x2
 5008 00c2 A502     		.2byte	0x2a5
 5009 00c4 C8000000 		.4byte	0xc8
 5010 00c8 05       		.uleb128 0x5
 5011 00c9 6B000000 		.4byte	0x6b
 5012 00cd 04       		.uleb128 0x4
 5013 00ce BF060000 		.4byte	.LASF18
 5014 00d2 02       		.byte	0x2
 5015 00d3 A702     		.2byte	0x2a7
 5016 00d5 D9000000 		.4byte	0xd9
 5017 00d9 05       		.uleb128 0x5
 5018 00da 83000000 		.4byte	0x83
 5019 00de 04       		.uleb128 0x4
 5020 00df EA050000 		.4byte	.LASF19
 5021 00e3 02       		.byte	0x2
 5022 00e4 B702     		.2byte	0x2b7
 5023 00e6 EA000000 		.4byte	0xea
 5024 00ea 06       		.uleb128 0x6
 5025 00eb 04       		.byte	0x4
 5026 00ec F0000000 		.4byte	0xf0
 5027 00f0 07       		.uleb128 0x7
 5028 00f1 02       		.uleb128 0x2
 5029 00f2 08       		.byte	0x8
 5030 00f3 04       		.byte	0x4
 5031 00f4 A5060000 		.4byte	.LASF20
 5032 00f8 02       		.uleb128 0x2
 5033 00f9 04       		.byte	0x4
 5034 00fa 07       		.byte	0x7
 5035 00fb C3080000 		.4byte	.LASF21
 5036 00ff 04       		.uleb128 0x4
 5037 0100 DC030000 		.4byte	.LASF22
 5038 0104 03       		.byte	0x3
 5039 0105 0801     		.2byte	0x108
 5040 0107 EA000000 		.4byte	0xea
 5041 010b 08       		.uleb128 0x8
 5042 010c 0C       		.byte	0xc
 5043 010d 03       		.byte	0x3
 5044 010e D501     		.2byte	0x1d5
 5045 0110 3C010000 		.4byte	0x13c
 5046 0114 09       		.uleb128 0x9
 5047 0115 F0060000 		.4byte	.LASF23
 5048 0119 03       		.byte	0x3
 5049 011a D701     		.2byte	0x1d7
 5050 011c 83000000 		.4byte	0x83
 5051 0120 00       		.byte	0
 5052 0121 09       		.uleb128 0x9
 5053 0122 A0040000 		.4byte	.LASF24
 5054 0126 03       		.byte	0x3
 5055 0127 D801     		.2byte	0x1d8
 5056 0129 83000000 		.4byte	0x83
 5057 012d 04       		.byte	0x4
 5058 012e 09       		.uleb128 0x9
 5059 012f C3090000 		.4byte	.LASF25
 5060 0133 03       		.byte	0x3
 5061 0134 D901     		.2byte	0x1d9
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 161


 5062 0136 83000000 		.4byte	0x83
 5063 013a 08       		.byte	0x8
 5064 013b 00       		.byte	0
 5065 013c 04       		.uleb128 0x4
 5066 013d 85040000 		.4byte	.LASF26
 5067 0141 03       		.byte	0x3
 5068 0142 DA01     		.2byte	0x1da
 5069 0144 0B010000 		.4byte	0x10b
 5070 0148 08       		.uleb128 0x8
 5071 0149 18       		.byte	0x18
 5072 014a 03       		.byte	0x3
 5073 014b DD01     		.2byte	0x1dd
 5074 014d 5F010000 		.4byte	0x15f
 5075 0151 0A       		.uleb128 0xa
 5076 0152 706C6C00 		.ascii	"pll\000"
 5077 0156 03       		.byte	0x3
 5078 0157 DF01     		.2byte	0x1df
 5079 0159 5F010000 		.4byte	0x15f
 5080 015d 00       		.byte	0
 5081 015e 00       		.byte	0
 5082 015f 0B       		.uleb128 0xb
 5083 0160 3C010000 		.4byte	0x13c
 5084 0164 6F010000 		.4byte	0x16f
 5085 0168 0C       		.uleb128 0xc
 5086 0169 F8000000 		.4byte	0xf8
 5087 016d 01       		.byte	0x1
 5088 016e 00       		.byte	0
 5089 016f 04       		.uleb128 0x4
 5090 0170 E7010000 		.4byte	.LASF27
 5091 0174 03       		.byte	0x3
 5092 0175 E001     		.2byte	0x1e0
 5093 0177 48010000 		.4byte	0x148
 5094 017b 0D       		.uleb128 0xd
 5095 017c C30A0000 		.4byte	.LASF28
 5096 0180 01       		.byte	0x1
 5097 0181 CF01     		.2byte	0x1cf
 5098 0183 00000000 		.4byte	.LFB9
 5099 0187 30000000 		.4byte	.LFE9-.LFB9
 5100 018b 01       		.uleb128 0x1
 5101 018c 9C       		.byte	0x9c
 5102 018d A2010000 		.4byte	0x1a2
 5103 0191 0E       		.uleb128 0xe
 5104 0192 EE030000 		.4byte	.LASF30
 5105 0196 01       		.byte	0x1
 5106 0197 D201     		.2byte	0x1d2
 5107 0199 83000000 		.4byte	0x83
 5108 019d 00000000 		.4byte	.LLST0
 5109 01a1 00       		.byte	0
 5110 01a2 0D       		.uleb128 0xd
 5111 01a3 2F070000 		.4byte	.LASF29
 5112 01a7 01       		.byte	0x1
 5113 01a8 E701     		.2byte	0x1e7
 5114 01aa 00000000 		.4byte	.LFB10
 5115 01ae B0000000 		.4byte	.LFE10-.LFB10
 5116 01b2 01       		.uleb128 0x1
 5117 01b3 9C       		.byte	0x9c
 5118 01b4 E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 162


 5119 01b8 0F       		.uleb128 0xf
 5120 01b9 6900     		.ascii	"i\000"
 5121 01bb 01       		.byte	0x1
 5122 01bc E901     		.2byte	0x1e9
 5123 01be 83000000 		.4byte	0x83
 5124 01c2 26000000 		.4byte	.LLST1
 5125 01c6 0E       		.uleb128 0xe
 5126 01c7 D0030000 		.4byte	.LASF31
 5127 01cb 01       		.byte	0x1
 5128 01cc EC01     		.2byte	0x1ec
 5129 01ce 83000000 		.4byte	0x83
 5130 01d2 5D000000 		.4byte	.LLST2
 5131 01d6 0E       		.uleb128 0xe
 5132 01d7 EE030000 		.4byte	.LASF30
 5133 01db 01       		.byte	0x1
 5134 01dc F801     		.2byte	0x1f8
 5135 01de 83000000 		.4byte	0x83
 5136 01e2 B4000000 		.4byte	.LLST3
 5137 01e6 00       		.byte	0
 5138 01e7 10       		.uleb128 0x10
 5139 01e8 8C060000 		.4byte	.LASF47
 5140 01ec 01       		.byte	0x1
 5141 01ed 69       		.byte	0x69
 5142 01ee 00000000 		.4byte	.LFB1
 5143 01f2 14000000 		.4byte	.LFE1-.LFB1
 5144 01f6 01       		.uleb128 0x1
 5145 01f7 9C       		.byte	0x9c
 5146 01f8 11       		.uleb128 0x11
 5147 01f9 5C0A0000 		.4byte	.LASF32
 5148 01fd 01       		.byte	0x1
 5149 01fe 1B01     		.2byte	0x11b
 5150 0200 00000000 		.4byte	.LFB4
 5151 0204 54000000 		.4byte	.LFE4-.LFB4
 5152 0208 01       		.uleb128 0x1
 5153 0209 9C       		.byte	0x9c
 5154 020a 2D020000 		.4byte	0x22d
 5155 020e 0F       		.uleb128 0xf
 5156 020f 6900     		.ascii	"i\000"
 5157 0211 01       		.byte	0x1
 5158 0212 1E01     		.2byte	0x11e
 5159 0214 83000000 		.4byte	0x83
 5160 0218 F8000000 		.4byte	.LLST4
 5161 021c 0E       		.uleb128 0xe
 5162 021d D0030000 		.4byte	.LASF31
 5163 0221 01       		.byte	0x1
 5164 0222 2101     		.2byte	0x121
 5165 0224 83000000 		.4byte	0x83
 5166 0228 2F010000 		.4byte	.LLST5
 5167 022c 00       		.byte	0
 5168 022d 12       		.uleb128 0x12
 5169 022e 36010000 		.4byte	.LASF36
 5170 0232 01       		.byte	0x1
 5171 0233 5301     		.2byte	0x153
 5172 0235 83000000 		.4byte	0x83
 5173 0239 00000000 		.4byte	.LFB5
 5174 023d 14000000 		.4byte	.LFE5-.LFB5
 5175 0241 01       		.uleb128 0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 163


 5176 0242 9C       		.byte	0x9c
 5177 0243 11       		.uleb128 0x11
 5178 0244 91070000 		.4byte	.LASF33
 5179 0248 01       		.byte	0x1
 5180 0249 6E01     		.2byte	0x16e
 5181 024b 00000000 		.4byte	.LFB6
 5182 024f 44000000 		.4byte	.LFE6-.LFB6
 5183 0253 01       		.uleb128 0x1
 5184 0254 9C       		.byte	0x9c
 5185 0255 6C020000 		.4byte	0x26c
 5186 0259 13       		.uleb128 0x13
 5187 025a 1E000000 		.4byte	.LVL30
 5188 025e A2010000 		.4byte	0x1a2
 5189 0262 13       		.uleb128 0x13
 5190 0263 22000000 		.4byte	.LVL31
 5191 0267 7B010000 		.4byte	0x17b
 5192 026b 00       		.byte	0
 5193 026c 11       		.uleb128 0x11
 5194 026d DA000000 		.4byte	.LASF34
 5195 0271 01       		.byte	0x1
 5196 0272 9201     		.2byte	0x192
 5197 0274 00000000 		.4byte	.LFB7
 5198 0278 74000000 		.4byte	.LFE7-.LFB7
 5199 027c 01       		.uleb128 0x1
 5200 027d 9C       		.byte	0x9c
 5201 027e A1020000 		.4byte	0x2a1
 5202 0282 0F       		.uleb128 0xf
 5203 0283 6900     		.ascii	"i\000"
 5204 0285 01       		.byte	0x1
 5205 0286 9501     		.2byte	0x195
 5206 0288 83000000 		.4byte	0x83
 5207 028c 76010000 		.4byte	.LLST6
 5208 0290 0E       		.uleb128 0xe
 5209 0291 D0030000 		.4byte	.LASF31
 5210 0295 01       		.byte	0x1
 5211 0296 9801     		.2byte	0x198
 5212 0298 83000000 		.4byte	0x83
 5213 029c AD010000 		.4byte	.LLST7
 5214 02a0 00       		.byte	0
 5215 02a1 14       		.uleb128 0x14
 5216 02a2 3D040000 		.4byte	.LASF35
 5217 02a6 01       		.byte	0x1
 5218 02a7 8A       		.byte	0x8a
 5219 02a8 00000000 		.4byte	.LFB2
 5220 02ac 1C000000 		.4byte	.LFE2-.LFB2
 5221 02b0 01       		.uleb128 0x1
 5222 02b1 9C       		.byte	0x9c
 5223 02b2 C9020000 		.4byte	0x2c9
 5224 02b6 13       		.uleb128 0x13
 5225 02b7 06000000 		.4byte	.LVL40
 5226 02bb F8010000 		.4byte	0x1f8
 5227 02bf 13       		.uleb128 0x13
 5228 02c0 0A000000 		.4byte	.LVL41
 5229 02c4 6C020000 		.4byte	0x26c
 5230 02c8 00       		.byte	0
 5231 02c9 12       		.uleb128 0x12
 5232 02ca D1010000 		.4byte	.LASF37
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 164


 5233 02ce 01       		.byte	0x1
 5234 02cf BF01     		.2byte	0x1bf
 5235 02d1 83000000 		.4byte	0x83
 5236 02d5 00000000 		.4byte	.LFB8
 5237 02d9 14000000 		.4byte	.LFE8-.LFB8
 5238 02dd 01       		.uleb128 0x1
 5239 02de 9C       		.byte	0x9c
 5240 02df 11       		.uleb128 0x11
 5241 02e0 4D040000 		.4byte	.LASF38
 5242 02e4 01       		.byte	0x1
 5243 02e5 4802     		.2byte	0x248
 5244 02e7 00000000 		.4byte	.LFB11
 5245 02eb 44000000 		.4byte	.LFE11-.LFB11
 5246 02ef 01       		.uleb128 0x1
 5247 02f0 9C       		.byte	0x9c
 5248 02f1 38030000 		.4byte	0x338
 5249 02f5 15       		.uleb128 0x15
 5250 02f6 AE030000 		.4byte	.LASF42
 5251 02fa 01       		.byte	0x1
 5252 02fb 4802     		.2byte	0x248
 5253 02fd 83000000 		.4byte	0x83
 5254 0301 F4010000 		.4byte	.LLST8
 5255 0305 0E       		.uleb128 0xe
 5256 0306 27010000 		.4byte	.LASF39
 5257 030a 01       		.byte	0x1
 5258 030b 4A02     		.2byte	0x24a
 5259 030d 6B000000 		.4byte	0x6b
 5260 0311 39020000 		.4byte	.LLST9
 5261 0315 0E       		.uleb128 0xe
 5262 0316 D1060000 		.4byte	.LASF40
 5263 031a 01       		.byte	0x1
 5264 031b 4B02     		.2byte	0x24b
 5265 031d 83000000 		.4byte	0x83
 5266 0321 4C020000 		.4byte	.LLST10
 5267 0325 13       		.uleb128 0x13
 5268 0326 08000000 		.4byte	.LVL43
 5269 032a AC170000 		.4byte	0x17ac
 5270 032e 13       		.uleb128 0x13
 5271 032f 38000000 		.4byte	.LVL50
 5272 0333 B7170000 		.4byte	0x17b7
 5273 0337 00       		.byte	0
 5274 0338 11       		.uleb128 0x11
 5275 0339 12010000 		.4byte	.LASF41
 5276 033d 01       		.byte	0x1
 5277 033e 9502     		.2byte	0x295
 5278 0340 00000000 		.4byte	.LFB12
 5279 0344 38000000 		.4byte	.LFE12-.LFB12
 5280 0348 01       		.uleb128 0x1
 5281 0349 9C       		.byte	0x9c
 5282 034a 5D030000 		.4byte	0x35d
 5283 034e 16       		.uleb128 0x16
 5284 034f 79020000 		.4byte	.LASF43
 5285 0353 01       		.byte	0x1
 5286 0354 9502     		.2byte	0x295
 5287 0356 83000000 		.4byte	0x83
 5288 035a 01       		.uleb128 0x1
 5289 035b 50       		.byte	0x50
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 165


 5290 035c 00       		.byte	0
 5291 035d 17       		.uleb128 0x17
 5292 035e 8D020000 		.4byte	.LASF49
 5293 0362 01       		.byte	0x1
 5294 0363 BA02     		.2byte	0x2ba
 5295 0365 83000000 		.4byte	0x83
 5296 0369 00000000 		.4byte	.LFB13
 5297 036d 34000000 		.4byte	.LFE13-.LFB13
 5298 0371 01       		.uleb128 0x1
 5299 0372 9C       		.byte	0x9c
 5300 0373 AA030000 		.4byte	0x3aa
 5301 0377 0E       		.uleb128 0xe
 5302 0378 27010000 		.4byte	.LASF39
 5303 037c 01       		.byte	0x1
 5304 037d BC02     		.2byte	0x2bc
 5305 037f 6B000000 		.4byte	0x6b
 5306 0383 5F020000 		.4byte	.LLST11
 5307 0387 0E       		.uleb128 0xe
 5308 0388 3C0B0000 		.4byte	.LASF44
 5309 038c 01       		.byte	0x1
 5310 038d BD02     		.2byte	0x2bd
 5311 038f 83000000 		.4byte	0x83
 5312 0393 72020000 		.4byte	.LLST12
 5313 0397 13       		.uleb128 0x13
 5314 0398 06000000 		.4byte	.LVL52
 5315 039c AC170000 		.4byte	0x17ac
 5316 03a0 13       		.uleb128 0x13
 5317 03a1 2A000000 		.4byte	.LVL56
 5318 03a5 B7170000 		.4byte	0x17b7
 5319 03a9 00       		.byte	0
 5320 03aa 11       		.uleb128 0x11
 5321 03ab D3070000 		.4byte	.LASF45
 5322 03af 01       		.byte	0x1
 5323 03b0 F702     		.2byte	0x2f7
 5324 03b2 00000000 		.4byte	.LFB14
 5325 03b6 30000000 		.4byte	.LFE14-.LFB14
 5326 03ba 01       		.uleb128 0x1
 5327 03bb 9C       		.byte	0x9c
 5328 03bc F3030000 		.4byte	0x3f3
 5329 03c0 15       		.uleb128 0x15
 5330 03c1 46070000 		.4byte	.LASF46
 5331 03c5 01       		.byte	0x1
 5332 03c6 F702     		.2byte	0x2f7
 5333 03c8 83000000 		.4byte	0x83
 5334 03cc 9B020000 		.4byte	.LLST13
 5335 03d0 0E       		.uleb128 0xe
 5336 03d1 27010000 		.4byte	.LASF39
 5337 03d5 01       		.byte	0x1
 5338 03d6 F902     		.2byte	0x2f9
 5339 03d8 6B000000 		.4byte	0x6b
 5340 03dc C7020000 		.4byte	.LLST14
 5341 03e0 13       		.uleb128 0x13
 5342 03e1 08000000 		.4byte	.LVL59
 5343 03e5 AC170000 		.4byte	0x17ac
 5344 03e9 13       		.uleb128 0x13
 5345 03ea 24000000 		.4byte	.LVL61
 5346 03ee B7170000 		.4byte	0x17b7
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 166


 5347 03f2 00       		.byte	0
 5348 03f3 18       		.uleb128 0x18
 5349 03f4 FD010000 		.4byte	.LASF48
 5350 03f8 01       		.byte	0x1
 5351 03f9 4205     		.2byte	0x542
 5352 03fb 00000000 		.4byte	.LFB17
 5353 03ff 14000000 		.4byte	.LFE17-.LFB17
 5354 0403 01       		.uleb128 0x1
 5355 0404 9C       		.byte	0x9c
 5356 0405 17       		.uleb128 0x17
 5357 0406 C4040000 		.4byte	.LASF50
 5358 040a 01       		.byte	0x1
 5359 040b 6505     		.2byte	0x565
 5360 040d 83000000 		.4byte	0x83
 5361 0411 00000000 		.4byte	.LFB18
 5362 0415 14000000 		.4byte	.LFE18-.LFB18
 5363 0419 01       		.uleb128 0x1
 5364 041a 9C       		.byte	0x9c
 5365 041b 2E040000 		.4byte	0x42e
 5366 041f 19       		.uleb128 0x19
 5367 0420 80060000 		.4byte	.LASF51
 5368 0424 01       		.byte	0x1
 5369 0425 6705     		.2byte	0x567
 5370 0427 83000000 		.4byte	0x83
 5371 042b 01       		.uleb128 0x1
 5372 042c 50       		.byte	0x50
 5373 042d 00       		.byte	0
 5374 042e 11       		.uleb128 0x11
 5375 042f E5080000 		.4byte	.LASF52
 5376 0433 01       		.byte	0x1
 5377 0434 ED05     		.2byte	0x5ed
 5378 0436 00000000 		.4byte	.LFB19
 5379 043a 60000000 		.4byte	.LFE19-.LFB19
 5380 043e 01       		.uleb128 0x1
 5381 043f 9C       		.byte	0x9c
 5382 0440 C6040000 		.4byte	0x4c6
 5383 0444 15       		.uleb128 0x15
 5384 0445 F7050000 		.4byte	.LASF53
 5385 0449 01       		.byte	0x1
 5386 044a ED05     		.2byte	0x5ed
 5387 044c 83000000 		.4byte	0x83
 5388 0450 DA020000 		.4byte	.LLST15
 5389 0454 15       		.uleb128 0x15
 5390 0455 EB040000 		.4byte	.LASF54
 5391 0459 01       		.byte	0x1
 5392 045a ED05     		.2byte	0x5ed
 5393 045c 83000000 		.4byte	0x83
 5394 0460 06030000 		.4byte	.LLST16
 5395 0464 15       		.uleb128 0x15
 5396 0465 F4000000 		.4byte	.LASF55
 5397 0469 01       		.byte	0x1
 5398 046a ED05     		.2byte	0x5ed
 5399 046c 83000000 		.4byte	0x83
 5400 0470 32030000 		.4byte	.LLST17
 5401 0474 15       		.uleb128 0x15
 5402 0475 17090000 		.4byte	.LASF56
 5403 0479 01       		.byte	0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 167


 5404 047a ED05     		.2byte	0x5ed
 5405 047c 83000000 		.4byte	0x83
 5406 0480 5E030000 		.4byte	.LLST18
 5407 0484 16       		.uleb128 0x16
 5408 0485 04080000 		.4byte	.LASF57
 5409 0489 01       		.byte	0x1
 5410 048a ED05     		.2byte	0x5ed
 5411 048c 83000000 		.4byte	0x83
 5412 0490 02       		.uleb128 0x2
 5413 0491 91       		.byte	0x91
 5414 0492 00       		.sleb128 0
 5415 0493 0E       		.uleb128 0xe
 5416 0494 27010000 		.4byte	.LASF39
 5417 0498 01       		.byte	0x1
 5418 0499 EF05     		.2byte	0x5ef
 5419 049b 6B000000 		.4byte	0x6b
 5420 049f 8A030000 		.4byte	.LLST19
 5421 04a3 0E       		.uleb128 0xe
 5422 04a4 80020000 		.4byte	.LASF58
 5423 04a8 01       		.byte	0x1
 5424 04a9 F005     		.2byte	0x5f0
 5425 04ab 83000000 		.4byte	0x83
 5426 04af 9D030000 		.4byte	.LLST20
 5427 04b3 13       		.uleb128 0x13
 5428 04b4 12000000 		.4byte	.LVL64
 5429 04b8 AC170000 		.4byte	0x17ac
 5430 04bc 13       		.uleb128 0x13
 5431 04bd 52000000 		.4byte	.LVL75
 5432 04c1 B7170000 		.4byte	0x17b7
 5433 04c5 00       		.byte	0
 5434 04c6 1A       		.uleb128 0x1a
 5435 04c7 65070000 		.4byte	.LASF59
 5436 04cb 01       		.byte	0x1
 5437 04cc 2106     		.2byte	0x621
 5438 04ce B0000000 		.4byte	0xb0
 5439 04d2 00000000 		.4byte	.LFB20
 5440 04d6 74010000 		.4byte	.LFE20-.LFB20
 5441 04da 01       		.uleb128 0x1
 5442 04db 9C       		.byte	0x9c
 5443 04dc A9050000 		.4byte	0x5a9
 5444 04e0 15       		.uleb128 0x15
 5445 04e1 D0030000 		.4byte	.LASF31
 5446 04e5 01       		.byte	0x1
 5447 04e6 2106     		.2byte	0x621
 5448 04e8 83000000 		.4byte	0x83
 5449 04ec E7030000 		.4byte	.LLST21
 5450 04f0 15       		.uleb128 0x15
 5451 04f1 0C070000 		.4byte	.LASF60
 5452 04f5 01       		.byte	0x1
 5453 04f6 2106     		.2byte	0x621
 5454 04f8 83000000 		.4byte	0x83
 5455 04fc 3F040000 		.4byte	.LLST22
 5456 0500 1B       		.uleb128 0x1b
 5457 0501 65737200 		.ascii	"esr\000"
 5458 0505 01       		.byte	0x1
 5459 0506 2106     		.2byte	0x621
 5460 0508 83000000 		.4byte	0x83
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 168


 5461 050c 9A040000 		.4byte	.LLST23
 5462 0510 15       		.uleb128 0x15
 5463 0511 F7040000 		.4byte	.LASF61
 5464 0515 01       		.byte	0x1
 5465 0516 2106     		.2byte	0x621
 5466 0518 83000000 		.4byte	0x83
 5467 051c F2040000 		.4byte	.LLST24
 5468 0520 0E       		.uleb128 0xe
 5469 0521 96000000 		.4byte	.LASF62
 5470 0525 01       		.byte	0x1
 5471 0526 2306     		.2byte	0x623
 5472 0528 B0000000 		.4byte	0xb0
 5473 052c 1E050000 		.4byte	.LLST25
 5474 0530 0E       		.uleb128 0xe
 5475 0531 F7050000 		.4byte	.LASF53
 5476 0535 01       		.byte	0x1
 5477 0536 2506     		.2byte	0x625
 5478 0538 83000000 		.4byte	0x83
 5479 053c 5F050000 		.4byte	.LLST26
 5480 0540 0E       		.uleb128 0xe
 5481 0541 EB040000 		.4byte	.LASF54
 5482 0545 01       		.byte	0x1
 5483 0546 2606     		.2byte	0x626
 5484 0548 83000000 		.4byte	0x83
 5485 054c 7F050000 		.4byte	.LLST27
 5486 0550 0E       		.uleb128 0xe
 5487 0551 F4000000 		.4byte	.LASF55
 5488 0555 01       		.byte	0x1
 5489 0556 2706     		.2byte	0x627
 5490 0558 83000000 		.4byte	0x83
 5491 055c 9F050000 		.4byte	.LLST28
 5492 0560 0E       		.uleb128 0xe
 5493 0561 17090000 		.4byte	.LASF56
 5494 0565 01       		.byte	0x1
 5495 0566 2806     		.2byte	0x628
 5496 0568 83000000 		.4byte	0x83
 5497 056c 9F050000 		.4byte	.LLST28
 5498 0570 0E       		.uleb128 0xe
 5499 0571 04080000 		.4byte	.LASF57
 5500 0575 01       		.byte	0x1
 5501 0576 2906     		.2byte	0x629
 5502 0578 83000000 		.4byte	0x83
 5503 057c B2050000 		.4byte	.LLST30
 5504 0580 0E       		.uleb128 0xe
 5505 0581 F1040000 		.4byte	.LASF63
 5506 0585 01       		.byte	0x1
 5507 0586 2B06     		.2byte	0x62b
 5508 0588 83000000 		.4byte	0x83
 5509 058c DC050000 		.4byte	.LLST31
 5510 0590 1C       		.uleb128 0x1c
 5511 0591 0C010000 		.4byte	.LVL99
 5512 0595 2E040000 		.4byte	0x42e
 5513 0599 1D       		.uleb128 0x1d
 5514 059a 01       		.uleb128 0x1
 5515 059b 50       		.byte	0x50
 5516 059c 03       		.uleb128 0x3
 5517 059d 91       		.byte	0x91
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 169


 5518 059e 60       		.sleb128 -32
 5519 059f 06       		.byte	0x6
 5520 05a0 1D       		.uleb128 0x1d
 5521 05a1 01       		.uleb128 0x1
 5522 05a2 51       		.byte	0x51
 5523 05a3 03       		.uleb128 0x3
 5524 05a4 91       		.byte	0x91
 5525 05a5 64       		.sleb128 -28
 5526 05a6 06       		.byte	0x6
 5527 05a7 00       		.byte	0
 5528 05a8 00       		.byte	0
 5529 05a9 11       		.uleb128 0x11
 5530 05aa A5080000 		.4byte	.LASF64
 5531 05ae 01       		.byte	0x1
 5532 05af 2007     		.2byte	0x720
 5533 05b1 00000000 		.4byte	.LFB23
 5534 05b5 28000000 		.4byte	.LFE23-.LFB23
 5535 05b9 01       		.uleb128 0x1
 5536 05ba 9C       		.byte	0x9c
 5537 05bb F2050000 		.4byte	0x5f2
 5538 05bf 1B       		.uleb128 0x1b
 5539 05c0 706C6C00 		.ascii	"pll\000"
 5540 05c4 01       		.byte	0x1
 5541 05c5 2007     		.2byte	0x720
 5542 05c7 83000000 		.4byte	0x83
 5543 05cb 12060000 		.4byte	.LLST32
 5544 05cf 0E       		.uleb128 0xe
 5545 05d0 27010000 		.4byte	.LASF39
 5546 05d4 01       		.byte	0x1
 5547 05d5 2207     		.2byte	0x722
 5548 05d7 6B000000 		.4byte	0x6b
 5549 05db 3E060000 		.4byte	.LLST33
 5550 05df 13       		.uleb128 0x13
 5551 05e0 0C000000 		.4byte	.LVL110
 5552 05e4 AC170000 		.4byte	0x17ac
 5553 05e8 13       		.uleb128 0x13
 5554 05e9 22000000 		.4byte	.LVL111
 5555 05ed B7170000 		.4byte	0x17b7
 5556 05f1 00       		.byte	0
 5557 05f2 11       		.uleb128 0x11
 5558 05f3 CC080000 		.4byte	.LASF65
 5559 05f7 01       		.byte	0x1
 5560 05f8 9107     		.2byte	0x791
 5561 05fa 00000000 		.4byte	.LFB25
 5562 05fe 38000000 		.4byte	.LFE25-.LFB25
 5563 0602 01       		.uleb128 0x1
 5564 0603 9C       		.byte	0x9c
 5565 0604 5B060000 		.4byte	0x65b
 5566 0608 1B       		.uleb128 0x1b
 5567 0609 706C6C00 		.ascii	"pll\000"
 5568 060d 01       		.byte	0x1
 5569 060e 9107     		.2byte	0x791
 5570 0610 83000000 		.4byte	0x83
 5571 0614 51060000 		.4byte	.LLST34
 5572 0618 15       		.uleb128 0x15
 5573 0619 D5030000 		.4byte	.LASF66
 5574 061d 01       		.byte	0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 170


 5575 061e 9107     		.2byte	0x791
 5576 0620 83000000 		.4byte	0x83
 5577 0624 7D060000 		.4byte	.LLST35
 5578 0628 0E       		.uleb128 0xe
 5579 0629 80020000 		.4byte	.LASF58
 5580 062d 01       		.byte	0x1
 5581 062e 9307     		.2byte	0x793
 5582 0630 83000000 		.4byte	0x83
 5583 0634 A9060000 		.4byte	.LLST36
 5584 0638 0E       		.uleb128 0xe
 5585 0639 27010000 		.4byte	.LASF39
 5586 063d 01       		.byte	0x1
 5587 063e 9407     		.2byte	0x794
 5588 0640 6B000000 		.4byte	0x6b
 5589 0644 C7060000 		.4byte	.LLST37
 5590 0648 13       		.uleb128 0x13
 5591 0649 0A000000 		.4byte	.LVL114
 5592 064d AC170000 		.4byte	0x17ac
 5593 0651 13       		.uleb128 0x13
 5594 0652 2E000000 		.4byte	.LVL120
 5595 0656 B7170000 		.4byte	0x17b7
 5596 065a 00       		.byte	0
 5597 065b 17       		.uleb128 0x17
 5598 065c 3F000000 		.4byte	.LASF67
 5599 0660 01       		.byte	0x1
 5600 0661 FA07     		.2byte	0x7fa
 5601 0663 83000000 		.4byte	0x83
 5602 0667 00000000 		.4byte	.LFB28
 5603 066b 34000000 		.4byte	.LFE28-.LFB28
 5604 066f 01       		.uleb128 0x1
 5605 0670 9C       		.byte	0x9c
 5606 0671 B8060000 		.4byte	0x6b8
 5607 0675 1B       		.uleb128 0x1b
 5608 0676 706C6C00 		.ascii	"pll\000"
 5609 067a 01       		.byte	0x1
 5610 067b FA07     		.2byte	0x7fa
 5611 067d 83000000 		.4byte	0x83
 5612 0681 DA060000 		.4byte	.LLST38
 5613 0685 0E       		.uleb128 0xe
 5614 0686 96000000 		.4byte	.LASF62
 5615 068a 01       		.byte	0x1
 5616 068b FC07     		.2byte	0x7fc
 5617 068d 83000000 		.4byte	0x83
 5618 0691 06070000 		.4byte	.LLST39
 5619 0695 0E       		.uleb128 0xe
 5620 0696 27010000 		.4byte	.LASF39
 5621 069a 01       		.byte	0x1
 5622 069b FD07     		.2byte	0x7fd
 5623 069d 6B000000 		.4byte	0x6b
 5624 06a1 30070000 		.4byte	.LLST40
 5625 06a5 13       		.uleb128 0x13
 5626 06a6 08000000 		.4byte	.LVL123
 5627 06aa AC170000 		.4byte	0x17ac
 5628 06ae 13       		.uleb128 0x13
 5629 06af 2A000000 		.4byte	.LVL126
 5630 06b3 B7170000 		.4byte	0x17b7
 5631 06b7 00       		.byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 171


 5632 06b8 11       		.uleb128 0x11
 5633 06b9 DC0A0000 		.4byte	.LASF68
 5634 06bd 01       		.byte	0x1
 5635 06be 9008     		.2byte	0x890
 5636 06c0 00000000 		.4byte	.LFB30
 5637 06c4 30000000 		.4byte	.LFE30-.LFB30
 5638 06c8 01       		.uleb128 0x1
 5639 06c9 9C       		.byte	0x9c
 5640 06ca 21070000 		.4byte	0x721
 5641 06ce 1B       		.uleb128 0x1b
 5642 06cf 706C6C00 		.ascii	"pll\000"
 5643 06d3 01       		.byte	0x1
 5644 06d4 9008     		.2byte	0x890
 5645 06d6 83000000 		.4byte	0x83
 5646 06da 43070000 		.4byte	.LLST41
 5647 06de 15       		.uleb128 0x15
 5648 06df 29080000 		.4byte	.LASF69
 5649 06e3 01       		.byte	0x1
 5650 06e4 9008     		.2byte	0x890
 5651 06e6 83000000 		.4byte	0x83
 5652 06ea 7C070000 		.4byte	.LLST42
 5653 06ee 0E       		.uleb128 0xe
 5654 06ef 27010000 		.4byte	.LASF39
 5655 06f3 01       		.byte	0x1
 5656 06f4 9208     		.2byte	0x892
 5657 06f6 6B000000 		.4byte	0x6b
 5658 06fa A8070000 		.4byte	.LLST43
 5659 06fe 0E       		.uleb128 0xe
 5660 06ff 80020000 		.4byte	.LASF58
 5661 0703 01       		.byte	0x1
 5662 0704 9708     		.2byte	0x897
 5663 0706 83000000 		.4byte	0x83
 5664 070a BB070000 		.4byte	.LLST44
 5665 070e 13       		.uleb128 0x13
 5666 070f 0A000000 		.4byte	.LVL129
 5667 0713 AC170000 		.4byte	0x17ac
 5668 0717 13       		.uleb128 0x13
 5669 0718 2A000000 		.4byte	.LVL136
 5670 071c B7170000 		.4byte	0x17b7
 5671 0720 00       		.byte	0
 5672 0721 18       		.uleb128 0x18
 5673 0722 490B0000 		.4byte	.LASF70
 5674 0726 01       		.byte	0x1
 5675 0727 840A     		.2byte	0xa84
 5676 0729 00000000 		.4byte	.LFB33
 5677 072d 20000000 		.4byte	.LFE33-.LFB33
 5678 0731 01       		.uleb128 0x1
 5679 0732 9C       		.byte	0x9c
 5680 0733 12       		.uleb128 0x12
 5681 0734 7E010000 		.4byte	.LASF71
 5682 0738 01       		.byte	0x1
 5683 0739 960A     		.2byte	0xa96
 5684 073b 83000000 		.4byte	0x83
 5685 073f 00000000 		.4byte	.LFB34
 5686 0743 10000000 		.4byte	.LFE34-.LFB34
 5687 0747 01       		.uleb128 0x1
 5688 0748 9C       		.byte	0x9c
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 172


 5689 0749 18       		.uleb128 0x18
 5690 074a 1D090000 		.4byte	.LASF72
 5691 074e 01       		.byte	0x1
 5692 074f A60A     		.2byte	0xaa6
 5693 0751 00000000 		.4byte	.LFB35
 5694 0755 0C000000 		.4byte	.LFE35-.LFB35
 5695 0759 01       		.uleb128 0x1
 5696 075a 9C       		.byte	0x9c
 5697 075b 17       		.uleb128 0x17
 5698 075c 67050000 		.4byte	.LASF73
 5699 0760 01       		.byte	0x1
 5700 0761 C00A     		.2byte	0xac0
 5701 0763 83000000 		.4byte	0x83
 5702 0767 00000000 		.4byte	.LFB36
 5703 076b 14000000 		.4byte	.LFE36-.LFB36
 5704 076f 01       		.uleb128 0x1
 5705 0770 9C       		.byte	0x9c
 5706 0771 94070000 		.4byte	0x794
 5707 0775 15       		.uleb128 0x15
 5708 0776 6B020000 		.4byte	.LASF74
 5709 077a 01       		.byte	0x1
 5710 077b C00A     		.2byte	0xac0
 5711 077d 83000000 		.4byte	0x83
 5712 0781 D9070000 		.4byte	.LLST45
 5713 0785 19       		.uleb128 0x19
 5714 0786 96000000 		.4byte	.LASF62
 5715 078a 01       		.byte	0x1
 5716 078b C20A     		.2byte	0xac2
 5717 078d 83000000 		.4byte	0x83
 5718 0791 01       		.uleb128 0x1
 5719 0792 50       		.byte	0x50
 5720 0793 00       		.byte	0
 5721 0794 17       		.uleb128 0x17
 5722 0795 B1060000 		.4byte	.LASF75
 5723 0799 01       		.byte	0x1
 5724 079a D70A     		.2byte	0xad7
 5725 079c 83000000 		.4byte	0x83
 5726 07a0 00000000 		.4byte	.LFB37
 5727 07a4 10000000 		.4byte	.LFE37-.LFB37
 5728 07a8 01       		.uleb128 0x1
 5729 07a9 9C       		.byte	0x9c
 5730 07aa BD070000 		.4byte	0x7bd
 5731 07ae 19       		.uleb128 0x19
 5732 07af B8030000 		.4byte	.LASF76
 5733 07b3 01       		.byte	0x1
 5734 07b4 D90A     		.2byte	0xad9
 5735 07b6 83000000 		.4byte	0x83
 5736 07ba 01       		.uleb128 0x1
 5737 07bb 50       		.byte	0x50
 5738 07bc 00       		.byte	0
 5739 07bd 11       		.uleb128 0x11
 5740 07be B8010000 		.4byte	.LASF77
 5741 07c2 01       		.byte	0x1
 5742 07c3 EE0A     		.2byte	0xaee
 5743 07c5 00000000 		.4byte	.LFB38
 5744 07c9 0C000000 		.4byte	.LFE38-.LFB38
 5745 07cd 01       		.uleb128 0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 173


 5746 07ce 9C       		.byte	0x9c
 5747 07cf E2070000 		.4byte	0x7e2
 5748 07d3 16       		.uleb128 0x16
 5749 07d4 5E060000 		.4byte	.LASF78
 5750 07d8 01       		.byte	0x1
 5751 07d9 EE0A     		.2byte	0xaee
 5752 07db 83000000 		.4byte	0x83
 5753 07df 01       		.uleb128 0x1
 5754 07e0 50       		.byte	0x50
 5755 07e1 00       		.byte	0
 5756 07e2 11       		.uleb128 0x11
 5757 07e3 AD0A0000 		.4byte	.LASF79
 5758 07e7 01       		.byte	0x1
 5759 07e8 A50B     		.2byte	0xba5
 5760 07ea 00000000 		.4byte	.LFB45
 5761 07ee 14000000 		.4byte	.LFE45-.LFB45
 5762 07f2 01       		.uleb128 0x1
 5763 07f3 9C       		.byte	0x9c
 5764 07f4 09080000 		.4byte	0x809
 5765 07f8 15       		.uleb128 0x15
 5766 07f9 30080000 		.4byte	.LASF80
 5767 07fd 01       		.byte	0x1
 5768 07fe A50B     		.2byte	0xba5
 5769 0800 6B000000 		.4byte	0x6b
 5770 0804 F7070000 		.4byte	.LLST46
 5771 0808 00       		.byte	0
 5772 0809 17       		.uleb128 0x17
 5773 080a 46030000 		.4byte	.LASF81
 5774 080e 01       		.byte	0x1
 5775 080f B70B     		.2byte	0xbb7
 5776 0811 6B000000 		.4byte	0x6b
 5777 0815 00000000 		.4byte	.LFB46
 5778 0819 18000000 		.4byte	.LFE46-.LFB46
 5779 081d 01       		.uleb128 0x1
 5780 081e 9C       		.byte	0x9c
 5781 081f 34080000 		.4byte	0x834
 5782 0823 15       		.uleb128 0x15
 5783 0824 30080000 		.4byte	.LASF80
 5784 0828 01       		.byte	0x1
 5785 0829 B70B     		.2byte	0xbb7
 5786 082b 6B000000 		.4byte	0x6b
 5787 082f 18080000 		.4byte	.LLST47
 5788 0833 00       		.byte	0
 5789 0834 11       		.uleb128 0x11
 5790 0835 60010000 		.4byte	.LASF82
 5791 0839 01       		.byte	0x1
 5792 083a C70B     		.2byte	0xbc7
 5793 083c 00000000 		.4byte	.LFB47
 5794 0840 14000000 		.4byte	.LFE47-.LFB47
 5795 0844 01       		.uleb128 0x1
 5796 0845 9C       		.byte	0x9c
 5797 0846 5B080000 		.4byte	0x85b
 5798 084a 15       		.uleb128 0x15
 5799 084b 30080000 		.4byte	.LASF80
 5800 084f 01       		.byte	0x1
 5801 0850 C70B     		.2byte	0xbc7
 5802 0852 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 174


 5803 0856 39080000 		.4byte	.LLST48
 5804 085a 00       		.byte	0
 5805 085b 11       		.uleb128 0x11
 5806 085c 9E030000 		.4byte	.LASF83
 5807 0860 01       		.byte	0x1
 5808 0861 D50B     		.2byte	0xbd5
 5809 0863 00000000 		.4byte	.LFB48
 5810 0867 14000000 		.4byte	.LFE48-.LFB48
 5811 086b 01       		.uleb128 0x1
 5812 086c 9C       		.byte	0x9c
 5813 086d 82080000 		.4byte	0x882
 5814 0871 15       		.uleb128 0x15
 5815 0872 30080000 		.4byte	.LASF80
 5816 0876 01       		.byte	0x1
 5817 0877 D50B     		.2byte	0xbd5
 5818 0879 6B000000 		.4byte	0x6b
 5819 087d 5A080000 		.4byte	.LLST49
 5820 0881 00       		.byte	0
 5821 0882 11       		.uleb128 0x11
 5822 0883 F6030000 		.4byte	.LASF84
 5823 0887 01       		.byte	0x1
 5824 0888 E40B     		.2byte	0xbe4
 5825 088a 00000000 		.4byte	.LFB49
 5826 088e 14000000 		.4byte	.LFE49-.LFB49
 5827 0892 01       		.uleb128 0x1
 5828 0893 9C       		.byte	0x9c
 5829 0894 A9080000 		.4byte	0x8a9
 5830 0898 15       		.uleb128 0x15
 5831 0899 30080000 		.4byte	.LASF80
 5832 089d 01       		.byte	0x1
 5833 089e E40B     		.2byte	0xbe4
 5834 08a0 6B000000 		.4byte	0x6b
 5835 08a4 7B080000 		.4byte	.LLST50
 5836 08a8 00       		.byte	0
 5837 08a9 11       		.uleb128 0x11
 5838 08aa 72020000 		.4byte	.LASF85
 5839 08ae 01       		.byte	0x1
 5840 08af F30B     		.2byte	0xbf3
 5841 08b1 00000000 		.4byte	.LFB50
 5842 08b5 04000000 		.4byte	.LFE50-.LFB50
 5843 08b9 01       		.uleb128 0x1
 5844 08ba 9C       		.byte	0x9c
 5845 08bb CE080000 		.4byte	0x8ce
 5846 08bf 16       		.uleb128 0x16
 5847 08c0 6B020000 		.4byte	.LASF74
 5848 08c4 01       		.byte	0x1
 5849 08c5 F30B     		.2byte	0xbf3
 5850 08c7 6B000000 		.4byte	0x6b
 5851 08cb 01       		.uleb128 0x1
 5852 08cc 50       		.byte	0x50
 5853 08cd 00       		.byte	0
 5854 08ce 17       		.uleb128 0x17
 5855 08cf C8090000 		.4byte	.LASF86
 5856 08d3 01       		.byte	0x1
 5857 08d4 FB06     		.2byte	0x6fb
 5858 08d6 83000000 		.4byte	0x83
 5859 08da 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 175


 5860 08de 40000000 		.4byte	.LFE22-.LFB22
 5861 08e2 01       		.uleb128 0x1
 5862 08e3 9C       		.byte	0x9c
 5863 08e4 3E090000 		.4byte	0x93e
 5864 08e8 1B       		.uleb128 0x1b
 5865 08e9 706C6C00 		.ascii	"pll\000"
 5866 08ed 01       		.byte	0x1
 5867 08ee FB06     		.2byte	0x6fb
 5868 08f0 83000000 		.4byte	0x83
 5869 08f4 9C080000 		.4byte	.LLST51
 5870 08f8 0E       		.uleb128 0xe
 5871 08f9 27010000 		.4byte	.LASF39
 5872 08fd 01       		.byte	0x1
 5873 08fe FD06     		.2byte	0x6fd
 5874 0900 6B000000 		.4byte	0x6b
 5875 0904 C8080000 		.4byte	.LLST52
 5876 0908 0E       		.uleb128 0xe
 5877 0909 96000000 		.4byte	.LASF62
 5878 090d 01       		.byte	0x1
 5879 090e FE06     		.2byte	0x6fe
 5880 0910 83000000 		.4byte	0x83
 5881 0914 DB080000 		.4byte	.LLST53
 5882 0918 1E       		.uleb128 0x1e
 5883 0919 0E000000 		.4byte	.LVL156
 5884 091d A9080000 		.4byte	0x8a9
 5885 0921 2B090000 		.4byte	0x92b
 5886 0925 1D       		.uleb128 0x1d
 5887 0926 01       		.uleb128 0x1
 5888 0927 50       		.byte	0x50
 5889 0928 01       		.uleb128 0x1
 5890 0929 30       		.byte	0x30
 5891 092a 00       		.byte	0
 5892 092b 13       		.uleb128 0x13
 5893 092c 12000000 		.4byte	.LVL157
 5894 0930 AC170000 		.4byte	0x17ac
 5895 0934 13       		.uleb128 0x13
 5896 0935 38000000 		.4byte	.LVL162
 5897 0939 B7170000 		.4byte	0x17b7
 5898 093d 00       		.byte	0
 5899 093e 1F       		.uleb128 0x1f
 5900 093f D1050000 		.4byte	.LASF87
 5901 0943 01       		.byte	0x1
 5902 0944 AE07     		.2byte	0x7ae
 5903 0946 83000000 		.4byte	0x83
 5904 094a 00000000 		.4byte	.LFB26
 5905 094e 30000000 		.4byte	.LFE26-.LFB26
 5906 0952 01       		.uleb128 0x1
 5907 0953 9C       		.byte	0x9c
 5908 0954 AE090000 		.4byte	0x9ae
 5909 0958 1B       		.uleb128 0x1b
 5910 0959 706C6C00 		.ascii	"pll\000"
 5911 095d 01       		.byte	0x1
 5912 095e AE07     		.2byte	0x7ae
 5913 0960 83000000 		.4byte	0x83
 5914 0964 04090000 		.4byte	.LLST54
 5915 0968 0E       		.uleb128 0xe
 5916 0969 80060000 		.4byte	.LASF51
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 176


 5917 096d 01       		.byte	0x1
 5918 096e B007     		.2byte	0x7b0
 5919 0970 83000000 		.4byte	0x83
 5920 0974 30090000 		.4byte	.LLST55
 5921 0978 0E       		.uleb128 0xe
 5922 0979 27010000 		.4byte	.LASF39
 5923 097d 01       		.byte	0x1
 5924 097e B107     		.2byte	0x7b1
 5925 0980 6B000000 		.4byte	0x6b
 5926 0984 5F090000 		.4byte	.LLST56
 5927 0988 1E       		.uleb128 0x1e
 5928 0989 0E000000 		.4byte	.LVL166
 5929 098d A9080000 		.4byte	0x8a9
 5930 0991 9B090000 		.4byte	0x99b
 5931 0995 1D       		.uleb128 0x1d
 5932 0996 01       		.uleb128 0x1
 5933 0997 50       		.byte	0x50
 5934 0998 01       		.uleb128 0x1
 5935 0999 30       		.byte	0x30
 5936 099a 00       		.byte	0
 5937 099b 13       		.uleb128 0x13
 5938 099c 12000000 		.4byte	.LVL167
 5939 09a0 AC170000 		.4byte	0x17ac
 5940 09a4 13       		.uleb128 0x13
 5941 09a5 26000000 		.4byte	.LVL172
 5942 09a9 B7170000 		.4byte	0x17b7
 5943 09ad 00       		.byte	0
 5944 09ae 1F       		.uleb128 0x1f
 5945 09af 16060000 		.4byte	.LASF88
 5946 09b3 01       		.byte	0x1
 5947 09b4 D107     		.2byte	0x7d1
 5948 09b6 B0000000 		.4byte	0xb0
 5949 09ba 00000000 		.4byte	.LFB27
 5950 09be 40000000 		.4byte	.LFE27-.LFB27
 5951 09c2 01       		.uleb128 0x1
 5952 09c3 9C       		.byte	0x9c
 5953 09c4 220A0000 		.4byte	0xa22
 5954 09c8 1B       		.uleb128 0x1b
 5955 09c9 706C6C00 		.ascii	"pll\000"
 5956 09cd 01       		.byte	0x1
 5957 09ce D107     		.2byte	0x7d1
 5958 09d0 83000000 		.4byte	0x83
 5959 09d4 72090000 		.4byte	.LLST57
 5960 09d8 0E       		.uleb128 0xe
 5961 09d9 57070000 		.4byte	.LASF89
 5962 09dd 01       		.byte	0x1
 5963 09de D307     		.2byte	0x7d3
 5964 09e0 83000000 		.4byte	0x83
 5965 09e4 9E090000 		.4byte	.LLST58
 5966 09e8 0E       		.uleb128 0xe
 5967 09e9 3C0B0000 		.4byte	.LASF44
 5968 09ed 01       		.byte	0x1
 5969 09ee D407     		.2byte	0x7d4
 5970 09f0 83000000 		.4byte	0x83
 5971 09f4 DD090000 		.4byte	.LLST59
 5972 09f8 0E       		.uleb128 0xe
 5973 09f9 80060000 		.4byte	.LASF51
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 177


 5974 09fd 01       		.byte	0x1
 5975 09fe D507     		.2byte	0x7d5
 5976 0a00 B0000000 		.4byte	0xb0
 5977 0a04 FB090000 		.4byte	.LLST60
 5978 0a08 13       		.uleb128 0x13
 5979 0a09 08000000 		.4byte	.LVL176
 5980 0a0d 5D030000 		.4byte	0x35d
 5981 0a11 1C       		.uleb128 0x1c
 5982 0a12 10000000 		.4byte	.LVL179
 5983 0a16 3E090000 		.4byte	0x93e
 5984 0a1a 1D       		.uleb128 0x1d
 5985 0a1b 01       		.uleb128 0x1
 5986 0a1c 50       		.byte	0x50
 5987 0a1d 02       		.uleb128 0x2
 5988 0a1e 74       		.byte	0x74
 5989 0a1f 00       		.sleb128 0
 5990 0a20 00       		.byte	0
 5991 0a21 00       		.byte	0
 5992 0a22 17       		.uleb128 0x17
 5993 0a23 DA040000 		.4byte	.LASF90
 5994 0a27 01       		.byte	0x1
 5995 0a28 4D07     		.2byte	0x74d
 5996 0a2a B0000000 		.4byte	0xb0
 5997 0a2e 00000000 		.4byte	.LFB24
 5998 0a32 A4000000 		.4byte	.LFE24-.LFB24
 5999 0a36 01       		.uleb128 0x1
 6000 0a37 9C       		.byte	0x9c
 6001 0a38 EC0A0000 		.4byte	0xaec
 6002 0a3c 1B       		.uleb128 0x1b
 6003 0a3d 706C6C00 		.ascii	"pll\000"
 6004 0a41 01       		.byte	0x1
 6005 0a42 4D07     		.2byte	0x74d
 6006 0a44 83000000 		.4byte	0x83
 6007 0a48 1A0A0000 		.4byte	.LLST61
 6008 0a4c 15       		.uleb128 0x15
 6009 0a4d 6D040000 		.4byte	.LASF91
 6010 0a51 01       		.byte	0x1
 6011 0a52 4D07     		.2byte	0x74d
 6012 0a54 83000000 		.4byte	0x83
 6013 0a58 0E0B0000 		.4byte	.LLST62
 6014 0a5c 15       		.uleb128 0x15
 6015 0a5d 99010000 		.4byte	.LASF92
 6016 0a61 01       		.byte	0x1
 6017 0a62 4D07     		.2byte	0x74d
 6018 0a64 83000000 		.4byte	0x83
 6019 0a68 530B0000 		.4byte	.LLST63
 6020 0a6c 15       		.uleb128 0x15
 6021 0a6d 270B0000 		.4byte	.LASF93
 6022 0a71 01       		.byte	0x1
 6023 0a72 4D07     		.2byte	0x74d
 6024 0a74 83000000 		.4byte	0x83
 6025 0a78 A50B0000 		.4byte	.LLST64
 6026 0a7c 0E       		.uleb128 0xe
 6027 0a7d 80020000 		.4byte	.LASF58
 6028 0a81 01       		.byte	0x1
 6029 0a82 4F07     		.2byte	0x74f
 6030 0a84 83000000 		.4byte	0x83
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 178


 6031 0a88 EA0B0000 		.4byte	.LLST65
 6032 0a8c 0F       		.uleb128 0xf
 6033 0a8d 746D7000 		.ascii	"tmp\000"
 6034 0a91 01       		.byte	0x1
 6035 0a92 5007     		.2byte	0x750
 6036 0a94 B0000000 		.4byte	0xb0
 6037 0a98 130C0000 		.4byte	.LLST66
 6038 0a9c 0E       		.uleb128 0xe
 6039 0a9d 27010000 		.4byte	.LASF39
 6040 0aa1 01       		.byte	0x1
 6041 0aa2 5107     		.2byte	0x751
 6042 0aa4 6B000000 		.4byte	0x6b
 6043 0aa8 310C0000 		.4byte	.LLST67
 6044 0aac 0E       		.uleb128 0xe
 6045 0aad 96000000 		.4byte	.LASF62
 6046 0ab1 01       		.byte	0x1
 6047 0ab2 5207     		.2byte	0x752
 6048 0ab4 B0000000 		.4byte	0xb0
 6049 0ab8 510C0000 		.4byte	.LLST68
 6050 0abc 13       		.uleb128 0x13
 6051 0abd 10000000 		.4byte	.LVL193
 6052 0ac1 AC170000 		.4byte	0x17ac
 6053 0ac5 1E       		.uleb128 0x1e
 6054 0ac6 18000000 		.4byte	.LVL195
 6055 0aca AE090000 		.4byte	0x9ae
 6056 0ace D90A0000 		.4byte	0xad9
 6057 0ad2 1D       		.uleb128 0x1d
 6058 0ad3 01       		.uleb128 0x1
 6059 0ad4 50       		.byte	0x50
 6060 0ad5 02       		.uleb128 0x2
 6061 0ad6 74       		.byte	0x74
 6062 0ad7 00       		.sleb128 0
 6063 0ad8 00       		.byte	0
 6064 0ad9 1C       		.uleb128 0x1c
 6065 0ada 94000000 		.4byte	.LVL223
 6066 0ade B7170000 		.4byte	0x17b7
 6067 0ae2 1D       		.uleb128 0x1d
 6068 0ae3 01       		.uleb128 0x1
 6069 0ae4 50       		.byte	0x50
 6070 0ae5 04       		.uleb128 0x4
 6071 0ae6 91       		.byte	0x91
 6072 0ae7 64       		.sleb128 -28
 6073 0ae8 94       		.byte	0x94
 6074 0ae9 01       		.byte	0x1
 6075 0aea 00       		.byte	0
 6076 0aeb 00       		.byte	0
 6077 0aec 17       		.uleb128 0x17
 6078 0aed 400A0000 		.4byte	.LASF94
 6079 0af1 01       		.byte	0x1
 6080 0af2 D608     		.2byte	0x8d6
 6081 0af4 B0000000 		.4byte	0xb0
 6082 0af8 00000000 		.4byte	.LFB31
 6083 0afc 58000000 		.4byte	.LFE31-.LFB31
 6084 0b00 01       		.uleb128 0x1
 6085 0b01 9C       		.byte	0x9c
 6086 0b02 940B0000 		.4byte	0xb94
 6087 0b06 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 179


 6088 0b07 706C6C00 		.ascii	"pll\000"
 6089 0b0b 01       		.byte	0x1
 6090 0b0c D608     		.2byte	0x8d6
 6091 0b0e 83000000 		.4byte	0x83
 6092 0b12 930C0000 		.4byte	.LLST69
 6093 0b16 15       		.uleb128 0x15
 6094 0b17 46070000 		.4byte	.LASF46
 6095 0b1b 01       		.byte	0x1
 6096 0b1c D608     		.2byte	0x8d6
 6097 0b1e 83000000 		.4byte	0x83
 6098 0b22 0A0D0000 		.4byte	.LLST70
 6099 0b26 0E       		.uleb128 0xe
 6100 0b27 D1060000 		.4byte	.LASF40
 6101 0b2b 01       		.byte	0x1
 6102 0b2c D808     		.2byte	0x8d8
 6103 0b2e 83000000 		.4byte	0x83
 6104 0b32 4F0D0000 		.4byte	.LLST71
 6105 0b36 0E       		.uleb128 0xe
 6106 0b37 27010000 		.4byte	.LASF39
 6107 0b3b 01       		.byte	0x1
 6108 0b3c D908     		.2byte	0x8d9
 6109 0b3e 6B000000 		.4byte	0x6b
 6110 0b42 6D0D0000 		.4byte	.LLST72
 6111 0b46 0E       		.uleb128 0xe
 6112 0b47 96000000 		.4byte	.LASF62
 6113 0b4b 01       		.byte	0x1
 6114 0b4c DA08     		.2byte	0x8da
 6115 0b4e B0000000 		.4byte	0xb0
 6116 0b52 800D0000 		.4byte	.LLST73
 6117 0b56 0F       		.uleb128 0xf
 6118 0b57 746D7000 		.ascii	"tmp\000"
 6119 0b5b 01       		.byte	0x1
 6120 0b5c DB08     		.2byte	0x8db
 6121 0b5e B0000000 		.4byte	0xb0
 6122 0b62 C20D0000 		.4byte	.LLST74
 6123 0b66 13       		.uleb128 0x13
 6124 0b67 0A000000 		.4byte	.LVL227
 6125 0b6b AC170000 		.4byte	0x17ac
 6126 0b6f 1E       		.uleb128 0x1e
 6127 0b70 12000000 		.4byte	.LVL229
 6128 0b74 AE090000 		.4byte	0x9ae
 6129 0b78 830B0000 		.4byte	0xb83
 6130 0b7c 1D       		.uleb128 0x1d
 6131 0b7d 01       		.uleb128 0x1
 6132 0b7e 50       		.byte	0x50
 6133 0b7f 02       		.uleb128 0x2
 6134 0b80 74       		.byte	0x74
 6135 0b81 00       		.sleb128 0
 6136 0b82 00       		.byte	0
 6137 0b83 1C       		.uleb128 0x1c
 6138 0b84 4C000000 		.4byte	.LVL242
 6139 0b88 B7170000 		.4byte	0x17b7
 6140 0b8c 1D       		.uleb128 0x1d
 6141 0b8d 01       		.uleb128 0x1
 6142 0b8e 50       		.byte	0x50
 6143 0b8f 02       		.uleb128 0x2
 6144 0b90 76       		.byte	0x76
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 180


 6145 0b91 00       		.sleb128 0
 6146 0b92 00       		.byte	0
 6147 0b93 00       		.byte	0
 6148 0b94 1A       		.uleb128 0x1a
 6149 0b95 32020000 		.4byte	.LASF95
 6150 0b99 01       		.byte	0x1
 6151 0b9a 2E08     		.2byte	0x82e
 6152 0b9c B0000000 		.4byte	0xb0
 6153 0ba0 00000000 		.4byte	.LFB29
 6154 0ba4 10010000 		.4byte	.LFE29-.LFB29
 6155 0ba8 01       		.uleb128 0x1
 6156 0ba9 9C       		.byte	0x9c
 6157 0baa EA0C0000 		.4byte	0xcea
 6158 0bae 1B       		.uleb128 0x1b
 6159 0baf 706C6C00 		.ascii	"pll\000"
 6160 0bb3 01       		.byte	0x1
 6161 0bb4 2E08     		.2byte	0x82e
 6162 0bb6 83000000 		.4byte	0x83
 6163 0bba E00D0000 		.4byte	.LLST75
 6164 0bbe 15       		.uleb128 0x15
 6165 0bbf 62030000 		.4byte	.LASF96
 6166 0bc3 01       		.byte	0x1
 6167 0bc4 2E08     		.2byte	0x82e
 6168 0bc6 83000000 		.4byte	0x83
 6169 0bca 0C0E0000 		.4byte	.LLST76
 6170 0bce 15       		.uleb128 0x15
 6171 0bcf 00000000 		.4byte	.LASF97
 6172 0bd3 01       		.byte	0x1
 6173 0bd4 2E08     		.2byte	0x82e
 6174 0bd6 83000000 		.4byte	0x83
 6175 0bda 380E0000 		.4byte	.LLST77
 6176 0bde 15       		.uleb128 0x15
 6177 0bdf 46070000 		.4byte	.LASF46
 6178 0be3 01       		.byte	0x1
 6179 0be4 2E08     		.2byte	0x82e
 6180 0be6 83000000 		.4byte	0x83
 6181 0bea 640E0000 		.4byte	.LLST78
 6182 0bee 16       		.uleb128 0x16
 6183 0bef 0A010000 		.4byte	.LASF98
 6184 0bf3 01       		.byte	0x1
 6185 0bf4 2E08     		.2byte	0x82e
 6186 0bf6 83000000 		.4byte	0x83
 6187 0bfa 02       		.uleb128 0x2
 6188 0bfb 91       		.byte	0x91
 6189 0bfc 00       		.sleb128 0
 6190 0bfd 0E       		.uleb128 0xe
 6191 0bfe A5020000 		.4byte	.LASF99
 6192 0c02 01       		.byte	0x1
 6193 0c03 3008     		.2byte	0x830
 6194 0c05 83000000 		.4byte	0x83
 6195 0c09 830E0000 		.4byte	.LLST79
 6196 0c0d 0E       		.uleb128 0xe
 6197 0c0e BE080000 		.4byte	.LASF100
 6198 0c12 01       		.byte	0x1
 6199 0c13 3108     		.2byte	0x831
 6200 0c15 83000000 		.4byte	0x83
 6201 0c19 A10E0000 		.4byte	.LLST80
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 181


 6202 0c1d 0E       		.uleb128 0xe
 6203 0c1e 99030000 		.4byte	.LASF101
 6204 0c22 01       		.byte	0x1
 6205 0c23 3308     		.2byte	0x833
 6206 0c25 83000000 		.4byte	0x83
 6207 0c29 CA0E0000 		.4byte	.LLST81
 6208 0c2d 0E       		.uleb128 0xe
 6209 0c2e 3F080000 		.4byte	.LASF102
 6210 0c32 01       		.byte	0x1
 6211 0c33 3408     		.2byte	0x834
 6212 0c35 83000000 		.4byte	0x83
 6213 0c39 000F0000 		.4byte	.LLST82
 6214 0c3d 0F       		.uleb128 0xf
 6215 0c3e 7100     		.ascii	"q\000"
 6216 0c40 01       		.byte	0x1
 6217 0c41 3608     		.2byte	0x836
 6218 0c43 83000000 		.4byte	0x83
 6219 0c47 410F0000 		.4byte	.LLST83
 6220 0c4b 0F       		.uleb128 0xf
 6221 0c4c 7000     		.ascii	"p\000"
 6222 0c4e 01       		.byte	0x1
 6223 0c4f 3708     		.2byte	0x837
 6224 0c51 83000000 		.4byte	0x83
 6225 0c55 540F0000 		.4byte	.LLST84
 6226 0c59 0E       		.uleb128 0xe
 6227 0c5a CE070000 		.4byte	.LASF103
 6228 0c5e 01       		.byte	0x1
 6229 0c5f 3908     		.2byte	0x839
 6230 0c61 83000000 		.4byte	0x83
 6231 0c65 720F0000 		.4byte	.LLST85
 6232 0c69 0E       		.uleb128 0xe
 6233 0c6a C8000000 		.4byte	.LASF104
 6234 0c6e 01       		.byte	0x1
 6235 0c6f 3A08     		.2byte	0x83a
 6236 0c71 8F000000 		.4byte	0x8f
 6237 0c75 850F0000 		.4byte	.LLST86
 6238 0c79 0F       		.uleb128 0xf
 6239 0c7a 746D7000 		.ascii	"tmp\000"
 6240 0c7e 01       		.byte	0x1
 6241 0c7f 3C08     		.2byte	0x83c
 6242 0c81 B0000000 		.4byte	0xb0
 6243 0c85 980F0000 		.4byte	.LLST87
 6244 0c89 0E       		.uleb128 0xe
 6245 0c8a 96000000 		.4byte	.LASF62
 6246 0c8e 01       		.byte	0x1
 6247 0c8f 3D08     		.2byte	0x83d
 6248 0c91 B0000000 		.4byte	0xb0
 6249 0c95 F80F0000 		.4byte	.LLST88
 6250 0c99 1E       		.uleb128 0x1e
 6251 0c9a 16000000 		.4byte	.LVL247
 6252 0c9e AE090000 		.4byte	0x9ae
 6253 0ca2 AD0C0000 		.4byte	0xcad
 6254 0ca6 1D       		.uleb128 0x1d
 6255 0ca7 01       		.uleb128 0x1
 6256 0ca8 50       		.byte	0x50
 6257 0ca9 02       		.uleb128 0x2
 6258 0caa 74       		.byte	0x74
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 182


 6259 0cab 00       		.sleb128 0
 6260 0cac 00       		.byte	0
 6261 0cad 1E       		.uleb128 0x1e
 6262 0cae BE000000 		.4byte	.LVL263
 6263 0cb2 220A0000 		.4byte	0xa22
 6264 0cb6 D20C0000 		.4byte	0xcd2
 6265 0cba 1D       		.uleb128 0x1d
 6266 0cbb 01       		.uleb128 0x1
 6267 0cbc 50       		.byte	0x50
 6268 0cbd 02       		.uleb128 0x2
 6269 0cbe 74       		.byte	0x74
 6270 0cbf 00       		.sleb128 0
 6271 0cc0 1D       		.uleb128 0x1d
 6272 0cc1 01       		.uleb128 0x1
 6273 0cc2 51       		.byte	0x51
 6274 0cc3 02       		.uleb128 0x2
 6275 0cc4 79       		.byte	0x79
 6276 0cc5 00       		.sleb128 0
 6277 0cc6 1D       		.uleb128 0x1d
 6278 0cc7 01       		.uleb128 0x1
 6279 0cc8 52       		.byte	0x52
 6280 0cc9 02       		.uleb128 0x2
 6281 0cca 77       		.byte	0x77
 6282 0ccb 00       		.sleb128 0
 6283 0ccc 1D       		.uleb128 0x1d
 6284 0ccd 01       		.uleb128 0x1
 6285 0cce 53       		.byte	0x53
 6286 0ccf 01       		.uleb128 0x1
 6287 0cd0 32       		.byte	0x32
 6288 0cd1 00       		.byte	0
 6289 0cd2 1C       		.uleb128 0x1c
 6290 0cd3 CA000000 		.4byte	.LVL264
 6291 0cd7 EC0A0000 		.4byte	0xaec
 6292 0cdb 1D       		.uleb128 0x1d
 6293 0cdc 01       		.uleb128 0x1
 6294 0cdd 50       		.byte	0x50
 6295 0cde 02       		.uleb128 0x2
 6296 0cdf 74       		.byte	0x74
 6297 0ce0 00       		.sleb128 0
 6298 0ce1 1D       		.uleb128 0x1d
 6299 0ce2 01       		.uleb128 0x1
 6300 0ce3 51       		.byte	0x51
 6301 0ce4 03       		.uleb128 0x3
 6302 0ce5 91       		.byte	0x91
 6303 0ce6 5C       		.sleb128 -36
 6304 0ce7 06       		.byte	0x6
 6305 0ce8 00       		.byte	0
 6306 0ce9 00       		.byte	0
 6307 0cea 17       		.uleb128 0x17
 6308 0ceb 7F070000 		.4byte	.LASF105
 6309 0cef 01       		.byte	0x1
 6310 0cf0 070B     		.2byte	0xb07
 6311 0cf2 DE000000 		.4byte	0xde
 6312 0cf6 00000000 		.4byte	.LFB39
 6313 0cfa 20000000 		.4byte	.LFE39-.LFB39
 6314 0cfe 01       		.uleb128 0x1
 6315 0cff 9C       		.byte	0x9c
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 183


 6316 0d00 520D0000 		.4byte	0xd52
 6317 0d04 15       		.uleb128 0x15
 6318 0d05 30080000 		.4byte	.LASF80
 6319 0d09 01       		.byte	0x1
 6320 0d0a 070B     		.2byte	0xb07
 6321 0d0c 6B000000 		.4byte	0x6b
 6322 0d10 2E100000 		.4byte	.LLST89
 6323 0d14 15       		.uleb128 0x15
 6324 0d15 4F050000 		.4byte	.LASF106
 6325 0d19 01       		.byte	0x1
 6326 0d1a 070B     		.2byte	0xb07
 6327 0d1c DE000000 		.4byte	0xde
 6328 0d20 4F100000 		.4byte	.LLST90
 6329 0d24 19       		.uleb128 0x19
 6330 0d25 81030000 		.4byte	.LASF107
 6331 0d29 01       		.byte	0x1
 6332 0d2a 090B     		.2byte	0xb09
 6333 0d2c DE000000 		.4byte	0xde
 6334 0d30 01       		.uleb128 0x1
 6335 0d31 50       		.byte	0x50
 6336 0d32 20       		.uleb128 0x20
 6337 0d33 9D090000 		.4byte	.LASF108
 6338 0d37 01       		.byte	0x1
 6339 0d38 0A0B     		.2byte	0xb0a
 6340 0d3a 520D0000 		.4byte	0xd52
 6341 0d3e 00000020 		.4byte	0x20000000
 6342 0d42 1C       		.uleb128 0x1c
 6343 0d43 10000000 		.4byte	.LVL288
 6344 0d47 A9080000 		.4byte	0x8a9
 6345 0d4b 1D       		.uleb128 0x1d
 6346 0d4c 01       		.uleb128 0x1
 6347 0d4d 50       		.byte	0x50
 6348 0d4e 01       		.uleb128 0x1
 6349 0d4f 30       		.byte	0x30
 6350 0d50 00       		.byte	0
 6351 0d51 00       		.byte	0
 6352 0d52 06       		.uleb128 0x6
 6353 0d53 04       		.byte	0x4
 6354 0d54 DE000000 		.4byte	0xde
 6355 0d58 17       		.uleb128 0x17
 6356 0d59 9A050000 		.4byte	.LASF109
 6357 0d5d 01       		.byte	0x1
 6358 0d5e 290B     		.2byte	0xb29
 6359 0d60 DE000000 		.4byte	0xde
 6360 0d64 00000000 		.4byte	.LFB40
 6361 0d68 1C000000 		.4byte	.LFE40-.LFB40
 6362 0d6c 01       		.uleb128 0x1
 6363 0d6d 9C       		.byte	0x9c
 6364 0d6e A20D0000 		.4byte	0xda2
 6365 0d72 15       		.uleb128 0x15
 6366 0d73 30080000 		.4byte	.LASF80
 6367 0d77 01       		.byte	0x1
 6368 0d78 290B     		.2byte	0xb29
 6369 0d7a 6B000000 		.4byte	0x6b
 6370 0d7e 7B100000 		.4byte	.LLST91
 6371 0d82 20       		.uleb128 0x20
 6372 0d83 9D090000 		.4byte	.LASF108
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 184


 6373 0d87 01       		.byte	0x1
 6374 0d88 2B0B     		.2byte	0xb2b
 6375 0d8a 520D0000 		.4byte	0xd52
 6376 0d8e 00000020 		.4byte	0x20000000
 6377 0d92 1C       		.uleb128 0x1c
 6378 0d93 0E000000 		.4byte	.LVL294
 6379 0d97 A9080000 		.4byte	0x8a9
 6380 0d9b 1D       		.uleb128 0x1d
 6381 0d9c 01       		.uleb128 0x1
 6382 0d9d 50       		.byte	0x50
 6383 0d9e 01       		.uleb128 0x1
 6384 0d9f 30       		.byte	0x30
 6385 0da0 00       		.byte	0
 6386 0da1 00       		.byte	0
 6387 0da2 17       		.uleb128 0x17
 6388 0da3 76040000 		.4byte	.LASF110
 6389 0da7 01       		.byte	0x1
 6390 0da8 3F0B     		.2byte	0xb3f
 6391 0daa DE000000 		.4byte	0xde
 6392 0dae 00000000 		.4byte	.LFB41
 6393 0db2 22000000 		.4byte	.LFE41-.LFB41
 6394 0db6 01       		.uleb128 0x1
 6395 0db7 9C       		.byte	0x9c
 6396 0db8 0A0E0000 		.4byte	0xe0a
 6397 0dbc 15       		.uleb128 0x15
 6398 0dbd 30080000 		.4byte	.LASF80
 6399 0dc1 01       		.byte	0x1
 6400 0dc2 3F0B     		.2byte	0xb3f
 6401 0dc4 6B000000 		.4byte	0x6b
 6402 0dc8 9C100000 		.4byte	.LLST92
 6403 0dcc 15       		.uleb128 0x15
 6404 0dcd 4F050000 		.4byte	.LASF106
 6405 0dd1 01       		.byte	0x1
 6406 0dd2 3F0B     		.2byte	0xb3f
 6407 0dd4 DE000000 		.4byte	0xde
 6408 0dd8 BD100000 		.4byte	.LLST93
 6409 0ddc 19       		.uleb128 0x19
 6410 0ddd 81030000 		.4byte	.LASF107
 6411 0de1 01       		.byte	0x1
 6412 0de2 410B     		.2byte	0xb41
 6413 0de4 DE000000 		.4byte	0xde
 6414 0de8 01       		.uleb128 0x1
 6415 0de9 50       		.byte	0x50
 6416 0dea 20       		.uleb128 0x20
 6417 0deb 9D090000 		.4byte	.LASF108
 6418 0def 01       		.byte	0x1
 6419 0df0 420B     		.2byte	0xb42
 6420 0df2 520D0000 		.4byte	0xd52
 6421 0df6 00000020 		.4byte	0x20000000
 6422 0dfa 1C       		.uleb128 0x1c
 6423 0dfb 10000000 		.4byte	.LVL298
 6424 0dff A9080000 		.4byte	0x8a9
 6425 0e03 1D       		.uleb128 0x1d
 6426 0e04 01       		.uleb128 0x1
 6427 0e05 50       		.byte	0x50
 6428 0e06 01       		.uleb128 0x1
 6429 0e07 30       		.byte	0x30
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 185


 6430 0e08 00       		.byte	0
 6431 0e09 00       		.byte	0
 6432 0e0a 17       		.uleb128 0x17
 6433 0e0b 08000000 		.4byte	.LASF111
 6434 0e0f 01       		.byte	0x1
 6435 0e10 5B0B     		.2byte	0xb5b
 6436 0e12 DE000000 		.4byte	0xde
 6437 0e16 00000000 		.4byte	.LFB42
 6438 0e1a 1E000000 		.4byte	.LFE42-.LFB42
 6439 0e1e 01       		.uleb128 0x1
 6440 0e1f 9C       		.byte	0x9c
 6441 0e20 540E0000 		.4byte	0xe54
 6442 0e24 15       		.uleb128 0x15
 6443 0e25 30080000 		.4byte	.LASF80
 6444 0e29 01       		.byte	0x1
 6445 0e2a 5B0B     		.2byte	0xb5b
 6446 0e2c 6B000000 		.4byte	0x6b
 6447 0e30 E9100000 		.4byte	.LLST94
 6448 0e34 20       		.uleb128 0x20
 6449 0e35 9D090000 		.4byte	.LASF108
 6450 0e39 01       		.byte	0x1
 6451 0e3a 5D0B     		.2byte	0xb5d
 6452 0e3c 520D0000 		.4byte	0xd52
 6453 0e40 00000020 		.4byte	0x20000000
 6454 0e44 1C       		.uleb128 0x1c
 6455 0e45 0E000000 		.4byte	.LVL304
 6456 0e49 A9080000 		.4byte	0x8a9
 6457 0e4d 1D       		.uleb128 0x1d
 6458 0e4e 01       		.uleb128 0x1
 6459 0e4f 50       		.byte	0x50
 6460 0e50 01       		.uleb128 0x1
 6461 0e51 30       		.byte	0x30
 6462 0e52 00       		.byte	0
 6463 0e53 00       		.byte	0
 6464 0e54 11       		.uleb128 0x11
 6465 0e55 2E000000 		.4byte	.LASF112
 6466 0e59 01       		.byte	0x1
 6467 0e5a 6E0B     		.2byte	0xb6e
 6468 0e5c 00000000 		.4byte	.LFB43
 6469 0e60 4C000000 		.4byte	.LFE43-.LFB43
 6470 0e64 01       		.uleb128 0x1
 6471 0e65 9C       		.byte	0x9c
 6472 0e66 F30E0000 		.4byte	0xef3
 6473 0e6a 15       		.uleb128 0x15
 6474 0e6b 30080000 		.4byte	.LASF80
 6475 0e6f 01       		.byte	0x1
 6476 0e70 6E0B     		.2byte	0xb6e
 6477 0e72 6B000000 		.4byte	0x6b
 6478 0e76 0A110000 		.4byte	.LLST95
 6479 0e7a 15       		.uleb128 0x15
 6480 0e7b B2070000 		.4byte	.LASF113
 6481 0e7f 01       		.byte	0x1
 6482 0e80 6E0B     		.2byte	0xb6e
 6483 0e82 6B000000 		.4byte	0x6b
 6484 0e86 2B110000 		.4byte	.LLST96
 6485 0e8a 0E       		.uleb128 0xe
 6486 0e8b 27010000 		.4byte	.LASF39
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 186


 6487 0e8f 01       		.byte	0x1
 6488 0e90 700B     		.2byte	0xb70
 6489 0e92 6B000000 		.4byte	0x6b
 6490 0e96 4C110000 		.4byte	.LLST97
 6491 0e9a 0E       		.uleb128 0xe
 6492 0e9b 13020000 		.4byte	.LASF114
 6493 0e9f 01       		.byte	0x1
 6494 0ea0 710B     		.2byte	0xb71
 6495 0ea2 83000000 		.4byte	0x83
 6496 0ea6 5F110000 		.4byte	.LLST98
 6497 0eaa 0E       		.uleb128 0xe
 6498 0eab 87020000 		.4byte	.LASF115
 6499 0eaf 01       		.byte	0x1
 6500 0eb0 720B     		.2byte	0xb72
 6501 0eb2 83000000 		.4byte	0x83
 6502 0eb6 72110000 		.4byte	.LLST99
 6503 0eba 1E       		.uleb128 0x1e
 6504 0ebb 10000000 		.4byte	.LVL307
 6505 0ebf A9080000 		.4byte	0x8a9
 6506 0ec3 CD0E0000 		.4byte	0xecd
 6507 0ec7 1D       		.uleb128 0x1d
 6508 0ec8 01       		.uleb128 0x1
 6509 0ec9 50       		.byte	0x50
 6510 0eca 01       		.uleb128 0x1
 6511 0ecb 30       		.byte	0x30
 6512 0ecc 00       		.byte	0
 6513 0ecd 1E       		.uleb128 0x1e
 6514 0ece 1A000000 		.4byte	.LVL308
 6515 0ed2 A9080000 		.4byte	0x8a9
 6516 0ed6 E00E0000 		.4byte	0xee0
 6517 0eda 1D       		.uleb128 0x1d
 6518 0edb 01       		.uleb128 0x1
 6519 0edc 50       		.byte	0x50
 6520 0edd 01       		.uleb128 0x1
 6521 0ede 30       		.byte	0x30
 6522 0edf 00       		.byte	0
 6523 0ee0 13       		.uleb128 0x13
 6524 0ee1 26000000 		.4byte	.LVL310
 6525 0ee5 AC170000 		.4byte	0x17ac
 6526 0ee9 13       		.uleb128 0x13
 6527 0eea 46000000 		.4byte	.LVL316
 6528 0eee B7170000 		.4byte	0x17b7
 6529 0ef2 00       		.byte	0
 6530 0ef3 17       		.uleb128 0x17
 6531 0ef4 5A000000 		.4byte	.LASF116
 6532 0ef8 01       		.byte	0x1
 6533 0ef9 900B     		.2byte	0xb90
 6534 0efb 6B000000 		.4byte	0x6b
 6535 0eff 00000000 		.4byte	.LFB44
 6536 0f03 2C000000 		.4byte	.LFE44-.LFB44
 6537 0f07 01       		.uleb128 0x1
 6538 0f08 9C       		.byte	0x9c
 6539 0f09 3D0F0000 		.4byte	0xf3d
 6540 0f0d 15       		.uleb128 0x15
 6541 0f0e 30080000 		.4byte	.LASF80
 6542 0f12 01       		.byte	0x1
 6543 0f13 900B     		.2byte	0xb90
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 187


 6544 0f15 6B000000 		.4byte	0x6b
 6545 0f19 A6110000 		.4byte	.LLST100
 6546 0f1d 0E       		.uleb128 0xe
 6547 0f1e B2070000 		.4byte	.LASF113
 6548 0f22 01       		.byte	0x1
 6549 0f23 920B     		.2byte	0xb92
 6550 0f25 6B000000 		.4byte	0x6b
 6551 0f29 C7110000 		.4byte	.LLST101
 6552 0f2d 1C       		.uleb128 0x1c
 6553 0f2e 0E000000 		.4byte	.LVL320
 6554 0f32 A9080000 		.4byte	0x8a9
 6555 0f36 1D       		.uleb128 0x1d
 6556 0f37 01       		.uleb128 0x1
 6557 0f38 50       		.byte	0x50
 6558 0f39 01       		.uleb128 0x1
 6559 0f3a 30       		.byte	0x30
 6560 0f3b 00       		.byte	0
 6561 0f3c 00       		.byte	0
 6562 0f3d 18       		.uleb128 0x18
 6563 0f3e 4C090000 		.4byte	.LASF117
 6564 0f42 01       		.byte	0x1
 6565 0f43 0B0C     		.2byte	0xc0b
 6566 0f45 00000000 		.4byte	.LFB51
 6567 0f49 18000000 		.4byte	.LFE51-.LFB51
 6568 0f4d 01       		.uleb128 0x1
 6569 0f4e 9C       		.byte	0x9c
 6570 0f4f 11       		.uleb128 0x11
 6571 0f50 26000000 		.4byte	.LASF118
 6572 0f54 01       		.byte	0x1
 6573 0f55 1F0C     		.2byte	0xc1f
 6574 0f57 00000000 		.4byte	.LFB52
 6575 0f5b 30000000 		.4byte	.LFE52-.LFB52
 6576 0f5f 01       		.uleb128 0x1
 6577 0f60 9C       		.byte	0x9c
 6578 0f61 880F0000 		.4byte	0xf88
 6579 0f65 15       		.uleb128 0x15
 6580 0f66 89000000 		.4byte	.LASF119
 6581 0f6a 01       		.byte	0x1
 6582 0f6b 1F0C     		.2byte	0xc1f
 6583 0f6d 83000000 		.4byte	0x83
 6584 0f71 DA110000 		.4byte	.LLST102
 6585 0f75 13       		.uleb128 0x13
 6586 0f76 0E000000 		.4byte	.LVL325
 6587 0f7a C2170000 		.4byte	0x17c2
 6588 0f7e 13       		.uleb128 0x13
 6589 0f7f 26000000 		.4byte	.LVL327
 6590 0f83 C2170000 		.4byte	0x17c2
 6591 0f87 00       		.byte	0
 6592 0f88 14       		.uleb128 0x14
 6593 0f89 36050000 		.4byte	.LASF120
 6594 0f8d 01       		.byte	0x1
 6595 0f8e AE       		.byte	0xae
 6596 0f8f 00000000 		.4byte	.LFB3
 6597 0f93 04010000 		.4byte	.LFE3-.LFB3
 6598 0f97 01       		.uleb128 0x1
 6599 0f98 9C       		.byte	0x9c
 6600 0f99 51100000 		.4byte	0x1051
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 188


 6601 0f9d 21       		.uleb128 0x21
 6602 0f9e 6900     		.ascii	"i\000"
 6603 0fa0 01       		.byte	0x1
 6604 0fa1 B1       		.byte	0xb1
 6605 0fa2 83000000 		.4byte	0x83
 6606 0fa6 F8110000 		.4byte	.LLST103
 6607 0faa 22       		.uleb128 0x22
 6608 0fab D0030000 		.4byte	.LASF31
 6609 0faf 01       		.byte	0x1
 6610 0fb0 B4       		.byte	0xb4
 6611 0fb1 83000000 		.4byte	0x83
 6612 0fb5 2F120000 		.4byte	.LLST104
 6613 0fb9 22       		.uleb128 0x22
 6614 0fba 27010000 		.4byte	.LASF39
 6615 0fbe 01       		.byte	0x1
 6616 0fbf B5       		.byte	0xb5
 6617 0fc0 6B000000 		.4byte	0x6b
 6618 0fc4 65120000 		.4byte	.LLST105
 6619 0fc8 22       		.uleb128 0x22
 6620 0fc9 80020000 		.4byte	.LASF58
 6621 0fcd 01       		.byte	0x1
 6622 0fce B6       		.byte	0xb6
 6623 0fcf 83000000 		.4byte	0x83
 6624 0fd3 78120000 		.4byte	.LLST106
 6625 0fd7 22       		.uleb128 0x22
 6626 0fd8 37080000 		.4byte	.LASF121
 6627 0fdc 01       		.byte	0x1
 6628 0fdd B7       		.byte	0xb7
 6629 0fde 83000000 		.4byte	0x83
 6630 0fe2 AD120000 		.4byte	.LLST107
 6631 0fe6 23       		.uleb128 0x23
 6632 0fe7 31040000 		.4byte	.LASF122
 6633 0feb 01       		.byte	0x1
 6634 0fec B8       		.byte	0xb8
 6635 0fed D9000000 		.4byte	0xd9
 6636 0ff1 02       		.uleb128 0x2
 6637 0ff2 91       		.byte	0x91
 6638 0ff3 6C       		.sleb128 -20
 6639 0ff4 13       		.uleb128 0x13
 6640 0ff5 08000000 		.4byte	.LVL330
 6641 0ff9 CD170000 		.4byte	0x17cd
 6642 0ffd 13       		.uleb128 0x13
 6643 0ffe 10000000 		.4byte	.LVL331
 6644 1002 AC170000 		.4byte	0x17ac
 6645 1006 1E       		.uleb128 0x1e
 6646 1007 8C000000 		.4byte	.LVL345
 6647 100b D8170000 		.4byte	0x17d8
 6648 100f 1A100000 		.4byte	0x101a
 6649 1013 1D       		.uleb128 0x1d
 6650 1014 01       		.uleb128 0x1
 6651 1015 50       		.byte	0x50
 6652 1016 02       		.uleb128 0x2
 6653 1017 08       		.byte	0x8
 6654 1018 30       		.byte	0x30
 6655 1019 00       		.byte	0
 6656 101a 1E       		.uleb128 0x1e
 6657 101b A8000000 		.4byte	.LVL348
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 189


 6658 101f 4F0F0000 		.4byte	0xf4f
 6659 1023 2D100000 		.4byte	0x102d
 6660 1027 1D       		.uleb128 0x1d
 6661 1028 01       		.uleb128 0x1
 6662 1029 50       		.byte	0x50
 6663 102a 01       		.uleb128 0x1
 6664 102b 31       		.byte	0x31
 6665 102c 00       		.byte	0
 6666 102d 1E       		.uleb128 0x1e
 6667 102e BC000000 		.4byte	.LVL351
 6668 1032 4F0F0000 		.4byte	0xf4f
 6669 1036 40100000 		.4byte	0x1040
 6670 103a 1D       		.uleb128 0x1d
 6671 103b 01       		.uleb128 0x1
 6672 103c 50       		.byte	0x50
 6673 103d 01       		.uleb128 0x1
 6674 103e 31       		.byte	0x31
 6675 103f 00       		.byte	0
 6676 1040 1C       		.uleb128 0x1c
 6677 1041 D2000000 		.4byte	.LVL353
 6678 1045 B7170000 		.4byte	0x17b7
 6679 1049 1D       		.uleb128 0x1d
 6680 104a 01       		.uleb128 0x1
 6681 104b 50       		.byte	0x50
 6682 104c 02       		.uleb128 0x2
 6683 104d 75       		.byte	0x75
 6684 104e 00       		.sleb128 0
 6685 104f 00       		.byte	0
 6686 1050 00       		.byte	0
 6687 1051 11       		.uleb128 0x11
 6688 1052 4A020000 		.4byte	.LASF123
 6689 1056 01       		.byte	0x1
 6690 1057 360C     		.2byte	0xc36
 6691 1059 00000000 		.4byte	.LFB53
 6692 105d 14000000 		.4byte	.LFE53-.LFB53
 6693 1061 01       		.uleb128 0x1
 6694 1062 9C       		.byte	0x9c
 6695 1063 81100000 		.4byte	0x1081
 6696 1067 15       		.uleb128 0x15
 6697 1068 E1090000 		.4byte	.LASF124
 6698 106c 01       		.byte	0x1
 6699 106d 360C     		.2byte	0xc36
 6700 106f 77000000 		.4byte	0x77
 6701 1073 CC120000 		.4byte	.LLST108
 6702 1077 13       		.uleb128 0x13
 6703 1078 0C000000 		.4byte	.LVL356
 6704 107c C2170000 		.4byte	0x17c2
 6705 1080 00       		.byte	0
 6706 1081 11       		.uleb128 0x11
 6707 1082 980A0000 		.4byte	.LASF125
 6708 1086 01       		.byte	0x1
 6709 1087 3103     		.2byte	0x331
 6710 1089 00000000 		.4byte	.LFB15
 6711 108d BC010000 		.4byte	.LFE15-.LFB15
 6712 1091 01       		.uleb128 0x1
 6713 1092 9C       		.byte	0x9c
 6714 1093 C8110000 		.4byte	0x11c8
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 190


 6715 1097 15       		.uleb128 0x15
 6716 1098 D0030000 		.4byte	.LASF31
 6717 109c 01       		.byte	0x1
 6718 109d 3103     		.2byte	0x331
 6719 109f 83000000 		.4byte	0x83
 6720 10a3 ED120000 		.4byte	.LLST109
 6721 10a7 0E       		.uleb128 0xe
 6722 10a8 380A0000 		.4byte	.LASF126
 6723 10ac 01       		.byte	0x1
 6724 10ad 3703     		.2byte	0x337
 6725 10af 6B000000 		.4byte	0x6b
 6726 10b3 3E130000 		.4byte	.LLST110
 6727 10b7 0E       		.uleb128 0xe
 6728 10b8 C8030000 		.4byte	.LASF127
 6729 10bc 01       		.byte	0x1
 6730 10bd 3803     		.2byte	0x338
 6731 10bf 6B000000 		.4byte	0x6b
 6732 10c3 7D130000 		.4byte	.LLST111
 6733 10c7 0E       		.uleb128 0xe
 6734 10c8 65090000 		.4byte	.LASF128
 6735 10cc 01       		.byte	0x1
 6736 10cd 3903     		.2byte	0x339
 6737 10cf 6B000000 		.4byte	0x6b
 6738 10d3 BC130000 		.4byte	.LLST112
 6739 10d7 0E       		.uleb128 0xe
 6740 10d8 F7060000 		.4byte	.LASF129
 6741 10dc 01       		.byte	0x1
 6742 10dd 3A03     		.2byte	0x33a
 6743 10df 6B000000 		.4byte	0x6b
 6744 10e3 CF130000 		.4byte	.LLST113
 6745 10e7 0E       		.uleb128 0xe
 6746 10e8 9D060000 		.4byte	.LASF130
 6747 10ec 01       		.byte	0x1
 6748 10ed 3E03     		.2byte	0x33e
 6749 10ef 83000000 		.4byte	0x83
 6750 10f3 EE130000 		.4byte	.LLST114
 6751 10f7 0E       		.uleb128 0xe
 6752 10f8 AA070000 		.4byte	.LASF131
 6753 10fc 01       		.byte	0x1
 6754 10fd 4203     		.2byte	0x342
 6755 10ff 83000000 		.4byte	0x83
 6756 1103 3B140000 		.4byte	.LLST115
 6757 1107 0E       		.uleb128 0xe
 6758 1108 27010000 		.4byte	.LASF39
 6759 110c 01       		.byte	0x1
 6760 110d 4503     		.2byte	0x345
 6761 110f 6B000000 		.4byte	0x6b
 6762 1113 88140000 		.4byte	.LLST116
 6763 1117 13       		.uleb128 0x13
 6764 1118 14000000 		.4byte	.LVL359
 6765 111c AC170000 		.4byte	0x17ac
 6766 1120 13       		.uleb128 0x13
 6767 1121 1A000000 		.4byte	.LVL361
 6768 1125 2D020000 		.4byte	0x22d
 6769 1129 13       		.uleb128 0x13
 6770 112a 22000000 		.4byte	.LVL363
 6771 112e F8010000 		.4byte	0x1f8
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 191


 6772 1132 13       		.uleb128 0x13
 6773 1133 30000000 		.4byte	.LVL366
 6774 1137 C9020000 		.4byte	0x2c9
 6775 113b 13       		.uleb128 0x13
 6776 113c 40000000 		.4byte	.LVL368
 6777 1140 6C020000 		.4byte	0x26c
 6778 1144 1E       		.uleb128 0x1e
 6779 1145 EE000000 		.4byte	.LVL387
 6780 1149 C2170000 		.4byte	0x17c2
 6781 114d 57110000 		.4byte	0x1157
 6782 1151 1D       		.uleb128 0x1d
 6783 1152 01       		.uleb128 0x1
 6784 1153 50       		.byte	0x50
 6785 1154 01       		.uleb128 0x1
 6786 1155 35       		.byte	0x35
 6787 1156 00       		.byte	0
 6788 1157 1E       		.uleb128 0x1e
 6789 1158 0C010000 		.4byte	.LVL390
 6790 115c C2170000 		.4byte	0x17c2
 6791 1160 6A110000 		.4byte	0x116a
 6792 1164 1D       		.uleb128 0x1d
 6793 1165 01       		.uleb128 0x1
 6794 1166 50       		.byte	0x50
 6795 1167 01       		.uleb128 0x1
 6796 1168 35       		.byte	0x35
 6797 1169 00       		.byte	0
 6798 116a 1E       		.uleb128 0x1e
 6799 116b 2C010000 		.4byte	.LVL392
 6800 116f 51100000 		.4byte	0x1051
 6801 1173 7D110000 		.4byte	0x117d
 6802 1177 1D       		.uleb128 0x1d
 6803 1178 01       		.uleb128 0x1
 6804 1179 50       		.byte	0x50
 6805 117a 01       		.uleb128 0x1
 6806 117b 35       		.byte	0x35
 6807 117c 00       		.byte	0
 6808 117d 1E       		.uleb128 0x1e
 6809 117e 3E010000 		.4byte	.LVL393
 6810 1182 C2170000 		.4byte	0x17c2
 6811 1186 90110000 		.4byte	0x1190
 6812 118a 1D       		.uleb128 0x1d
 6813 118b 01       		.uleb128 0x1
 6814 118c 50       		.byte	0x50
 6815 118d 01       		.uleb128 0x1
 6816 118e 35       		.byte	0x35
 6817 118f 00       		.byte	0
 6818 1190 1E       		.uleb128 0x1e
 6819 1191 46010000 		.4byte	.LVL395
 6820 1195 A9080000 		.4byte	0x8a9
 6821 1199 A3110000 		.4byte	0x11a3
 6822 119d 1D       		.uleb128 0x1d
 6823 119e 01       		.uleb128 0x1
 6824 119f 50       		.byte	0x50
 6825 11a0 01       		.uleb128 0x1
 6826 11a1 30       		.byte	0x30
 6827 11a2 00       		.byte	0
 6828 11a3 13       		.uleb128 0x13
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 192


 6829 11a4 50010000 		.4byte	.LVL397
 6830 11a8 880F0000 		.4byte	0xf88
 6831 11ac 13       		.uleb128 0x13
 6832 11ad 5A010000 		.4byte	.LVL399
 6833 11b1 43020000 		.4byte	0x243
 6834 11b5 1C       		.uleb128 0x1c
 6835 11b6 60010000 		.4byte	.LVL400
 6836 11ba B7170000 		.4byte	0x17b7
 6837 11be 1D       		.uleb128 0x1d
 6838 11bf 01       		.uleb128 0x1
 6839 11c0 50       		.byte	0x50
 6840 11c1 04       		.uleb128 0x4
 6841 11c2 91       		.byte	0x91
 6842 11c3 54       		.sleb128 -44
 6843 11c4 94       		.byte	0x94
 6844 11c5 01       		.byte	0x1
 6845 11c6 00       		.byte	0
 6846 11c7 00       		.byte	0
 6847 11c8 17       		.uleb128 0x17
 6848 11c9 FE050000 		.4byte	.LASF132
 6849 11cd 01       		.byte	0x1
 6850 11ce B104     		.2byte	0x4b1
 6851 11d0 B0000000 		.4byte	0xb0
 6852 11d4 00000000 		.4byte	.LFB16
 6853 11d8 48000000 		.4byte	.LFE16-.LFB16
 6854 11dc 01       		.uleb128 0x1
 6855 11dd 9C       		.byte	0x9c
 6856 11de 32120000 		.4byte	0x1232
 6857 11e2 15       		.uleb128 0x15
 6858 11e3 76090000 		.4byte	.LASF133
 6859 11e7 01       		.byte	0x1
 6860 11e8 B104     		.2byte	0x4b1
 6861 11ea 83000000 		.4byte	0x83
 6862 11ee B4140000 		.4byte	.LLST117
 6863 11f2 0E       		.uleb128 0xe
 6864 11f3 96000000 		.4byte	.LASF62
 6865 11f7 01       		.byte	0x1
 6866 11f8 B304     		.2byte	0x4b3
 6867 11fa B0000000 		.4byte	0xb0
 6868 11fe D2140000 		.4byte	.LLST118
 6869 1202 1E       		.uleb128 0x1e
 6870 1203 16000000 		.4byte	.LVL407
 6871 1207 51100000 		.4byte	0x1051
 6872 120b 15120000 		.4byte	0x1215
 6873 120f 1D       		.uleb128 0x1d
 6874 1210 01       		.uleb128 0x1
 6875 1211 50       		.byte	0x50
 6876 1212 01       		.uleb128 0x1
 6877 1213 3A       		.byte	0x3a
 6878 1214 00       		.byte	0
 6879 1215 1E       		.uleb128 0x1e
 6880 1216 2C000000 		.4byte	.LVL408
 6881 121a 51100000 		.4byte	0x1051
 6882 121e 28120000 		.4byte	0x1228
 6883 1222 1D       		.uleb128 0x1d
 6884 1223 01       		.uleb128 0x1
 6885 1224 50       		.byte	0x50
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 193


 6886 1225 01       		.uleb128 0x1
 6887 1226 31       		.byte	0x31
 6888 1227 00       		.byte	0
 6889 1228 13       		.uleb128 0x13
 6890 1229 30000000 		.4byte	.LVL409
 6891 122d 05040000 		.4byte	0x405
 6892 1231 00       		.byte	0
 6893 1232 17       		.uleb128 0x17
 6894 1233 010A0000 		.4byte	.LASF134
 6895 1237 01       		.byte	0x1
 6896 1238 B806     		.2byte	0x6b8
 6897 123a B0000000 		.4byte	0xb0
 6898 123e 00000000 		.4byte	.LFB21
 6899 1242 9C000000 		.4byte	.LFE21-.LFB21
 6900 1246 01       		.uleb128 0x1
 6901 1247 9C       		.byte	0x9c
 6902 1248 0B130000 		.4byte	0x130b
 6903 124c 1B       		.uleb128 0x1b
 6904 124d 706C6C00 		.ascii	"pll\000"
 6905 1251 01       		.byte	0x1
 6906 1252 B806     		.2byte	0x6b8
 6907 1254 83000000 		.4byte	0x83
 6908 1258 F1140000 		.4byte	.LLST119
 6909 125c 15       		.uleb128 0x15
 6910 125d 7B060000 		.4byte	.LASF135
 6911 1261 01       		.byte	0x1
 6912 1262 B806     		.2byte	0x6b8
 6913 1264 83000000 		.4byte	0x83
 6914 1268 49150000 		.4byte	.LLST120
 6915 126c 0E       		.uleb128 0xe
 6916 126d C1030000 		.4byte	.LASF136
 6917 1271 01       		.byte	0x1
 6918 1272 BA06     		.2byte	0x6ba
 6919 1274 83000000 		.4byte	0x83
 6920 1278 A7150000 		.4byte	.LLST121
 6921 127c 0E       		.uleb128 0xe
 6922 127d 27010000 		.4byte	.LASF39
 6923 1281 01       		.byte	0x1
 6924 1282 BB06     		.2byte	0x6bb
 6925 1284 6B000000 		.4byte	0x6b
 6926 1288 EC150000 		.4byte	.LLST122
 6927 128c 0E       		.uleb128 0xe
 6928 128d 96000000 		.4byte	.LASF62
 6929 1291 01       		.byte	0x1
 6930 1292 BC06     		.2byte	0x6bc
 6931 1294 B0000000 		.4byte	0xb0
 6932 1298 0A160000 		.4byte	.LLST123
 6933 129c 13       		.uleb128 0x13
 6934 129d 12000000 		.4byte	.LVL415
 6935 12a1 AC170000 		.4byte	0x17ac
 6936 12a5 13       		.uleb128 0x13
 6937 12a6 3A000000 		.4byte	.LVL416
 6938 12aa B7170000 		.4byte	0x17b7
 6939 12ae 1E       		.uleb128 0x1e
 6940 12af 40000000 		.4byte	.LVL417
 6941 12b3 51100000 		.4byte	0x1051
 6942 12b7 C1120000 		.4byte	0x12c1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 194


 6943 12bb 1D       		.uleb128 0x1d
 6944 12bc 01       		.uleb128 0x1
 6945 12bd 50       		.byte	0x50
 6946 12be 01       		.uleb128 0x1
 6947 12bf 35       		.byte	0x35
 6948 12c0 00       		.byte	0
 6949 12c1 13       		.uleb128 0x13
 6950 12c2 44000000 		.4byte	.LVL418
 6951 12c6 AC170000 		.4byte	0x17ac
 6952 12ca 13       		.uleb128 0x13
 6953 12cb 5A000000 		.4byte	.LVL419
 6954 12cf B7170000 		.4byte	0x17b7
 6955 12d3 1E       		.uleb128 0x1e
 6956 12d4 68000000 		.4byte	.LVL421
 6957 12d8 CE080000 		.4byte	0x8ce
 6958 12dc E7120000 		.4byte	0x12e7
 6959 12e0 1D       		.uleb128 0x1d
 6960 12e1 01       		.uleb128 0x1
 6961 12e2 50       		.byte	0x50
 6962 12e3 02       		.uleb128 0x2
 6963 12e4 74       		.byte	0x74
 6964 12e5 00       		.sleb128 0
 6965 12e6 00       		.byte	0
 6966 12e7 1E       		.uleb128 0x1e
 6967 12e8 72000000 		.4byte	.LVL422
 6968 12ec 5B060000 		.4byte	0x65b
 6969 12f0 FB120000 		.4byte	0x12fb
 6970 12f4 1D       		.uleb128 0x1d
 6971 12f5 01       		.uleb128 0x1
 6972 12f6 50       		.byte	0x50
 6973 12f7 02       		.uleb128 0x2
 6974 12f8 74       		.byte	0x74
 6975 12f9 00       		.sleb128 0
 6976 12fa 00       		.byte	0
 6977 12fb 1C       		.uleb128 0x1c
 6978 12fc 7C000000 		.4byte	.LVL423
 6979 1300 51100000 		.4byte	0x1051
 6980 1304 1D       		.uleb128 0x1d
 6981 1305 01       		.uleb128 0x1
 6982 1306 50       		.byte	0x50
 6983 1307 01       		.uleb128 0x1
 6984 1308 31       		.byte	0x31
 6985 1309 00       		.byte	0
 6986 130a 00       		.byte	0
 6987 130b 11       		.uleb128 0x11
 6988 130c 51010000 		.4byte	.LASF137
 6989 1310 01       		.byte	0x1
 6990 1311 660A     		.2byte	0xa66
 6991 1313 00000000 		.4byte	.LFB32
 6992 1317 44000000 		.4byte	.LFE32-.LFB32
 6993 131b 01       		.uleb128 0x1
 6994 131c 9C       		.byte	0x9c
 6995 131d 50130000 		.4byte	0x1350
 6996 1321 15       		.uleb128 0x15
 6997 1322 B90A0000 		.4byte	.LASF138
 6998 1326 01       		.byte	0x1
 6999 1327 660A     		.2byte	0xa66
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 195


 7000 1329 83000000 		.4byte	0x83
 7001 132d 29160000 		.4byte	.LLST124
 7002 1331 1E       		.uleb128 0x1e
 7003 1332 2E000000 		.4byte	.LVL435
 7004 1336 51100000 		.4byte	0x1051
 7005 133a 46130000 		.4byte	0x1346
 7006 133e 1D       		.uleb128 0x1d
 7007 133f 01       		.uleb128 0x1
 7008 1340 50       		.byte	0x50
 7009 1341 03       		.uleb128 0x3
 7010 1342 0A       		.byte	0xa
 7011 1343 E803     		.2byte	0x3e8
 7012 1345 00       		.byte	0
 7013 1346 13       		.uleb128 0x13
 7014 1347 32000000 		.4byte	.LVL436
 7015 134b 49070000 		.4byte	0x749
 7016 134f 00       		.byte	0
 7017 1350 24       		.uleb128 0x24
 7018 1351 C5010000 		.4byte	.LASF139
 7019 1355 01       		.byte	0x1
 7020 1356 440C     		.2byte	0xc44
 7021 1358 00000000 		.4byte	.LFB54
 7022 135c 4C000000 		.4byte	.LFE54-.LFB54
 7023 1360 01       		.uleb128 0x1
 7024 1361 9C       		.byte	0x9c
 7025 1362 77130000 		.4byte	0x1377
 7026 1366 15       		.uleb128 0x15
 7027 1367 D0030000 		.4byte	.LASF31
 7028 136b 01       		.byte	0x1
 7029 136c 440C     		.2byte	0xc44
 7030 136e 83000000 		.4byte	0x83
 7031 1372 55160000 		.4byte	.LLST125
 7032 1376 00       		.byte	0
 7033 1377 18       		.uleb128 0x18
 7034 1378 38030000 		.4byte	.LASF140
 7035 137c 01       		.byte	0x1
 7036 137d B00C     		.2byte	0xcb0
 7037 137f 00000000 		.4byte	.LFB58
 7038 1383 10000000 		.4byte	.LFE58-.LFB58
 7039 1387 01       		.uleb128 0x1
 7040 1388 9C       		.byte	0x9c
 7041 1389 18       		.uleb128 0x18
 7042 138a 120A0000 		.4byte	.LASF141
 7043 138e 01       		.byte	0x1
 7044 138f C00C     		.2byte	0xcc0
 7045 1391 00000000 		.4byte	.LFB59
 7046 1395 10000000 		.4byte	.LFE59-.LFB59
 7047 1399 01       		.uleb128 0x1
 7048 139a 9C       		.byte	0x9c
 7049 139b 11       		.uleb128 0x11
 7050 139c 57050000 		.4byte	.LASF142
 7051 13a0 01       		.byte	0x1
 7052 13a1 9F0C     		.2byte	0xc9f
 7053 13a3 00000000 		.4byte	.LFB57
 7054 13a7 18000000 		.4byte	.LFE57-.LFB57
 7055 13ab 01       		.uleb128 0x1
 7056 13ac 9C       		.byte	0x9c
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 196


 7057 13ad BB130000 		.4byte	0x13bb
 7058 13b1 13       		.uleb128 0x13
 7059 13b2 06000000 		.4byte	.LVL441
 7060 13b6 89130000 		.4byte	0x1389
 7061 13ba 00       		.byte	0
 7062 13bb 18       		.uleb128 0x18
 7063 13bc EA070000 		.4byte	.LASF143
 7064 13c0 01       		.byte	0x1
 7065 13c1 D00C     		.2byte	0xcd0
 7066 13c3 00000000 		.4byte	.LFB60
 7067 13c7 10000000 		.4byte	.LFE60-.LFB60
 7068 13cb 01       		.uleb128 0x1
 7069 13cc 9C       		.byte	0x9c
 7070 13cd 11       		.uleb128 0x11
 7071 13ce 12070000 		.4byte	.LASF144
 7072 13d2 01       		.byte	0x1
 7073 13d3 E10C     		.2byte	0xce1
 7074 13d5 00000000 		.4byte	.LFB61
 7075 13d9 10000000 		.4byte	.LFE61-.LFB61
 7076 13dd 01       		.uleb128 0x1
 7077 13de 9C       		.byte	0x9c
 7078 13df F4130000 		.4byte	0x13f4
 7079 13e3 15       		.uleb128 0x15
 7080 13e4 87020000 		.4byte	.LASF115
 7081 13e8 01       		.byte	0x1
 7082 13e9 E10C     		.2byte	0xce1
 7083 13eb 83000000 		.4byte	0x83
 7084 13ef 76160000 		.4byte	.LLST126
 7085 13f3 00       		.byte	0
 7086 13f4 12       		.uleb128 0x12
 7087 13f5 1F020000 		.4byte	.LASF145
 7088 13f9 01       		.byte	0x1
 7089 13fa F10C     		.2byte	0xcf1
 7090 13fc 83000000 		.4byte	0x83
 7091 1400 00000000 		.4byte	.LFB62
 7092 1404 10000000 		.4byte	.LFE62-.LFB62
 7093 1408 01       		.uleb128 0x1
 7094 1409 9C       		.byte	0x9c
 7095 140a 12       		.uleb128 0x12
 7096 140b BF050000 		.4byte	.LASF146
 7097 140f 01       		.byte	0x1
 7098 1410 010D     		.2byte	0xd01
 7099 1412 83000000 		.4byte	0x83
 7100 1416 00000000 		.4byte	.LFB63
 7101 141a 10000000 		.4byte	.LFE63-.LFB63
 7102 141e 01       		.uleb128 0x1
 7103 141f 9C       		.byte	0x9c
 7104 1420 11       		.uleb128 0x11
 7105 1421 63060000 		.4byte	.LASF147
 7106 1425 01       		.byte	0x1
 7107 1426 210D     		.2byte	0xd21
 7108 1428 00000000 		.4byte	.LFB64
 7109 142c 20000000 		.4byte	.LFE64-.LFB64
 7110 1430 01       		.uleb128 0x1
 7111 1431 9C       		.byte	0x9c
 7112 1432 45140000 		.4byte	0x1445
 7113 1436 16       		.uleb128 0x16
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 197


 7114 1437 C5060000 		.4byte	.LASF148
 7115 143b 01       		.byte	0x1
 7116 143c 210D     		.2byte	0xd21
 7117 143e 83000000 		.4byte	0x83
 7118 1442 01       		.uleb128 0x1
 7119 1443 50       		.byte	0x50
 7120 1444 00       		.byte	0
 7121 1445 12       		.uleb128 0x12
 7122 1446 34090000 		.4byte	.LASF149
 7123 144a 01       		.byte	0x1
 7124 144b 3A0D     		.2byte	0xd3a
 7125 144d 83000000 		.4byte	0x83
 7126 1451 00000000 		.4byte	.LFB65
 7127 1455 10000000 		.4byte	.LFE65-.LFB65
 7128 1459 01       		.uleb128 0x1
 7129 145a 9C       		.byte	0x9c
 7130 145b 12       		.uleb128 0x12
 7131 145c 0D040000 		.4byte	.LASF150
 7132 1460 01       		.byte	0x1
 7133 1461 510D     		.2byte	0xd51
 7134 1463 83000000 		.4byte	0x83
 7135 1467 00000000 		.4byte	.LFB66
 7136 146b 10000000 		.4byte	.LFE66-.LFB66
 7137 146f 01       		.uleb128 0x1
 7138 1470 9C       		.byte	0x9c
 7139 1471 25       		.uleb128 0x25
 7140 1472 44060000 		.4byte	.LASF151
 7141 1476 01       		.byte	0x1
 7142 1477 A60D     		.2byte	0xda6
 7143 1479 00000000 		.4byte	.LFB70
 7144 147d 2C000000 		.4byte	.LFE70-.LFB70
 7145 1481 01       		.uleb128 0x1
 7146 1482 9C       		.byte	0x9c
 7147 1483 9F140000 		.4byte	0x149f
 7148 1487 0F       		.uleb128 0xf
 7149 1488 6900     		.ascii	"i\000"
 7150 148a 01       		.byte	0x1
 7151 148b A80D     		.2byte	0xda8
 7152 148d 83000000 		.4byte	0x83
 7153 1491 97160000 		.4byte	.LLST127
 7154 1495 13       		.uleb128 0x13
 7155 1496 06000000 		.4byte	.LVL445
 7156 149a 5B140000 		.4byte	0x145b
 7157 149e 00       		.byte	0
 7158 149f 18       		.uleb128 0x18
 7159 14a0 17000000 		.4byte	.LASF152
 7160 14a4 01       		.byte	0x1
 7161 14a5 5E0D     		.2byte	0xd5e
 7162 14a7 00000000 		.4byte	.LFB67
 7163 14ab 0C000000 		.4byte	.LFE67-.LFB67
 7164 14af 01       		.uleb128 0x1
 7165 14b0 9C       		.byte	0x9c
 7166 14b1 24       		.uleb128 0x24
 7167 14b2 44080000 		.4byte	.LASF153
 7168 14b6 01       		.byte	0x1
 7169 14b7 810C     		.2byte	0xc81
 7170 14b9 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 198


 7171 14bd 48000000 		.4byte	.LFE56-.LFB56
 7172 14c1 01       		.uleb128 0x1
 7173 14c2 9C       		.byte	0x9c
 7174 14c3 17150000 		.4byte	0x1517
 7175 14c7 0F       		.uleb128 0xf
 7176 14c8 6900     		.ascii	"i\000"
 7177 14ca 01       		.byte	0x1
 7178 14cb 830C     		.2byte	0xc83
 7179 14cd 83000000 		.4byte	0x83
 7180 14d1 B5160000 		.4byte	.LLST128
 7181 14d5 1E       		.uleb128 0x1e
 7182 14d6 1E000000 		.4byte	.LVL455
 7183 14da EA0C0000 		.4byte	0xcea
 7184 14de F1140000 		.4byte	0x14f1
 7185 14e2 1D       		.uleb128 0x1d
 7186 14e3 01       		.uleb128 0x1
 7187 14e4 50       		.byte	0x50
 7188 14e5 01       		.uleb128 0x1
 7189 14e6 3F       		.byte	0x3f
 7190 14e7 1D       		.uleb128 0x1d
 7191 14e8 01       		.uleb128 0x1
 7192 14e9 51       		.byte	0x51
 7193 14ea 05       		.uleb128 0x5
 7194 14eb 03       		.byte	0x3
 7195 14ec 00000000 		.4byte	CySysTickServiceCallbacks
 7196 14f0 00       		.byte	0
 7197 14f1 1E       		.uleb128 0x1e
 7198 14f2 24000000 		.4byte	.LVL456
 7199 14f6 20140000 		.4byte	0x1420
 7200 14fa 04150000 		.4byte	0x1504
 7201 14fe 1D       		.uleb128 0x1d
 7202 14ff 01       		.uleb128 0x1
 7203 1500 50       		.byte	0x50
 7204 1501 01       		.uleb128 0x1
 7205 1502 31       		.byte	0x31
 7206 1503 00       		.byte	0
 7207 1504 13       		.uleb128 0x13
 7208 1505 34000000 		.4byte	.LVL458
 7209 1509 CD130000 		.4byte	0x13cd
 7210 150d 13       		.uleb128 0x13
 7211 150e 38000000 		.4byte	.LVL459
 7212 1512 9F140000 		.4byte	0x149f
 7213 1516 00       		.byte	0
 7214 1517 11       		.uleb128 0x11
 7215 1518 35060000 		.4byte	.LASF154
 7216 151c 01       		.byte	0x1
 7217 151d 640C     		.2byte	0xc64
 7218 151f 00000000 		.4byte	.LFB55
 7219 1523 20000000 		.4byte	.LFE55-.LFB55
 7220 1527 01       		.uleb128 0x1
 7221 1528 9C       		.byte	0x9c
 7222 1529 40150000 		.4byte	0x1540
 7223 152d 13       		.uleb128 0x13
 7224 152e 0E000000 		.4byte	.LVL460
 7225 1532 B1140000 		.4byte	0x14b1
 7226 1536 13       		.uleb128 0x13
 7227 1537 18000000 		.4byte	.LVL461
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 199


 7228 153b 9B130000 		.4byte	0x139b
 7229 153f 00       		.byte	0
 7230 1540 17       		.uleb128 0x17
 7231 1541 A3010000 		.4byte	.LASF155
 7232 1545 01       		.byte	0x1
 7233 1546 810D     		.2byte	0xd81
 7234 1548 FF000000 		.4byte	0xff
 7235 154c 00000000 		.4byte	.LFB68
 7236 1550 10000000 		.4byte	.LFE68-.LFB68
 7237 1554 01       		.uleb128 0x1
 7238 1555 9C       		.byte	0x9c
 7239 1556 87150000 		.4byte	0x1587
 7240 155a 15       		.uleb128 0x15
 7241 155b 30080000 		.4byte	.LASF80
 7242 155f 01       		.byte	0x1
 7243 1560 810D     		.2byte	0xd81
 7244 1562 83000000 		.4byte	0x83
 7245 1566 D4160000 		.4byte	.LLST129
 7246 156a 16       		.uleb128 0x16
 7247 156b BA090000 		.4byte	.LASF156
 7248 156f 01       		.byte	0x1
 7249 1570 810D     		.2byte	0xd81
 7250 1572 FF000000 		.4byte	0xff
 7251 1576 01       		.uleb128 0x1
 7252 1577 51       		.byte	0x51
 7253 1578 19       		.uleb128 0x19
 7254 1579 10090000 		.4byte	.LASF157
 7255 157d 01       		.byte	0x1
 7256 157e 830D     		.2byte	0xd83
 7257 1580 FF000000 		.4byte	0xff
 7258 1584 01       		.uleb128 0x1
 7259 1585 50       		.byte	0x50
 7260 1586 00       		.byte	0
 7261 1587 17       		.uleb128 0x17
 7262 1588 6C030000 		.4byte	.LASF158
 7263 158c 01       		.byte	0x1
 7264 158d 990D     		.2byte	0xd99
 7265 158f FF000000 		.4byte	0xff
 7266 1593 00000000 		.4byte	.LFB69
 7267 1597 10000000 		.4byte	.LFE69-.LFB69
 7268 159b 01       		.uleb128 0x1
 7269 159c 9C       		.byte	0x9c
 7270 159d B2150000 		.4byte	0x15b2
 7271 15a1 15       		.uleb128 0x15
 7272 15a2 30080000 		.4byte	.LASF80
 7273 15a6 01       		.byte	0x1
 7274 15a7 990D     		.2byte	0xd99
 7275 15a9 83000000 		.4byte	0x83
 7276 15ad F5160000 		.4byte	.LLST130
 7277 15b1 00       		.byte	0
 7278 15b2 11       		.uleb128 0x11
 7279 15b3 AC090000 		.4byte	.LASF159
 7280 15b7 01       		.byte	0x1
 7281 15b8 C60D     		.2byte	0xdc6
 7282 15ba 00000000 		.4byte	.LFB71
 7283 15be 70000000 		.4byte	.LFE71-.LFB71
 7284 15c2 01       		.uleb128 0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 200


 7285 15c3 9C       		.byte	0x9c
 7286 15c4 D7150000 		.4byte	0x15d7
 7287 15c8 16       		.uleb128 0x16
 7288 15c9 B5080000 		.4byte	.LASF160
 7289 15cd 01       		.byte	0x1
 7290 15ce C60D     		.2byte	0xdc6
 7291 15d0 D7150000 		.4byte	0x15d7
 7292 15d4 01       		.uleb128 0x1
 7293 15d5 50       		.byte	0x50
 7294 15d6 00       		.byte	0
 7295 15d7 06       		.uleb128 0x6
 7296 15d8 04       		.byte	0x4
 7297 15d9 83000000 		.4byte	0x83
 7298 15dd 11       		.uleb128 0x11
 7299 15de A7040000 		.4byte	.LASF161
 7300 15e2 01       		.byte	0x1
 7301 15e3 F30D     		.2byte	0xdf3
 7302 15e5 00000000 		.4byte	.LFB72
 7303 15e9 20000000 		.4byte	.LFE72-.LFB72
 7304 15ed 01       		.uleb128 0x1
 7305 15ee 9C       		.byte	0x9c
 7306 15ef 14160000 		.4byte	0x1614
 7307 15f3 15       		.uleb128 0x15
 7308 15f4 29080000 		.4byte	.LASF69
 7309 15f8 01       		.byte	0x1
 7310 15f9 F30D     		.2byte	0xdf3
 7311 15fb 83000000 		.4byte	0x83
 7312 15ff 16170000 		.4byte	.LLST131
 7313 1603 0E       		.uleb128 0xe
 7314 1604 80020000 		.4byte	.LASF58
 7315 1608 01       		.byte	0x1
 7316 1609 F50D     		.2byte	0xdf5
 7317 160b 83000000 		.4byte	0x83
 7318 160f 37170000 		.4byte	.LLST132
 7319 1613 00       		.byte	0
 7320 1614 11       		.uleb128 0x11
 7321 1615 7B050000 		.4byte	.LASF162
 7322 1619 01       		.byte	0x1
 7323 161a 0F0E     		.2byte	0xe0f
 7324 161c 00000000 		.4byte	.LFB73
 7325 1620 20000000 		.4byte	.LFE73-.LFB73
 7326 1624 01       		.uleb128 0x1
 7327 1625 9C       		.byte	0x9c
 7328 1626 4B160000 		.4byte	0x164b
 7329 162a 15       		.uleb128 0x15
 7330 162b 29080000 		.4byte	.LASF69
 7331 162f 01       		.byte	0x1
 7332 1630 0F0E     		.2byte	0xe0f
 7333 1632 83000000 		.4byte	0x83
 7334 1636 55170000 		.4byte	.LLST133
 7335 163a 0E       		.uleb128 0xe
 7336 163b 80020000 		.4byte	.LASF58
 7337 163f 01       		.byte	0x1
 7338 1640 110E     		.2byte	0xe11
 7339 1642 83000000 		.4byte	0x83
 7340 1646 76170000 		.4byte	.LLST134
 7341 164a 00       		.byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 201


 7342 164b 11       		.uleb128 0x11
 7343 164c 6B000000 		.4byte	.LASF163
 7344 1650 01       		.byte	0x1
 7345 1651 2B0E     		.2byte	0xe2b
 7346 1653 00000000 		.4byte	.LFB74
 7347 1657 20000000 		.4byte	.LFE74-.LFB74
 7348 165b 01       		.uleb128 0x1
 7349 165c 9C       		.byte	0x9c
 7350 165d 82160000 		.4byte	0x1682
 7351 1661 15       		.uleb128 0x15
 7352 1662 29080000 		.4byte	.LASF69
 7353 1666 01       		.byte	0x1
 7354 1667 2B0E     		.2byte	0xe2b
 7355 1669 83000000 		.4byte	0x83
 7356 166d 94170000 		.4byte	.LLST135
 7357 1671 0E       		.uleb128 0xe
 7358 1672 80020000 		.4byte	.LASF58
 7359 1676 01       		.byte	0x1
 7360 1677 2D0E     		.2byte	0xe2d
 7361 1679 83000000 		.4byte	0x83
 7362 167d B5170000 		.4byte	.LLST136
 7363 1681 00       		.byte	0
 7364 1682 11       		.uleb128 0x11
 7365 1683 04050000 		.4byte	.LASF164
 7366 1687 01       		.byte	0x1
 7367 1688 490E     		.2byte	0xe49
 7368 168a 00000000 		.4byte	.LFB75
 7369 168e 68000000 		.4byte	.LFE75-.LFB75
 7370 1692 01       		.uleb128 0x1
 7371 1693 9C       		.byte	0x9c
 7372 1694 D8160000 		.4byte	0x16d8
 7373 1698 15       		.uleb128 0x15
 7374 1699 FA000000 		.4byte	.LASF165
 7375 169d 01       		.byte	0x1
 7376 169e 490E     		.2byte	0xe49
 7377 16a0 83000000 		.4byte	0x83
 7378 16a4 D3170000 		.4byte	.LLST137
 7379 16a8 15       		.uleb128 0x15
 7380 16a9 29080000 		.4byte	.LASF69
 7381 16ad 01       		.byte	0x1
 7382 16ae 490E     		.2byte	0xe49
 7383 16b0 83000000 		.4byte	0x83
 7384 16b4 3F180000 		.4byte	.LLST138
 7385 16b8 0E       		.uleb128 0xe
 7386 16b9 80020000 		.4byte	.LASF58
 7387 16bd 01       		.byte	0x1
 7388 16be 4B0E     		.2byte	0xe4b
 7389 16c0 83000000 		.4byte	0x83
 7390 16c4 AB180000 		.4byte	.LLST139
 7391 16c8 1C       		.uleb128 0x1c
 7392 16c9 56000000 		.4byte	.LVL497
 7393 16cd A9080000 		.4byte	0x8a9
 7394 16d1 1D       		.uleb128 0x1d
 7395 16d2 01       		.uleb128 0x1
 7396 16d3 50       		.byte	0x50
 7397 16d4 01       		.uleb128 0x1
 7398 16d5 30       		.byte	0x30
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 202


 7399 16d6 00       		.byte	0
 7400 16d7 00       		.byte	0
 7401 16d8 0B       		.uleb128 0xb
 7402 16d9 FF000000 		.4byte	0xff
 7403 16dd E8160000 		.4byte	0x16e8
 7404 16e1 0C       		.uleb128 0xc
 7405 16e2 F8000000 		.4byte	0xf8
 7406 16e6 04       		.byte	0x4
 7407 16e7 00       		.byte	0
 7408 16e8 23       		.uleb128 0x23
 7409 16e9 AC050000 		.4byte	.LASF166
 7410 16ed 01       		.byte	0x1
 7411 16ee 22       		.byte	0x22
 7412 16ef D8160000 		.4byte	0x16d8
 7413 16f3 05       		.uleb128 0x5
 7414 16f4 03       		.byte	0x3
 7415 16f5 08000000 		.4byte	CySysTickCallbacks
 7416 16f9 26       		.uleb128 0x26
 7417 16fa 54030000 		.4byte	.LASF167
 7418 16fe 01       		.byte	0x1
 7419 16ff 1B       		.byte	0x1b
 7420 1700 83000000 		.4byte	0x83
 7421 1704 05       		.uleb128 0x5
 7422 1705 03       		.byte	0x3
 7423 1706 00000000 		.4byte	cydelayFreqHz
 7424 170a 26       		.uleb128 0x26
 7425 170b A3000000 		.4byte	.LASF168
 7426 170f 01       		.byte	0x1
 7427 1710 1C       		.byte	0x1c
 7428 1711 83000000 		.4byte	0x83
 7429 1715 05       		.uleb128 0x5
 7430 1716 03       		.byte	0x3
 7431 1717 00000000 		.4byte	cydelayFreqKhz
 7432 171b 26       		.uleb128 0x26
 7433 171c 8E090000 		.4byte	.LASF169
 7434 1720 01       		.byte	0x1
 7435 1721 1D       		.byte	0x1d
 7436 1722 6B000000 		.4byte	0x6b
 7437 1726 05       		.uleb128 0x5
 7438 1727 03       		.byte	0x3
 7439 1728 00000000 		.4byte	cydelayFreqMhz
 7440 172c 26       		.uleb128 0x26
 7441 172d 2B0A0000 		.4byte	.LASF170
 7442 1731 01       		.byte	0x1
 7443 1732 1E       		.byte	0x1e
 7444 1733 83000000 		.4byte	0x83
 7445 1737 05       		.uleb128 0x5
 7446 1738 03       		.byte	0x3
 7447 1739 00000000 		.4byte	cydelay32kMs
 7448 173d 26       		.uleb128 0x26
 7449 173e 6D010000 		.4byte	.LASF171
 7450 1742 01       		.byte	0x1
 7451 1743 36       		.byte	0x36
 7452 1744 83000000 		.4byte	0x83
 7453 1748 05       		.uleb128 0x5
 7454 1749 03       		.byte	0x3
 7455 174a 00000000 		.4byte	CySysTickInitVar
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 203


 7456 174e 0B       		.uleb128 0xb
 7457 174f 5E170000 		.4byte	0x175e
 7458 1753 5E170000 		.4byte	0x175e
 7459 1757 0C       		.uleb128 0xc
 7460 1758 F8000000 		.4byte	0xf8
 7461 175c 2D       		.byte	0x2d
 7462 175d 00       		.byte	0
 7463 175e 27       		.uleb128 0x27
 7464 175f 6B000000 		.4byte	0x6b
 7465 1763 26       		.uleb128 0x26
 7466 1764 88030000 		.4byte	.LASF172
 7467 1768 01       		.byte	0x1
 7468 1769 3B       		.byte	0x3b
 7469 176a 74170000 		.4byte	0x1774
 7470 176e 05       		.uleb128 0x5
 7471 176f 03       		.byte	0x3
 7472 1770 00000000 		.4byte	cyImoFreqMhz2Reg
 7473 1774 27       		.uleb128 0x27
 7474 1775 4E170000 		.4byte	0x174e
 7475 1779 26       		.uleb128 0x26
 7476 177a 760A0000 		.4byte	.LASF173
 7477 177e 01       		.byte	0x1
 7478 177f 50       		.byte	0x50
 7479 1780 83000000 		.4byte	0x83
 7480 1784 05       		.uleb128 0x5
 7481 1785 03       		.byte	0x3
 7482 1786 00000000 		.4byte	CySysClkImoTrim4
 7483 178a 26       		.uleb128 0x26
 7484 178b 870A0000 		.4byte	.LASF174
 7485 178f 01       		.byte	0x1
 7486 1790 51       		.byte	0x51
 7487 1791 83000000 		.4byte	0x83
 7488 1795 05       		.uleb128 0x5
 7489 1796 03       		.byte	0x3
 7490 1797 00000000 		.4byte	CySysClkImoTrim5
 7491 179b 26       		.uleb128 0x26
 7492 179c BB070000 		.4byte	.LASF175
 7493 17a0 01       		.byte	0x1
 7494 17a1 58       		.byte	0x58
 7495 17a2 83000000 		.4byte	0x83
 7496 17a6 05       		.uleb128 0x5
 7497 17a7 03       		.byte	0x3
 7498 17a8 00000000 		.4byte	CySysClkPumpConfig
 7499 17ac 28       		.uleb128 0x28
 7500 17ad F10A0000 		.4byte	.LASF176
 7501 17b1 F10A0000 		.4byte	.LASF176
 7502 17b5 03       		.byte	0x3
 7503 17b6 F8       		.byte	0xf8
 7504 17b7 28       		.uleb128 0x28
 7505 17b8 B2000000 		.4byte	.LASF177
 7506 17bc B2000000 		.4byte	.LASF177
 7507 17c0 03       		.byte	0x3
 7508 17c1 F9       		.byte	0xf9
 7509 17c2 28       		.uleb128 0x28
 7510 17c3 23040000 		.4byte	.LASF178
 7511 17c7 23040000 		.4byte	.LASF178
 7512 17cb 03       		.byte	0x3
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 204


 7513 17cc EF       		.byte	0xef
 7514 17cd 28       		.uleb128 0x28
 7515 17ce EE090000 		.4byte	.LASF179
 7516 17d2 EE090000 		.4byte	.LASF179
 7517 17d6 04       		.byte	0x4
 7518 17d7 54       		.byte	0x54
 7519 17d8 28       		.uleb128 0x28
 7520 17d9 D8060000 		.4byte	.LASF180
 7521 17dd D8060000 		.4byte	.LASF180
 7522 17e1 05       		.byte	0x5
 7523 17e2 52       		.byte	0x52
 7524 17e3 00       		.byte	0
 7525              		.section	.debug_abbrev,"",%progbits
 7526              	.Ldebug_abbrev0:
 7527 0000 01       		.uleb128 0x1
 7528 0001 11       		.uleb128 0x11
 7529 0002 01       		.byte	0x1
 7530 0003 25       		.uleb128 0x25
 7531 0004 0E       		.uleb128 0xe
 7532 0005 13       		.uleb128 0x13
 7533 0006 0B       		.uleb128 0xb
 7534 0007 03       		.uleb128 0x3
 7535 0008 0E       		.uleb128 0xe
 7536 0009 1B       		.uleb128 0x1b
 7537 000a 0E       		.uleb128 0xe
 7538 000b 55       		.uleb128 0x55
 7539 000c 17       		.uleb128 0x17
 7540 000d 11       		.uleb128 0x11
 7541 000e 01       		.uleb128 0x1
 7542 000f 10       		.uleb128 0x10
 7543 0010 17       		.uleb128 0x17
 7544 0011 00       		.byte	0
 7545 0012 00       		.byte	0
 7546 0013 02       		.uleb128 0x2
 7547 0014 24       		.uleb128 0x24
 7548 0015 00       		.byte	0
 7549 0016 0B       		.uleb128 0xb
 7550 0017 0B       		.uleb128 0xb
 7551 0018 3E       		.uleb128 0x3e
 7552 0019 0B       		.uleb128 0xb
 7553 001a 03       		.uleb128 0x3
 7554 001b 0E       		.uleb128 0xe
 7555 001c 00       		.byte	0
 7556 001d 00       		.byte	0
 7557 001e 03       		.uleb128 0x3
 7558 001f 24       		.uleb128 0x24
 7559 0020 00       		.byte	0
 7560 0021 0B       		.uleb128 0xb
 7561 0022 0B       		.uleb128 0xb
 7562 0023 3E       		.uleb128 0x3e
 7563 0024 0B       		.uleb128 0xb
 7564 0025 03       		.uleb128 0x3
 7565 0026 08       		.uleb128 0x8
 7566 0027 00       		.byte	0
 7567 0028 00       		.byte	0
 7568 0029 04       		.uleb128 0x4
 7569 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 205


 7570 002b 00       		.byte	0
 7571 002c 03       		.uleb128 0x3
 7572 002d 0E       		.uleb128 0xe
 7573 002e 3A       		.uleb128 0x3a
 7574 002f 0B       		.uleb128 0xb
 7575 0030 3B       		.uleb128 0x3b
 7576 0031 05       		.uleb128 0x5
 7577 0032 49       		.uleb128 0x49
 7578 0033 13       		.uleb128 0x13
 7579 0034 00       		.byte	0
 7580 0035 00       		.byte	0
 7581 0036 05       		.uleb128 0x5
 7582 0037 35       		.uleb128 0x35
 7583 0038 00       		.byte	0
 7584 0039 49       		.uleb128 0x49
 7585 003a 13       		.uleb128 0x13
 7586 003b 00       		.byte	0
 7587 003c 00       		.byte	0
 7588 003d 06       		.uleb128 0x6
 7589 003e 0F       		.uleb128 0xf
 7590 003f 00       		.byte	0
 7591 0040 0B       		.uleb128 0xb
 7592 0041 0B       		.uleb128 0xb
 7593 0042 49       		.uleb128 0x49
 7594 0043 13       		.uleb128 0x13
 7595 0044 00       		.byte	0
 7596 0045 00       		.byte	0
 7597 0046 07       		.uleb128 0x7
 7598 0047 15       		.uleb128 0x15
 7599 0048 00       		.byte	0
 7600 0049 27       		.uleb128 0x27
 7601 004a 19       		.uleb128 0x19
 7602 004b 00       		.byte	0
 7603 004c 00       		.byte	0
 7604 004d 08       		.uleb128 0x8
 7605 004e 13       		.uleb128 0x13
 7606 004f 01       		.byte	0x1
 7607 0050 0B       		.uleb128 0xb
 7608 0051 0B       		.uleb128 0xb
 7609 0052 3A       		.uleb128 0x3a
 7610 0053 0B       		.uleb128 0xb
 7611 0054 3B       		.uleb128 0x3b
 7612 0055 05       		.uleb128 0x5
 7613 0056 01       		.uleb128 0x1
 7614 0057 13       		.uleb128 0x13
 7615 0058 00       		.byte	0
 7616 0059 00       		.byte	0
 7617 005a 09       		.uleb128 0x9
 7618 005b 0D       		.uleb128 0xd
 7619 005c 00       		.byte	0
 7620 005d 03       		.uleb128 0x3
 7621 005e 0E       		.uleb128 0xe
 7622 005f 3A       		.uleb128 0x3a
 7623 0060 0B       		.uleb128 0xb
 7624 0061 3B       		.uleb128 0x3b
 7625 0062 05       		.uleb128 0x5
 7626 0063 49       		.uleb128 0x49
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 206


 7627 0064 13       		.uleb128 0x13
 7628 0065 38       		.uleb128 0x38
 7629 0066 0B       		.uleb128 0xb
 7630 0067 00       		.byte	0
 7631 0068 00       		.byte	0
 7632 0069 0A       		.uleb128 0xa
 7633 006a 0D       		.uleb128 0xd
 7634 006b 00       		.byte	0
 7635 006c 03       		.uleb128 0x3
 7636 006d 08       		.uleb128 0x8
 7637 006e 3A       		.uleb128 0x3a
 7638 006f 0B       		.uleb128 0xb
 7639 0070 3B       		.uleb128 0x3b
 7640 0071 05       		.uleb128 0x5
 7641 0072 49       		.uleb128 0x49
 7642 0073 13       		.uleb128 0x13
 7643 0074 38       		.uleb128 0x38
 7644 0075 0B       		.uleb128 0xb
 7645 0076 00       		.byte	0
 7646 0077 00       		.byte	0
 7647 0078 0B       		.uleb128 0xb
 7648 0079 01       		.uleb128 0x1
 7649 007a 01       		.byte	0x1
 7650 007b 49       		.uleb128 0x49
 7651 007c 13       		.uleb128 0x13
 7652 007d 01       		.uleb128 0x1
 7653 007e 13       		.uleb128 0x13
 7654 007f 00       		.byte	0
 7655 0080 00       		.byte	0
 7656 0081 0C       		.uleb128 0xc
 7657 0082 21       		.uleb128 0x21
 7658 0083 00       		.byte	0
 7659 0084 49       		.uleb128 0x49
 7660 0085 13       		.uleb128 0x13
 7661 0086 2F       		.uleb128 0x2f
 7662 0087 0B       		.uleb128 0xb
 7663 0088 00       		.byte	0
 7664 0089 00       		.byte	0
 7665 008a 0D       		.uleb128 0xd
 7666 008b 2E       		.uleb128 0x2e
 7667 008c 01       		.byte	0x1
 7668 008d 03       		.uleb128 0x3
 7669 008e 0E       		.uleb128 0xe
 7670 008f 3A       		.uleb128 0x3a
 7671 0090 0B       		.uleb128 0xb
 7672 0091 3B       		.uleb128 0x3b
 7673 0092 05       		.uleb128 0x5
 7674 0093 27       		.uleb128 0x27
 7675 0094 19       		.uleb128 0x19
 7676 0095 11       		.uleb128 0x11
 7677 0096 01       		.uleb128 0x1
 7678 0097 12       		.uleb128 0x12
 7679 0098 06       		.uleb128 0x6
 7680 0099 40       		.uleb128 0x40
 7681 009a 18       		.uleb128 0x18
 7682 009b 9742     		.uleb128 0x2117
 7683 009d 19       		.uleb128 0x19
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 207


 7684 009e 01       		.uleb128 0x1
 7685 009f 13       		.uleb128 0x13
 7686 00a0 00       		.byte	0
 7687 00a1 00       		.byte	0
 7688 00a2 0E       		.uleb128 0xe
 7689 00a3 34       		.uleb128 0x34
 7690 00a4 00       		.byte	0
 7691 00a5 03       		.uleb128 0x3
 7692 00a6 0E       		.uleb128 0xe
 7693 00a7 3A       		.uleb128 0x3a
 7694 00a8 0B       		.uleb128 0xb
 7695 00a9 3B       		.uleb128 0x3b
 7696 00aa 05       		.uleb128 0x5
 7697 00ab 49       		.uleb128 0x49
 7698 00ac 13       		.uleb128 0x13
 7699 00ad 02       		.uleb128 0x2
 7700 00ae 17       		.uleb128 0x17
 7701 00af 00       		.byte	0
 7702 00b0 00       		.byte	0
 7703 00b1 0F       		.uleb128 0xf
 7704 00b2 34       		.uleb128 0x34
 7705 00b3 00       		.byte	0
 7706 00b4 03       		.uleb128 0x3
 7707 00b5 08       		.uleb128 0x8
 7708 00b6 3A       		.uleb128 0x3a
 7709 00b7 0B       		.uleb128 0xb
 7710 00b8 3B       		.uleb128 0x3b
 7711 00b9 05       		.uleb128 0x5
 7712 00ba 49       		.uleb128 0x49
 7713 00bb 13       		.uleb128 0x13
 7714 00bc 02       		.uleb128 0x2
 7715 00bd 17       		.uleb128 0x17
 7716 00be 00       		.byte	0
 7717 00bf 00       		.byte	0
 7718 00c0 10       		.uleb128 0x10
 7719 00c1 2E       		.uleb128 0x2e
 7720 00c2 00       		.byte	0
 7721 00c3 3F       		.uleb128 0x3f
 7722 00c4 19       		.uleb128 0x19
 7723 00c5 03       		.uleb128 0x3
 7724 00c6 0E       		.uleb128 0xe
 7725 00c7 3A       		.uleb128 0x3a
 7726 00c8 0B       		.uleb128 0xb
 7727 00c9 3B       		.uleb128 0x3b
 7728 00ca 0B       		.uleb128 0xb
 7729 00cb 27       		.uleb128 0x27
 7730 00cc 19       		.uleb128 0x19
 7731 00cd 11       		.uleb128 0x11
 7732 00ce 01       		.uleb128 0x1
 7733 00cf 12       		.uleb128 0x12
 7734 00d0 06       		.uleb128 0x6
 7735 00d1 40       		.uleb128 0x40
 7736 00d2 18       		.uleb128 0x18
 7737 00d3 9742     		.uleb128 0x2117
 7738 00d5 19       		.uleb128 0x19
 7739 00d6 00       		.byte	0
 7740 00d7 00       		.byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 208


 7741 00d8 11       		.uleb128 0x11
 7742 00d9 2E       		.uleb128 0x2e
 7743 00da 01       		.byte	0x1
 7744 00db 3F       		.uleb128 0x3f
 7745 00dc 19       		.uleb128 0x19
 7746 00dd 03       		.uleb128 0x3
 7747 00de 0E       		.uleb128 0xe
 7748 00df 3A       		.uleb128 0x3a
 7749 00e0 0B       		.uleb128 0xb
 7750 00e1 3B       		.uleb128 0x3b
 7751 00e2 05       		.uleb128 0x5
 7752 00e3 27       		.uleb128 0x27
 7753 00e4 19       		.uleb128 0x19
 7754 00e5 11       		.uleb128 0x11
 7755 00e6 01       		.uleb128 0x1
 7756 00e7 12       		.uleb128 0x12
 7757 00e8 06       		.uleb128 0x6
 7758 00e9 40       		.uleb128 0x40
 7759 00ea 18       		.uleb128 0x18
 7760 00eb 9742     		.uleb128 0x2117
 7761 00ed 19       		.uleb128 0x19
 7762 00ee 01       		.uleb128 0x1
 7763 00ef 13       		.uleb128 0x13
 7764 00f0 00       		.byte	0
 7765 00f1 00       		.byte	0
 7766 00f2 12       		.uleb128 0x12
 7767 00f3 2E       		.uleb128 0x2e
 7768 00f4 00       		.byte	0
 7769 00f5 3F       		.uleb128 0x3f
 7770 00f6 19       		.uleb128 0x19
 7771 00f7 03       		.uleb128 0x3
 7772 00f8 0E       		.uleb128 0xe
 7773 00f9 3A       		.uleb128 0x3a
 7774 00fa 0B       		.uleb128 0xb
 7775 00fb 3B       		.uleb128 0x3b
 7776 00fc 05       		.uleb128 0x5
 7777 00fd 27       		.uleb128 0x27
 7778 00fe 19       		.uleb128 0x19
 7779 00ff 49       		.uleb128 0x49
 7780 0100 13       		.uleb128 0x13
 7781 0101 11       		.uleb128 0x11
 7782 0102 01       		.uleb128 0x1
 7783 0103 12       		.uleb128 0x12
 7784 0104 06       		.uleb128 0x6
 7785 0105 40       		.uleb128 0x40
 7786 0106 18       		.uleb128 0x18
 7787 0107 9742     		.uleb128 0x2117
 7788 0109 19       		.uleb128 0x19
 7789 010a 00       		.byte	0
 7790 010b 00       		.byte	0
 7791 010c 13       		.uleb128 0x13
 7792 010d 898201   		.uleb128 0x4109
 7793 0110 00       		.byte	0
 7794 0111 11       		.uleb128 0x11
 7795 0112 01       		.uleb128 0x1
 7796 0113 31       		.uleb128 0x31
 7797 0114 13       		.uleb128 0x13
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 209


 7798 0115 00       		.byte	0
 7799 0116 00       		.byte	0
 7800 0117 14       		.uleb128 0x14
 7801 0118 2E       		.uleb128 0x2e
 7802 0119 01       		.byte	0x1
 7803 011a 3F       		.uleb128 0x3f
 7804 011b 19       		.uleb128 0x19
 7805 011c 03       		.uleb128 0x3
 7806 011d 0E       		.uleb128 0xe
 7807 011e 3A       		.uleb128 0x3a
 7808 011f 0B       		.uleb128 0xb
 7809 0120 3B       		.uleb128 0x3b
 7810 0121 0B       		.uleb128 0xb
 7811 0122 27       		.uleb128 0x27
 7812 0123 19       		.uleb128 0x19
 7813 0124 11       		.uleb128 0x11
 7814 0125 01       		.uleb128 0x1
 7815 0126 12       		.uleb128 0x12
 7816 0127 06       		.uleb128 0x6
 7817 0128 40       		.uleb128 0x40
 7818 0129 18       		.uleb128 0x18
 7819 012a 9742     		.uleb128 0x2117
 7820 012c 19       		.uleb128 0x19
 7821 012d 01       		.uleb128 0x1
 7822 012e 13       		.uleb128 0x13
 7823 012f 00       		.byte	0
 7824 0130 00       		.byte	0
 7825 0131 15       		.uleb128 0x15
 7826 0132 05       		.uleb128 0x5
 7827 0133 00       		.byte	0
 7828 0134 03       		.uleb128 0x3
 7829 0135 0E       		.uleb128 0xe
 7830 0136 3A       		.uleb128 0x3a
 7831 0137 0B       		.uleb128 0xb
 7832 0138 3B       		.uleb128 0x3b
 7833 0139 05       		.uleb128 0x5
 7834 013a 49       		.uleb128 0x49
 7835 013b 13       		.uleb128 0x13
 7836 013c 02       		.uleb128 0x2
 7837 013d 17       		.uleb128 0x17
 7838 013e 00       		.byte	0
 7839 013f 00       		.byte	0
 7840 0140 16       		.uleb128 0x16
 7841 0141 05       		.uleb128 0x5
 7842 0142 00       		.byte	0
 7843 0143 03       		.uleb128 0x3
 7844 0144 0E       		.uleb128 0xe
 7845 0145 3A       		.uleb128 0x3a
 7846 0146 0B       		.uleb128 0xb
 7847 0147 3B       		.uleb128 0x3b
 7848 0148 05       		.uleb128 0x5
 7849 0149 49       		.uleb128 0x49
 7850 014a 13       		.uleb128 0x13
 7851 014b 02       		.uleb128 0x2
 7852 014c 18       		.uleb128 0x18
 7853 014d 00       		.byte	0
 7854 014e 00       		.byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 210


 7855 014f 17       		.uleb128 0x17
 7856 0150 2E       		.uleb128 0x2e
 7857 0151 01       		.byte	0x1
 7858 0152 3F       		.uleb128 0x3f
 7859 0153 19       		.uleb128 0x19
 7860 0154 03       		.uleb128 0x3
 7861 0155 0E       		.uleb128 0xe
 7862 0156 3A       		.uleb128 0x3a
 7863 0157 0B       		.uleb128 0xb
 7864 0158 3B       		.uleb128 0x3b
 7865 0159 05       		.uleb128 0x5
 7866 015a 27       		.uleb128 0x27
 7867 015b 19       		.uleb128 0x19
 7868 015c 49       		.uleb128 0x49
 7869 015d 13       		.uleb128 0x13
 7870 015e 11       		.uleb128 0x11
 7871 015f 01       		.uleb128 0x1
 7872 0160 12       		.uleb128 0x12
 7873 0161 06       		.uleb128 0x6
 7874 0162 40       		.uleb128 0x40
 7875 0163 18       		.uleb128 0x18
 7876 0164 9742     		.uleb128 0x2117
 7877 0166 19       		.uleb128 0x19
 7878 0167 01       		.uleb128 0x1
 7879 0168 13       		.uleb128 0x13
 7880 0169 00       		.byte	0
 7881 016a 00       		.byte	0
 7882 016b 18       		.uleb128 0x18
 7883 016c 2E       		.uleb128 0x2e
 7884 016d 00       		.byte	0
 7885 016e 3F       		.uleb128 0x3f
 7886 016f 19       		.uleb128 0x19
 7887 0170 03       		.uleb128 0x3
 7888 0171 0E       		.uleb128 0xe
 7889 0172 3A       		.uleb128 0x3a
 7890 0173 0B       		.uleb128 0xb
 7891 0174 3B       		.uleb128 0x3b
 7892 0175 05       		.uleb128 0x5
 7893 0176 27       		.uleb128 0x27
 7894 0177 19       		.uleb128 0x19
 7895 0178 11       		.uleb128 0x11
 7896 0179 01       		.uleb128 0x1
 7897 017a 12       		.uleb128 0x12
 7898 017b 06       		.uleb128 0x6
 7899 017c 40       		.uleb128 0x40
 7900 017d 18       		.uleb128 0x18
 7901 017e 9742     		.uleb128 0x2117
 7902 0180 19       		.uleb128 0x19
 7903 0181 00       		.byte	0
 7904 0182 00       		.byte	0
 7905 0183 19       		.uleb128 0x19
 7906 0184 34       		.uleb128 0x34
 7907 0185 00       		.byte	0
 7908 0186 03       		.uleb128 0x3
 7909 0187 0E       		.uleb128 0xe
 7910 0188 3A       		.uleb128 0x3a
 7911 0189 0B       		.uleb128 0xb
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 211


 7912 018a 3B       		.uleb128 0x3b
 7913 018b 05       		.uleb128 0x5
 7914 018c 49       		.uleb128 0x49
 7915 018d 13       		.uleb128 0x13
 7916 018e 02       		.uleb128 0x2
 7917 018f 18       		.uleb128 0x18
 7918 0190 00       		.byte	0
 7919 0191 00       		.byte	0
 7920 0192 1A       		.uleb128 0x1a
 7921 0193 2E       		.uleb128 0x2e
 7922 0194 01       		.byte	0x1
 7923 0195 3F       		.uleb128 0x3f
 7924 0196 19       		.uleb128 0x19
 7925 0197 03       		.uleb128 0x3
 7926 0198 0E       		.uleb128 0xe
 7927 0199 3A       		.uleb128 0x3a
 7928 019a 0B       		.uleb128 0xb
 7929 019b 3B       		.uleb128 0x3b
 7930 019c 05       		.uleb128 0x5
 7931 019d 27       		.uleb128 0x27
 7932 019e 19       		.uleb128 0x19
 7933 019f 49       		.uleb128 0x49
 7934 01a0 13       		.uleb128 0x13
 7935 01a1 11       		.uleb128 0x11
 7936 01a2 01       		.uleb128 0x1
 7937 01a3 12       		.uleb128 0x12
 7938 01a4 06       		.uleb128 0x6
 7939 01a5 40       		.uleb128 0x40
 7940 01a6 18       		.uleb128 0x18
 7941 01a7 9642     		.uleb128 0x2116
 7942 01a9 19       		.uleb128 0x19
 7943 01aa 01       		.uleb128 0x1
 7944 01ab 13       		.uleb128 0x13
 7945 01ac 00       		.byte	0
 7946 01ad 00       		.byte	0
 7947 01ae 1B       		.uleb128 0x1b
 7948 01af 05       		.uleb128 0x5
 7949 01b0 00       		.byte	0
 7950 01b1 03       		.uleb128 0x3
 7951 01b2 08       		.uleb128 0x8
 7952 01b3 3A       		.uleb128 0x3a
 7953 01b4 0B       		.uleb128 0xb
 7954 01b5 3B       		.uleb128 0x3b
 7955 01b6 05       		.uleb128 0x5
 7956 01b7 49       		.uleb128 0x49
 7957 01b8 13       		.uleb128 0x13
 7958 01b9 02       		.uleb128 0x2
 7959 01ba 17       		.uleb128 0x17
 7960 01bb 00       		.byte	0
 7961 01bc 00       		.byte	0
 7962 01bd 1C       		.uleb128 0x1c
 7963 01be 898201   		.uleb128 0x4109
 7964 01c1 01       		.byte	0x1
 7965 01c2 11       		.uleb128 0x11
 7966 01c3 01       		.uleb128 0x1
 7967 01c4 31       		.uleb128 0x31
 7968 01c5 13       		.uleb128 0x13
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 212


 7969 01c6 00       		.byte	0
 7970 01c7 00       		.byte	0
 7971 01c8 1D       		.uleb128 0x1d
 7972 01c9 8A8201   		.uleb128 0x410a
 7973 01cc 00       		.byte	0
 7974 01cd 02       		.uleb128 0x2
 7975 01ce 18       		.uleb128 0x18
 7976 01cf 9142     		.uleb128 0x2111
 7977 01d1 18       		.uleb128 0x18
 7978 01d2 00       		.byte	0
 7979 01d3 00       		.byte	0
 7980 01d4 1E       		.uleb128 0x1e
 7981 01d5 898201   		.uleb128 0x4109
 7982 01d8 01       		.byte	0x1
 7983 01d9 11       		.uleb128 0x11
 7984 01da 01       		.uleb128 0x1
 7985 01db 31       		.uleb128 0x31
 7986 01dc 13       		.uleb128 0x13
 7987 01dd 01       		.uleb128 0x1
 7988 01de 13       		.uleb128 0x13
 7989 01df 00       		.byte	0
 7990 01e0 00       		.byte	0
 7991 01e1 1F       		.uleb128 0x1f
 7992 01e2 2E       		.uleb128 0x2e
 7993 01e3 01       		.byte	0x1
 7994 01e4 03       		.uleb128 0x3
 7995 01e5 0E       		.uleb128 0xe
 7996 01e6 3A       		.uleb128 0x3a
 7997 01e7 0B       		.uleb128 0xb
 7998 01e8 3B       		.uleb128 0x3b
 7999 01e9 05       		.uleb128 0x5
 8000 01ea 27       		.uleb128 0x27
 8001 01eb 19       		.uleb128 0x19
 8002 01ec 49       		.uleb128 0x49
 8003 01ed 13       		.uleb128 0x13
 8004 01ee 11       		.uleb128 0x11
 8005 01ef 01       		.uleb128 0x1
 8006 01f0 12       		.uleb128 0x12
 8007 01f1 06       		.uleb128 0x6
 8008 01f2 40       		.uleb128 0x40
 8009 01f3 18       		.uleb128 0x18
 8010 01f4 9742     		.uleb128 0x2117
 8011 01f6 19       		.uleb128 0x19
 8012 01f7 01       		.uleb128 0x1
 8013 01f8 13       		.uleb128 0x13
 8014 01f9 00       		.byte	0
 8015 01fa 00       		.byte	0
 8016 01fb 20       		.uleb128 0x20
 8017 01fc 34       		.uleb128 0x34
 8018 01fd 00       		.byte	0
 8019 01fe 03       		.uleb128 0x3
 8020 01ff 0E       		.uleb128 0xe
 8021 0200 3A       		.uleb128 0x3a
 8022 0201 0B       		.uleb128 0xb
 8023 0202 3B       		.uleb128 0x3b
 8024 0203 05       		.uleb128 0x5
 8025 0204 49       		.uleb128 0x49
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 213


 8026 0205 13       		.uleb128 0x13
 8027 0206 1C       		.uleb128 0x1c
 8028 0207 06       		.uleb128 0x6
 8029 0208 00       		.byte	0
 8030 0209 00       		.byte	0
 8031 020a 21       		.uleb128 0x21
 8032 020b 34       		.uleb128 0x34
 8033 020c 00       		.byte	0
 8034 020d 03       		.uleb128 0x3
 8035 020e 08       		.uleb128 0x8
 8036 020f 3A       		.uleb128 0x3a
 8037 0210 0B       		.uleb128 0xb
 8038 0211 3B       		.uleb128 0x3b
 8039 0212 0B       		.uleb128 0xb
 8040 0213 49       		.uleb128 0x49
 8041 0214 13       		.uleb128 0x13
 8042 0215 02       		.uleb128 0x2
 8043 0216 17       		.uleb128 0x17
 8044 0217 00       		.byte	0
 8045 0218 00       		.byte	0
 8046 0219 22       		.uleb128 0x22
 8047 021a 34       		.uleb128 0x34
 8048 021b 00       		.byte	0
 8049 021c 03       		.uleb128 0x3
 8050 021d 0E       		.uleb128 0xe
 8051 021e 3A       		.uleb128 0x3a
 8052 021f 0B       		.uleb128 0xb
 8053 0220 3B       		.uleb128 0x3b
 8054 0221 0B       		.uleb128 0xb
 8055 0222 49       		.uleb128 0x49
 8056 0223 13       		.uleb128 0x13
 8057 0224 02       		.uleb128 0x2
 8058 0225 17       		.uleb128 0x17
 8059 0226 00       		.byte	0
 8060 0227 00       		.byte	0
 8061 0228 23       		.uleb128 0x23
 8062 0229 34       		.uleb128 0x34
 8063 022a 00       		.byte	0
 8064 022b 03       		.uleb128 0x3
 8065 022c 0E       		.uleb128 0xe
 8066 022d 3A       		.uleb128 0x3a
 8067 022e 0B       		.uleb128 0xb
 8068 022f 3B       		.uleb128 0x3b
 8069 0230 0B       		.uleb128 0xb
 8070 0231 49       		.uleb128 0x49
 8071 0232 13       		.uleb128 0x13
 8072 0233 02       		.uleb128 0x2
 8073 0234 18       		.uleb128 0x18
 8074 0235 00       		.byte	0
 8075 0236 00       		.byte	0
 8076 0237 24       		.uleb128 0x24
 8077 0238 2E       		.uleb128 0x2e
 8078 0239 01       		.byte	0x1
 8079 023a 3F       		.uleb128 0x3f
 8080 023b 19       		.uleb128 0x19
 8081 023c 03       		.uleb128 0x3
 8082 023d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 214


 8083 023e 3A       		.uleb128 0x3a
 8084 023f 0B       		.uleb128 0xb
 8085 0240 3B       		.uleb128 0x3b
 8086 0241 05       		.uleb128 0x5
 8087 0242 27       		.uleb128 0x27
 8088 0243 19       		.uleb128 0x19
 8089 0244 11       		.uleb128 0x11
 8090 0245 01       		.uleb128 0x1
 8091 0246 12       		.uleb128 0x12
 8092 0247 06       		.uleb128 0x6
 8093 0248 40       		.uleb128 0x40
 8094 0249 18       		.uleb128 0x18
 8095 024a 9642     		.uleb128 0x2116
 8096 024c 19       		.uleb128 0x19
 8097 024d 01       		.uleb128 0x1
 8098 024e 13       		.uleb128 0x13
 8099 024f 00       		.byte	0
 8100 0250 00       		.byte	0
 8101 0251 25       		.uleb128 0x25
 8102 0252 2E       		.uleb128 0x2e
 8103 0253 01       		.byte	0x1
 8104 0254 03       		.uleb128 0x3
 8105 0255 0E       		.uleb128 0xe
 8106 0256 3A       		.uleb128 0x3a
 8107 0257 0B       		.uleb128 0xb
 8108 0258 3B       		.uleb128 0x3b
 8109 0259 05       		.uleb128 0x5
 8110 025a 27       		.uleb128 0x27
 8111 025b 19       		.uleb128 0x19
 8112 025c 11       		.uleb128 0x11
 8113 025d 01       		.uleb128 0x1
 8114 025e 12       		.uleb128 0x12
 8115 025f 06       		.uleb128 0x6
 8116 0260 40       		.uleb128 0x40
 8117 0261 18       		.uleb128 0x18
 8118 0262 9642     		.uleb128 0x2116
 8119 0264 19       		.uleb128 0x19
 8120 0265 01       		.uleb128 0x1
 8121 0266 13       		.uleb128 0x13
 8122 0267 00       		.byte	0
 8123 0268 00       		.byte	0
 8124 0269 26       		.uleb128 0x26
 8125 026a 34       		.uleb128 0x34
 8126 026b 00       		.byte	0
 8127 026c 03       		.uleb128 0x3
 8128 026d 0E       		.uleb128 0xe
 8129 026e 3A       		.uleb128 0x3a
 8130 026f 0B       		.uleb128 0xb
 8131 0270 3B       		.uleb128 0x3b
 8132 0271 0B       		.uleb128 0xb
 8133 0272 49       		.uleb128 0x49
 8134 0273 13       		.uleb128 0x13
 8135 0274 3F       		.uleb128 0x3f
 8136 0275 19       		.uleb128 0x19
 8137 0276 02       		.uleb128 0x2
 8138 0277 18       		.uleb128 0x18
 8139 0278 00       		.byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 215


 8140 0279 00       		.byte	0
 8141 027a 27       		.uleb128 0x27
 8142 027b 26       		.uleb128 0x26
 8143 027c 00       		.byte	0
 8144 027d 49       		.uleb128 0x49
 8145 027e 13       		.uleb128 0x13
 8146 027f 00       		.byte	0
 8147 0280 00       		.byte	0
 8148 0281 28       		.uleb128 0x28
 8149 0282 2E       		.uleb128 0x2e
 8150 0283 00       		.byte	0
 8151 0284 3F       		.uleb128 0x3f
 8152 0285 19       		.uleb128 0x19
 8153 0286 3C       		.uleb128 0x3c
 8154 0287 19       		.uleb128 0x19
 8155 0288 6E       		.uleb128 0x6e
 8156 0289 0E       		.uleb128 0xe
 8157 028a 03       		.uleb128 0x3
 8158 028b 0E       		.uleb128 0xe
 8159 028c 3A       		.uleb128 0x3a
 8160 028d 0B       		.uleb128 0xb
 8161 028e 3B       		.uleb128 0x3b
 8162 028f 0B       		.uleb128 0xb
 8163 0290 00       		.byte	0
 8164 0291 00       		.byte	0
 8165 0292 00       		.byte	0
 8166              		.section	.debug_loc,"",%progbits
 8167              	.Ldebug_loc0:
 8168              	.LLST0:
 8169 0000 04000000 		.4byte	.LVL0
 8170 0004 0A000000 		.4byte	.LVL1
 8171 0008 0500     		.2byte	0x5
 8172 000a 73       		.byte	0x73
 8173 000b 00       		.sleb128 0
 8174 000c 32       		.byte	0x32
 8175 000d 25       		.byte	0x25
 8176 000e 9F       		.byte	0x9f
 8177 000f 14000000 		.4byte	.LVL2
 8178 0013 16000000 		.4byte	.LVL3
 8179 0017 0500     		.2byte	0x5
 8180 0019 73       		.byte	0x73
 8181 001a 00       		.sleb128 0
 8182 001b 32       		.byte	0x32
 8183 001c 25       		.byte	0x25
 8184 001d 9F       		.byte	0x9f
 8185 001e 00000000 		.4byte	0
 8186 0022 00000000 		.4byte	0
 8187              	.LLST1:
 8188 0026 00000000 		.4byte	.LVL4
 8189 002a 04000000 		.4byte	.LVL5
 8190 002e 0200     		.2byte	0x2
 8191 0030 30       		.byte	0x30
 8192 0031 9F       		.byte	0x9f
 8193 0032 04000000 		.4byte	.LVL5
 8194 0036 16000000 		.4byte	.LVL6
 8195 003a 0100     		.2byte	0x1
 8196 003c 53       		.byte	0x53
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 216


 8197 003d 16000000 		.4byte	.LVL6
 8198 0041 18000000 		.4byte	.LVL7
 8199 0045 0300     		.2byte	0x3
 8200 0047 73       		.byte	0x73
 8201 0048 7D       		.sleb128 -3
 8202 0049 9F       		.byte	0x9f
 8203 004a 18000000 		.4byte	.LVL7
 8204 004e 20000000 		.4byte	.LVL9
 8205 0052 0100     		.2byte	0x1
 8206 0054 53       		.byte	0x53
 8207 0055 00000000 		.4byte	0
 8208 0059 00000000 		.4byte	0
 8209              	.LLST2:
 8210 005d 00000000 		.4byte	.LVL4
 8211 0061 16000000 		.4byte	.LVL6
 8212 0065 0200     		.2byte	0x2
 8213 0067 33       		.byte	0x33
 8214 0068 9F       		.byte	0x9f
 8215 0069 16000000 		.4byte	.LVL6
 8216 006d 18000000 		.4byte	.LVL7
 8217 0071 0100     		.2byte	0x1
 8218 0073 53       		.byte	0x53
 8219 0074 18000000 		.4byte	.LVL7
 8220 0078 20000000 		.4byte	.LVL9
 8221 007c 0200     		.2byte	0x2
 8222 007e 33       		.byte	0x33
 8223 007f 9F       		.byte	0x9f
 8224 0080 20000000 		.4byte	.LVL9
 8225 0084 2E000000 		.4byte	.LVL11
 8226 0088 0100     		.2byte	0x1
 8227 008a 53       		.byte	0x53
 8228 008b 38000000 		.4byte	.LVL13
 8229 008f 3E000000 		.4byte	.LVL14
 8230 0093 0100     		.2byte	0x1
 8231 0095 53       		.byte	0x53
 8232 0096 56000000 		.4byte	.LVL16
 8233 009a 5C000000 		.4byte	.LVL17
 8234 009e 0100     		.2byte	0x1
 8235 00a0 53       		.byte	0x53
 8236 00a1 66000000 		.4byte	.LVL19
 8237 00a5 6C000000 		.4byte	.LVL20
 8238 00a9 0100     		.2byte	0x1
 8239 00ab 53       		.byte	0x53
 8240 00ac 00000000 		.4byte	0
 8241 00b0 00000000 		.4byte	0
 8242              	.LLST3:
 8243 00b4 24000000 		.4byte	.LVL10
 8244 00b8 34000000 		.4byte	.LVL12
 8245 00bc 0500     		.2byte	0x5
 8246 00be 72       		.byte	0x72
 8247 00bf 00       		.sleb128 0
 8248 00c0 32       		.byte	0x32
 8249 00c1 25       		.byte	0x25
 8250 00c2 9F       		.byte	0x9f
 8251 00c3 38000000 		.4byte	.LVL13
 8252 00c7 44000000 		.4byte	.LVL15
 8253 00cb 0500     		.2byte	0x5
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 217


 8254 00cd 72       		.byte	0x72
 8255 00ce 00       		.sleb128 0
 8256 00cf 32       		.byte	0x32
 8257 00d0 25       		.byte	0x25
 8258 00d1 9F       		.byte	0x9f
 8259 00d2 56000000 		.4byte	.LVL16
 8260 00d6 62000000 		.4byte	.LVL18
 8261 00da 0500     		.2byte	0x5
 8262 00dc 72       		.byte	0x72
 8263 00dd 00       		.sleb128 0
 8264 00de 32       		.byte	0x32
 8265 00df 25       		.byte	0x25
 8266 00e0 9F       		.byte	0x9f
 8267 00e1 66000000 		.4byte	.LVL19
 8268 00e5 72000000 		.4byte	.LVL21
 8269 00e9 0500     		.2byte	0x5
 8270 00eb 72       		.byte	0x72
 8271 00ec 00       		.sleb128 0
 8272 00ed 32       		.byte	0x32
 8273 00ee 25       		.byte	0x25
 8274 00ef 9F       		.byte	0x9f
 8275 00f0 00000000 		.4byte	0
 8276 00f4 00000000 		.4byte	0
 8277              	.LLST4:
 8278 00f8 00000000 		.4byte	.LVL22
 8279 00fc 04000000 		.4byte	.LVL23
 8280 0100 0200     		.2byte	0x2
 8281 0102 30       		.byte	0x30
 8282 0103 9F       		.byte	0x9f
 8283 0104 04000000 		.4byte	.LVL23
 8284 0108 16000000 		.4byte	.LVL24
 8285 010c 0100     		.2byte	0x1
 8286 010e 53       		.byte	0x53
 8287 010f 16000000 		.4byte	.LVL24
 8288 0113 18000000 		.4byte	.LVL25
 8289 0117 0300     		.2byte	0x3
 8290 0119 73       		.byte	0x73
 8291 011a 7D       		.sleb128 -3
 8292 011b 9F       		.byte	0x9f
 8293 011c 18000000 		.4byte	.LVL25
 8294 0120 20000000 		.4byte	.LVL27
 8295 0124 0100     		.2byte	0x1
 8296 0126 53       		.byte	0x53
 8297 0127 00000000 		.4byte	0
 8298 012b 00000000 		.4byte	0
 8299              	.LLST5:
 8300 012f 00000000 		.4byte	.LVL22
 8301 0133 16000000 		.4byte	.LVL24
 8302 0137 0200     		.2byte	0x2
 8303 0139 33       		.byte	0x33
 8304 013a 9F       		.byte	0x9f
 8305 013b 16000000 		.4byte	.LVL24
 8306 013f 18000000 		.4byte	.LVL25
 8307 0143 0100     		.2byte	0x1
 8308 0145 53       		.byte	0x53
 8309 0146 18000000 		.4byte	.LVL25
 8310 014a 20000000 		.4byte	.LVL27
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 218


 8311 014e 0200     		.2byte	0x2
 8312 0150 33       		.byte	0x33
 8313 0151 9F       		.byte	0x9f
 8314 0152 20000000 		.4byte	.LVL27
 8315 0156 30000000 		.4byte	.LVL28
 8316 015a 0100     		.2byte	0x1
 8317 015c 53       		.byte	0x53
 8318 015d 30000000 		.4byte	.LVL28
 8319 0161 32000000 		.4byte	.LVL29
 8320 0165 0700     		.2byte	0x7
 8321 0167 73       		.byte	0x73
 8322 0168 B3998080 		.sleb128 -268432205
 8322      7F
 8323 016d 9F       		.byte	0x9f
 8324 016e 00000000 		.4byte	0
 8325 0172 00000000 		.4byte	0
 8326              	.LLST6:
 8327 0176 02000000 		.4byte	.LVL32
 8328 017a 06000000 		.4byte	.LVL33
 8329 017e 0200     		.2byte	0x2
 8330 0180 30       		.byte	0x30
 8331 0181 9F       		.byte	0x9f
 8332 0182 06000000 		.4byte	.LVL33
 8333 0186 18000000 		.4byte	.LVL34
 8334 018a 0100     		.2byte	0x1
 8335 018c 53       		.byte	0x53
 8336 018d 18000000 		.4byte	.LVL34
 8337 0191 1A000000 		.4byte	.LVL35
 8338 0195 0300     		.2byte	0x3
 8339 0197 73       		.byte	0x73
 8340 0198 7D       		.sleb128 -3
 8341 0199 9F       		.byte	0x9f
 8342 019a 1A000000 		.4byte	.LVL35
 8343 019e 22000000 		.4byte	.LVL37
 8344 01a2 0100     		.2byte	0x1
 8345 01a4 53       		.byte	0x53
 8346 01a5 00000000 		.4byte	0
 8347 01a9 00000000 		.4byte	0
 8348              	.LLST7:
 8349 01ad 02000000 		.4byte	.LVL32
 8350 01b1 18000000 		.4byte	.LVL34
 8351 01b5 0200     		.2byte	0x2
 8352 01b7 33       		.byte	0x33
 8353 01b8 9F       		.byte	0x9f
 8354 01b9 18000000 		.4byte	.LVL34
 8355 01bd 1A000000 		.4byte	.LVL35
 8356 01c1 0100     		.2byte	0x1
 8357 01c3 53       		.byte	0x53
 8358 01c4 1A000000 		.4byte	.LVL35
 8359 01c8 22000000 		.4byte	.LVL37
 8360 01cc 0200     		.2byte	0x2
 8361 01ce 33       		.byte	0x33
 8362 01cf 9F       		.byte	0x9f
 8363 01d0 22000000 		.4byte	.LVL37
 8364 01d4 4A000000 		.4byte	.LVL38
 8365 01d8 0100     		.2byte	0x1
 8366 01da 53       		.byte	0x53
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 219


 8367 01db 4A000000 		.4byte	.LVL38
 8368 01df 4C000000 		.4byte	.LVL39
 8369 01e3 0700     		.2byte	0x7
 8370 01e5 73       		.byte	0x73
 8371 01e6 B3998080 		.sleb128 -268432205
 8371      7F
 8372 01eb 9F       		.byte	0x9f
 8373 01ec 00000000 		.4byte	0
 8374 01f0 00000000 		.4byte	0
 8375              	.LLST8:
 8376 01f4 00000000 		.4byte	.LVL42
 8377 01f8 07000000 		.4byte	.LVL43-1
 8378 01fc 0100     		.2byte	0x1
 8379 01fe 50       		.byte	0x50
 8380 01ff 07000000 		.4byte	.LVL43-1
 8381 0203 26000000 		.4byte	.LVL45
 8382 0207 0100     		.2byte	0x1
 8383 0209 54       		.byte	0x54
 8384 020a 26000000 		.4byte	.LVL45
 8385 020e 2A000000 		.4byte	.LVL47
 8386 0212 0400     		.2byte	0x4
 8387 0214 F3       		.byte	0xf3
 8388 0215 01       		.uleb128 0x1
 8389 0216 50       		.byte	0x50
 8390 0217 9F       		.byte	0x9f
 8391 0218 2A000000 		.4byte	.LVL47
 8392 021c 2E000000 		.4byte	.LVL48
 8393 0220 0100     		.2byte	0x1
 8394 0222 54       		.byte	0x54
 8395 0223 2E000000 		.4byte	.LVL48
 8396 0227 44000000 		.4byte	.LFE11
 8397 022b 0400     		.2byte	0x4
 8398 022d F3       		.byte	0xf3
 8399 022e 01       		.uleb128 0x1
 8400 022f 50       		.byte	0x50
 8401 0230 9F       		.byte	0x9f
 8402 0231 00000000 		.4byte	0
 8403 0235 00000000 		.4byte	0
 8404              	.LLST9:
 8405 0239 08000000 		.4byte	.LVL43
 8406 023d 37000000 		.4byte	.LVL50-1
 8407 0241 0100     		.2byte	0x1
 8408 0243 50       		.byte	0x50
 8409 0244 00000000 		.4byte	0
 8410 0248 00000000 		.4byte	0
 8411              	.LLST10:
 8412 024c 10000000 		.4byte	.LVL44
 8413 0250 37000000 		.4byte	.LVL50-1
 8414 0254 0100     		.2byte	0x1
 8415 0256 53       		.byte	0x53
 8416 0257 00000000 		.4byte	0
 8417 025b 00000000 		.4byte	0
 8418              	.LLST11:
 8419 025f 06000000 		.4byte	.LVL52
 8420 0263 29000000 		.4byte	.LVL56-1
 8421 0267 0100     		.2byte	0x1
 8422 0269 50       		.byte	0x50
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 220


 8423 026a 00000000 		.4byte	0
 8424 026e 00000000 		.4byte	0
 8425              	.LLST12:
 8426 0272 1C000000 		.4byte	.LVL53
 8427 0276 1E000000 		.4byte	.LVL54
 8428 027a 0100     		.2byte	0x1
 8429 027c 54       		.byte	0x54
 8430 027d 26000000 		.4byte	.LVL55
 8431 0281 2C000000 		.4byte	.LVL57
 8432 0285 0100     		.2byte	0x1
 8433 0287 54       		.byte	0x54
 8434 0288 2C000000 		.4byte	.LVL57
 8435 028c 34000000 		.4byte	.LFE13
 8436 0290 0100     		.2byte	0x1
 8437 0292 50       		.byte	0x50
 8438 0293 00000000 		.4byte	0
 8439 0297 00000000 		.4byte	0
 8440              	.LLST13:
 8441 029b 00000000 		.4byte	.LVL58
 8442 029f 07000000 		.4byte	.LVL59-1
 8443 02a3 0100     		.2byte	0x1
 8444 02a5 50       		.byte	0x50
 8445 02a6 07000000 		.4byte	.LVL59-1
 8446 02aa 14000000 		.4byte	.LVL60
 8447 02ae 0100     		.2byte	0x1
 8448 02b0 54       		.byte	0x54
 8449 02b1 14000000 		.4byte	.LVL60
 8450 02b5 30000000 		.4byte	.LFE14
 8451 02b9 0400     		.2byte	0x4
 8452 02bb F3       		.byte	0xf3
 8453 02bc 01       		.uleb128 0x1
 8454 02bd 50       		.byte	0x50
 8455 02be 9F       		.byte	0x9f
 8456 02bf 00000000 		.4byte	0
 8457 02c3 00000000 		.4byte	0
 8458              	.LLST14:
 8459 02c7 08000000 		.4byte	.LVL59
 8460 02cb 23000000 		.4byte	.LVL61-1
 8461 02cf 0100     		.2byte	0x1
 8462 02d1 50       		.byte	0x50
 8463 02d2 00000000 		.4byte	0
 8464 02d6 00000000 		.4byte	0
 8465              	.LLST15:
 8466 02da 00000000 		.4byte	.LVL63
 8467 02de 11000000 		.4byte	.LVL64-1
 8468 02e2 0100     		.2byte	0x1
 8469 02e4 50       		.byte	0x50
 8470 02e5 11000000 		.4byte	.LVL64-1
 8471 02e9 1E000000 		.4byte	.LVL66
 8472 02ed 0100     		.2byte	0x1
 8473 02ef 57       		.byte	0x57
 8474 02f0 1E000000 		.4byte	.LVL66
 8475 02f4 60000000 		.4byte	.LFE19
 8476 02f8 0400     		.2byte	0x4
 8477 02fa F3       		.byte	0xf3
 8478 02fb 01       		.uleb128 0x1
 8479 02fc 50       		.byte	0x50
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 221


 8480 02fd 9F       		.byte	0x9f
 8481 02fe 00000000 		.4byte	0
 8482 0302 00000000 		.4byte	0
 8483              	.LLST16:
 8484 0306 00000000 		.4byte	.LVL63
 8485 030a 11000000 		.4byte	.LVL64-1
 8486 030e 0100     		.2byte	0x1
 8487 0310 51       		.byte	0x51
 8488 0311 11000000 		.4byte	.LVL64-1
 8489 0315 24000000 		.4byte	.LVL68
 8490 0319 0100     		.2byte	0x1
 8491 031b 55       		.byte	0x55
 8492 031c 24000000 		.4byte	.LVL68
 8493 0320 60000000 		.4byte	.LFE19
 8494 0324 0400     		.2byte	0x4
 8495 0326 F3       		.byte	0xf3
 8496 0327 01       		.uleb128 0x1
 8497 0328 51       		.byte	0x51
 8498 0329 9F       		.byte	0x9f
 8499 032a 00000000 		.4byte	0
 8500 032e 00000000 		.4byte	0
 8501              	.LLST17:
 8502 0332 00000000 		.4byte	.LVL63
 8503 0336 11000000 		.4byte	.LVL64-1
 8504 033a 0100     		.2byte	0x1
 8505 033c 52       		.byte	0x52
 8506 033d 11000000 		.4byte	.LVL64-1
 8507 0341 34000000 		.4byte	.LVL71
 8508 0345 0100     		.2byte	0x1
 8509 0347 56       		.byte	0x56
 8510 0348 34000000 		.4byte	.LVL71
 8511 034c 60000000 		.4byte	.LFE19
 8512 0350 0400     		.2byte	0x4
 8513 0352 F3       		.byte	0xf3
 8514 0353 01       		.uleb128 0x1
 8515 0354 52       		.byte	0x52
 8516 0355 9F       		.byte	0x9f
 8517 0356 00000000 		.4byte	0
 8518 035a 00000000 		.4byte	0
 8519              	.LLST18:
 8520 035e 00000000 		.4byte	.LVL63
 8521 0362 11000000 		.4byte	.LVL64-1
 8522 0366 0100     		.2byte	0x1
 8523 0368 53       		.byte	0x53
 8524 0369 11000000 		.4byte	.LVL64-1
 8525 036d 52000000 		.4byte	.LVL76
 8526 0371 0100     		.2byte	0x1
 8527 0373 58       		.byte	0x58
 8528 0374 52000000 		.4byte	.LVL76
 8529 0378 60000000 		.4byte	.LFE19
 8530 037c 0400     		.2byte	0x4
 8531 037e F3       		.byte	0xf3
 8532 037f 01       		.uleb128 0x1
 8533 0380 53       		.byte	0x53
 8534 0381 9F       		.byte	0x9f
 8535 0382 00000000 		.4byte	0
 8536 0386 00000000 		.4byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 222


 8537              	.LLST19:
 8538 038a 12000000 		.4byte	.LVL64
 8539 038e 51000000 		.4byte	.LVL75-1
 8540 0392 0100     		.2byte	0x1
 8541 0394 50       		.byte	0x50
 8542 0395 00000000 		.4byte	0
 8543 0399 00000000 		.4byte	0
 8544              	.LLST20:
 8545 039d 1A000000 		.4byte	.LVL65
 8546 03a1 20000000 		.4byte	.LVL67
 8547 03a5 0100     		.2byte	0x1
 8548 03a7 53       		.byte	0x53
 8549 03a8 20000000 		.4byte	.LVL67
 8550 03ac 28000000 		.4byte	.LVL69
 8551 03b0 0100     		.2byte	0x1
 8552 03b2 57       		.byte	0x57
 8553 03b3 28000000 		.4byte	.LVL69
 8554 03b7 32000000 		.4byte	.LVL70
 8555 03bb 0100     		.2byte	0x1
 8556 03bd 55       		.byte	0x55
 8557 03be 32000000 		.4byte	.LVL70
 8558 03c2 40000000 		.4byte	.LVL73
 8559 03c6 0100     		.2byte	0x1
 8560 03c8 53       		.byte	0x53
 8561 03c9 40000000 		.4byte	.LVL73
 8562 03cd 4C000000 		.4byte	.LVL74
 8563 03d1 0100     		.2byte	0x1
 8564 03d3 54       		.byte	0x54
 8565 03d4 4C000000 		.4byte	.LVL74
 8566 03d8 51000000 		.4byte	.LVL75-1
 8567 03dc 0100     		.2byte	0x1
 8568 03de 53       		.byte	0x53
 8569 03df 00000000 		.4byte	0
 8570 03e3 00000000 		.4byte	0
 8571              	.LLST21:
 8572 03e7 00000000 		.4byte	.LVL77
 8573 03eb 8C000000 		.4byte	.LVL82
 8574 03ef 0100     		.2byte	0x1
 8575 03f1 50       		.byte	0x50
 8576 03f2 8C000000 		.4byte	.LVL82
 8577 03f6 96000000 		.4byte	.LVL84
 8578 03fa 0100     		.2byte	0x1
 8579 03fc 56       		.byte	0x56
 8580 03fd 96000000 		.4byte	.LVL84
 8581 0401 9A000000 		.4byte	.LVL85
 8582 0405 0100     		.2byte	0x1
 8583 0407 50       		.byte	0x50
 8584 0408 9A000000 		.4byte	.LVL85
 8585 040c 28010000 		.4byte	.LVL103
 8586 0410 0100     		.2byte	0x1
 8587 0412 56       		.byte	0x56
 8588 0413 28010000 		.4byte	.LVL103
 8589 0417 32010000 		.4byte	.LVL104
 8590 041b 0100     		.2byte	0x1
 8591 041d 50       		.byte	0x50
 8592 041e 32010000 		.4byte	.LVL104
 8593 0422 36010000 		.4byte	.LVL107
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 223


 8594 0426 0100     		.2byte	0x1
 8595 0428 56       		.byte	0x56
 8596 0429 36010000 		.4byte	.LVL107
 8597 042d 74010000 		.4byte	.LFE20
 8598 0431 0400     		.2byte	0x4
 8599 0433 F3       		.byte	0xf3
 8600 0434 01       		.uleb128 0x1
 8601 0435 50       		.byte	0x50
 8602 0436 9F       		.byte	0x9f
 8603 0437 00000000 		.4byte	0
 8604 043b 00000000 		.4byte	0
 8605              	.LLST22:
 8606 043f 00000000 		.4byte	.LVL77
 8607 0443 8A000000 		.4byte	.LVL81
 8608 0447 0100     		.2byte	0x1
 8609 0449 51       		.byte	0x51
 8610 044a 8A000000 		.4byte	.LVL81
 8611 044e 96000000 		.4byte	.LVL84
 8612 0452 0100     		.2byte	0x1
 8613 0454 54       		.byte	0x54
 8614 0455 96000000 		.4byte	.LVL84
 8615 0459 9A000000 		.4byte	.LVL85
 8616 045d 0100     		.2byte	0x1
 8617 045f 51       		.byte	0x51
 8618 0460 9A000000 		.4byte	.LVL85
 8619 0464 9C000000 		.4byte	.LVL86
 8620 0468 0100     		.2byte	0x1
 8621 046a 54       		.byte	0x54
 8622 046b 9C000000 		.4byte	.LVL86
 8623 046f 28010000 		.4byte	.LVL103
 8624 0473 0400     		.2byte	0x4
 8625 0475 F3       		.byte	0xf3
 8626 0476 01       		.uleb128 0x1
 8627 0477 51       		.byte	0x51
 8628 0478 9F       		.byte	0x9f
 8629 0479 28010000 		.4byte	.LVL103
 8630 047d 32010000 		.4byte	.LVL104
 8631 0481 0100     		.2byte	0x1
 8632 0483 51       		.byte	0x51
 8633 0484 32010000 		.4byte	.LVL104
 8634 0488 74010000 		.4byte	.LFE20
 8635 048c 0400     		.2byte	0x4
 8636 048e F3       		.byte	0xf3
 8637 048f 01       		.uleb128 0x1
 8638 0490 51       		.byte	0x51
 8639 0491 9F       		.byte	0x9f
 8640 0492 00000000 		.4byte	0
 8641 0496 00000000 		.4byte	0
 8642              	.LLST23:
 8643 049a 00000000 		.4byte	.LVL77
 8644 049e 8F000000 		.4byte	.LVL83-1
 8645 04a2 0100     		.2byte	0x1
 8646 04a4 52       		.byte	0x52
 8647 04a5 8F000000 		.4byte	.LVL83-1
 8648 04a9 96000000 		.4byte	.LVL84
 8649 04ad 0100     		.2byte	0x1
 8650 04af 55       		.byte	0x55
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 224


 8651 04b0 96000000 		.4byte	.LVL84
 8652 04b4 9A000000 		.4byte	.LVL85
 8653 04b8 0100     		.2byte	0x1
 8654 04ba 52       		.byte	0x52
 8655 04bb 9A000000 		.4byte	.LVL85
 8656 04bf 28010000 		.4byte	.LVL103
 8657 04c3 0100     		.2byte	0x1
 8658 04c5 55       		.byte	0x55
 8659 04c6 28010000 		.4byte	.LVL103
 8660 04ca 32010000 		.4byte	.LVL104
 8661 04ce 0100     		.2byte	0x1
 8662 04d0 52       		.byte	0x52
 8663 04d1 32010000 		.4byte	.LVL104
 8664 04d5 36010000 		.4byte	.LVL106
 8665 04d9 0100     		.2byte	0x1
 8666 04db 55       		.byte	0x55
 8667 04dc 36010000 		.4byte	.LVL106
 8668 04e0 74010000 		.4byte	.LFE20
 8669 04e4 0400     		.2byte	0x4
 8670 04e6 F3       		.byte	0xf3
 8671 04e7 01       		.uleb128 0x1
 8672 04e8 52       		.byte	0x52
 8673 04e9 9F       		.byte	0x9f
 8674 04ea 00000000 		.4byte	0
 8675 04ee 00000000 		.4byte	0
 8676              	.LLST24:
 8677 04f2 00000000 		.4byte	.LVL77
 8678 04f6 12000000 		.4byte	.LVL79
 8679 04fa 0100     		.2byte	0x1
 8680 04fc 53       		.byte	0x53
 8681 04fd 12000000 		.4byte	.LVL79
 8682 0501 36010000 		.4byte	.LVL108
 8683 0505 0100     		.2byte	0x1
 8684 0507 57       		.byte	0x57
 8685 0508 36010000 		.4byte	.LVL108
 8686 050c 74010000 		.4byte	.LFE20
 8687 0510 0400     		.2byte	0x4
 8688 0512 F3       		.byte	0xf3
 8689 0513 01       		.uleb128 0x1
 8690 0514 53       		.byte	0x53
 8691 0515 9F       		.byte	0x9f
 8692 0516 00000000 		.4byte	0
 8693 051a 00000000 		.4byte	0
 8694              	.LLST25:
 8695 051e 10000000 		.4byte	.LVL78
 8696 0522 E0000000 		.4byte	.LVL96
 8697 0526 0200     		.2byte	0x2
 8698 0528 30       		.byte	0x30
 8699 0529 9F       		.byte	0x9f
 8700 052a E0000000 		.4byte	.LVL96
 8701 052e 28010000 		.4byte	.LVL103
 8702 0532 0100     		.2byte	0x1
 8703 0534 54       		.byte	0x54
 8704 0535 28010000 		.4byte	.LVL103
 8705 0539 32010000 		.4byte	.LVL104
 8706 053d 0200     		.2byte	0x2
 8707 053f 30       		.byte	0x30
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 225


 8708 0540 9F       		.byte	0x9f
 8709 0541 32010000 		.4byte	.LVL104
 8710 0545 36010000 		.4byte	.LVL105
 8711 0549 0100     		.2byte	0x1
 8712 054b 54       		.byte	0x54
 8713 054c 36010000 		.4byte	.LVL105
 8714 0550 74010000 		.4byte	.LFE20
 8715 0554 0100     		.2byte	0x1
 8716 0556 50       		.byte	0x50
 8717 0557 00000000 		.4byte	0
 8718 055b 00000000 		.4byte	0
 8719              	.LLST26:
 8720 055f 9A000000 		.4byte	.LVL85
 8721 0563 1A010000 		.4byte	.LVL100
 8722 0567 0200     		.2byte	0x2
 8723 0569 91       		.byte	0x91
 8724 056a 60       		.sleb128 -32
 8725 056b 1C010000 		.4byte	.LVL101
 8726 056f 26010000 		.4byte	.LVL102
 8727 0573 0200     		.2byte	0x2
 8728 0575 91       		.byte	0x91
 8729 0576 60       		.sleb128 -32
 8730 0577 00000000 		.4byte	0
 8731 057b 00000000 		.4byte	0
 8732              	.LLST27:
 8733 057f 82000000 		.4byte	.LVL80
 8734 0583 1A010000 		.4byte	.LVL100
 8735 0587 0200     		.2byte	0x2
 8736 0589 91       		.byte	0x91
 8737 058a 64       		.sleb128 -28
 8738 058b 1C010000 		.4byte	.LVL101
 8739 058f 26010000 		.4byte	.LVL102
 8740 0593 0200     		.2byte	0x2
 8741 0595 91       		.byte	0x91
 8742 0596 64       		.sleb128 -28
 8743 0597 00000000 		.4byte	0
 8744 059b 00000000 		.4byte	0
 8745              	.LLST28:
 8746 059f 00010000 		.4byte	.LVL97
 8747 05a3 0B010000 		.4byte	.LVL99-1
 8748 05a7 0100     		.2byte	0x1
 8749 05a9 52       		.byte	0x52
 8750 05aa 00000000 		.4byte	0
 8751 05ae 00000000 		.4byte	0
 8752              	.LLST30:
 8753 05b2 D4000000 		.4byte	.LVL92
 8754 05b6 D8000000 		.4byte	.LVL93
 8755 05ba 0100     		.2byte	0x1
 8756 05bc 50       		.byte	0x50
 8757 05bd E0000000 		.4byte	.LVL96
 8758 05c1 08010000 		.4byte	.LVL98
 8759 05c5 0100     		.2byte	0x1
 8760 05c7 50       		.byte	0x50
 8761 05c8 08010000 		.4byte	.LVL98
 8762 05cc 0B010000 		.4byte	.LVL99-1
 8763 05d0 0200     		.2byte	0x2
 8764 05d2 7D       		.byte	0x7d
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 226


 8765 05d3 00       		.sleb128 0
 8766 05d4 00000000 		.4byte	0
 8767 05d8 00000000 		.4byte	0
 8768              	.LLST31:
 8769 05dc C4000000 		.4byte	.LVL89
 8770 05e0 CE000000 		.4byte	.LVL90
 8771 05e4 0100     		.2byte	0x1
 8772 05e6 50       		.byte	0x50
 8773 05e7 CE000000 		.4byte	.LVL90
 8774 05eb D2000000 		.4byte	.LVL91
 8775 05ef 0300     		.2byte	0x3
 8776 05f1 70       		.byte	0x70
 8777 05f2 01       		.sleb128 1
 8778 05f3 9F       		.byte	0x9f
 8779 05f4 D8000000 		.4byte	.LVL93
 8780 05f8 DA000000 		.4byte	.LVL94
 8781 05fc 0100     		.2byte	0x1
 8782 05fe 50       		.byte	0x50
 8783 05ff DE000000 		.4byte	.LVL95
 8784 0603 E0000000 		.4byte	.LVL96
 8785 0607 0100     		.2byte	0x1
 8786 0609 50       		.byte	0x50
 8787 060a 00000000 		.4byte	0
 8788 060e 00000000 		.4byte	0
 8789              	.LLST32:
 8790 0612 00000000 		.4byte	.LVL109
 8791 0616 0B000000 		.4byte	.LVL110-1
 8792 061a 0100     		.2byte	0x1
 8793 061c 50       		.byte	0x50
 8794 061d 0B000000 		.4byte	.LVL110-1
 8795 0621 22000000 		.4byte	.LVL112
 8796 0625 0100     		.2byte	0x1
 8797 0627 54       		.byte	0x54
 8798 0628 22000000 		.4byte	.LVL112
 8799 062c 28000000 		.4byte	.LFE23
 8800 0630 0400     		.2byte	0x4
 8801 0632 F3       		.byte	0xf3
 8802 0633 01       		.uleb128 0x1
 8803 0634 50       		.byte	0x50
 8804 0635 9F       		.byte	0x9f
 8805 0636 00000000 		.4byte	0
 8806 063a 00000000 		.4byte	0
 8807              	.LLST33:
 8808 063e 0C000000 		.4byte	.LVL110
 8809 0642 21000000 		.4byte	.LVL111-1
 8810 0646 0100     		.2byte	0x1
 8811 0648 50       		.byte	0x50
 8812 0649 00000000 		.4byte	0
 8813 064d 00000000 		.4byte	0
 8814              	.LLST34:
 8815 0651 00000000 		.4byte	.LVL113
 8816 0655 09000000 		.4byte	.LVL114-1
 8817 0659 0100     		.2byte	0x1
 8818 065b 50       		.byte	0x50
 8819 065c 09000000 		.4byte	.LVL114-1
 8820 0660 26000000 		.4byte	.LVL118
 8821 0664 0100     		.2byte	0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 227


 8822 0666 54       		.byte	0x54
 8823 0667 26000000 		.4byte	.LVL118
 8824 066b 38000000 		.4byte	.LFE25
 8825 066f 0400     		.2byte	0x4
 8826 0671 F3       		.byte	0xf3
 8827 0672 01       		.uleb128 0x1
 8828 0673 50       		.byte	0x50
 8829 0674 9F       		.byte	0x9f
 8830 0675 00000000 		.4byte	0
 8831 0679 00000000 		.4byte	0
 8832              	.LLST35:
 8833 067d 00000000 		.4byte	.LVL113
 8834 0681 09000000 		.4byte	.LVL114-1
 8835 0685 0100     		.2byte	0x1
 8836 0687 51       		.byte	0x51
 8837 0688 09000000 		.4byte	.LVL114-1
 8838 068c 22000000 		.4byte	.LVL116
 8839 0690 0100     		.2byte	0x1
 8840 0692 55       		.byte	0x55
 8841 0693 22000000 		.4byte	.LVL116
 8842 0697 38000000 		.4byte	.LFE25
 8843 069b 0400     		.2byte	0x4
 8844 069d F3       		.byte	0xf3
 8845 069e 01       		.uleb128 0x1
 8846 069f 51       		.byte	0x51
 8847 06a0 9F       		.byte	0x9f
 8848 06a1 00000000 		.4byte	0
 8849 06a5 00000000 		.4byte	0
 8850              	.LLST36:
 8851 06a9 20000000 		.4byte	.LVL115
 8852 06ad 24000000 		.4byte	.LVL117
 8853 06b1 0100     		.2byte	0x1
 8854 06b3 53       		.byte	0x53
 8855 06b4 24000000 		.4byte	.LVL117
 8856 06b8 2A000000 		.4byte	.LVL119
 8857 06bc 0100     		.2byte	0x1
 8858 06be 55       		.byte	0x55
 8859 06bf 00000000 		.4byte	0
 8860 06c3 00000000 		.4byte	0
 8861              	.LLST37:
 8862 06c7 0A000000 		.4byte	.LVL114
 8863 06cb 2D000000 		.4byte	.LVL120-1
 8864 06cf 0100     		.2byte	0x1
 8865 06d1 50       		.byte	0x50
 8866 06d2 00000000 		.4byte	0
 8867 06d6 00000000 		.4byte	0
 8868              	.LLST38:
 8869 06da 00000000 		.4byte	.LVL121
 8870 06de 07000000 		.4byte	.LVL123-1
 8871 06e2 0100     		.2byte	0x1
 8872 06e4 50       		.byte	0x50
 8873 06e5 07000000 		.4byte	.LVL123-1
 8874 06e9 20000000 		.4byte	.LVL125
 8875 06ed 0100     		.2byte	0x1
 8876 06ef 54       		.byte	0x54
 8877 06f0 20000000 		.4byte	.LVL125
 8878 06f4 34000000 		.4byte	.LFE28
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 228


 8879 06f8 0400     		.2byte	0x4
 8880 06fa F3       		.byte	0xf3
 8881 06fb 01       		.uleb128 0x1
 8882 06fc 50       		.byte	0x50
 8883 06fd 9F       		.byte	0x9f
 8884 06fe 00000000 		.4byte	0
 8885 0702 00000000 		.4byte	0
 8886              	.LLST39:
 8887 0706 04000000 		.4byte	.LVL122
 8888 070a 1A000000 		.4byte	.LVL124
 8889 070e 0200     		.2byte	0x2
 8890 0710 30       		.byte	0x30
 8891 0711 9F       		.byte	0x9f
 8892 0712 1A000000 		.4byte	.LVL124
 8893 0716 2C000000 		.4byte	.LVL127
 8894 071a 0100     		.2byte	0x1
 8895 071c 55       		.byte	0x55
 8896 071d 2C000000 		.4byte	.LVL127
 8897 0721 34000000 		.4byte	.LFE28
 8898 0725 0100     		.2byte	0x1
 8899 0727 50       		.byte	0x50
 8900 0728 00000000 		.4byte	0
 8901 072c 00000000 		.4byte	0
 8902              	.LLST40:
 8903 0730 08000000 		.4byte	.LVL123
 8904 0734 29000000 		.4byte	.LVL126-1
 8905 0738 0100     		.2byte	0x1
 8906 073a 50       		.byte	0x50
 8907 073b 00000000 		.4byte	0
 8908 073f 00000000 		.4byte	0
 8909              	.LLST41:
 8910 0743 00000000 		.4byte	.LVL128
 8911 0747 09000000 		.4byte	.LVL129-1
 8912 074b 0100     		.2byte	0x1
 8913 074d 50       		.byte	0x50
 8914 074e 09000000 		.4byte	.LVL129-1
 8915 0752 14000000 		.4byte	.LVL130
 8916 0756 0100     		.2byte	0x1
 8917 0758 54       		.byte	0x54
 8918 0759 14000000 		.4byte	.LVL130
 8919 075d 18000000 		.4byte	.LVL131
 8920 0761 0300     		.2byte	0x3
 8921 0763 74       		.byte	0x74
 8922 0764 7F       		.sleb128 -1
 8923 0765 9F       		.byte	0x9f
 8924 0766 18000000 		.4byte	.LVL131
 8925 076a 30000000 		.4byte	.LFE30
 8926 076e 0400     		.2byte	0x4
 8927 0770 F3       		.byte	0xf3
 8928 0771 01       		.uleb128 0x1
 8929 0772 50       		.byte	0x50
 8930 0773 9F       		.byte	0x9f
 8931 0774 00000000 		.4byte	0
 8932 0778 00000000 		.4byte	0
 8933              	.LLST42:
 8934 077c 00000000 		.4byte	.LVL128
 8935 0780 09000000 		.4byte	.LVL129-1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 229


 8936 0784 0100     		.2byte	0x1
 8937 0786 51       		.byte	0x51
 8938 0787 09000000 		.4byte	.LVL129-1
 8939 078b 20000000 		.4byte	.LVL133
 8940 078f 0100     		.2byte	0x1
 8941 0791 55       		.byte	0x55
 8942 0792 20000000 		.4byte	.LVL133
 8943 0796 30000000 		.4byte	.LFE30
 8944 079a 0400     		.2byte	0x4
 8945 079c F3       		.byte	0xf3
 8946 079d 01       		.uleb128 0x1
 8947 079e 51       		.byte	0x51
 8948 079f 9F       		.byte	0x9f
 8949 07a0 00000000 		.4byte	0
 8950 07a4 00000000 		.4byte	0
 8951              	.LLST43:
 8952 07a8 0A000000 		.4byte	.LVL129
 8953 07ac 29000000 		.4byte	.LVL136-1
 8954 07b0 0100     		.2byte	0x1
 8955 07b2 50       		.byte	0x50
 8956 07b3 00000000 		.4byte	0
 8957 07b7 00000000 		.4byte	0
 8958              	.LLST44:
 8959 07bb 1E000000 		.4byte	.LVL132
 8960 07bf 24000000 		.4byte	.LVL134
 8961 07c3 0100     		.2byte	0x1
 8962 07c5 52       		.byte	0x52
 8963 07c6 24000000 		.4byte	.LVL134
 8964 07ca 26000000 		.4byte	.LVL135
 8965 07ce 0100     		.2byte	0x1
 8966 07d0 53       		.byte	0x53
 8967 07d1 00000000 		.4byte	0
 8968 07d5 00000000 		.4byte	0
 8969              	.LLST45:
 8970 07d9 00000000 		.4byte	.LVL137
 8971 07dd 04000000 		.4byte	.LVL138
 8972 07e1 0100     		.2byte	0x1
 8973 07e3 50       		.byte	0x50
 8974 07e4 04000000 		.4byte	.LVL138
 8975 07e8 14000000 		.4byte	.LFE36
 8976 07ec 0100     		.2byte	0x1
 8977 07ee 52       		.byte	0x52
 8978 07ef 00000000 		.4byte	0
 8979 07f3 00000000 		.4byte	0
 8980              	.LLST46:
 8981 07f7 00000000 		.4byte	.LVL143
 8982 07fb 04000000 		.4byte	.LVL144
 8983 07ff 0100     		.2byte	0x1
 8984 0801 50       		.byte	0x50
 8985 0802 04000000 		.4byte	.LVL144
 8986 0806 14000000 		.4byte	.LFE45
 8987 080a 0400     		.2byte	0x4
 8988 080c F3       		.byte	0xf3
 8989 080d 01       		.uleb128 0x1
 8990 080e 50       		.byte	0x50
 8991 080f 9F       		.byte	0x9f
 8992 0810 00000000 		.4byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 230


 8993 0814 00000000 		.4byte	0
 8994              	.LLST47:
 8995 0818 00000000 		.4byte	.LVL145
 8996 081c 08000000 		.4byte	.LVL146
 8997 0820 0100     		.2byte	0x1
 8998 0822 50       		.byte	0x50
 8999 0823 08000000 		.4byte	.LVL146
 9000 0827 18000000 		.4byte	.LFE46
 9001 082b 0400     		.2byte	0x4
 9002 082d F3       		.byte	0xf3
 9003 082e 01       		.uleb128 0x1
 9004 082f 50       		.byte	0x50
 9005 0830 9F       		.byte	0x9f
 9006 0831 00000000 		.4byte	0
 9007 0835 00000000 		.4byte	0
 9008              	.LLST48:
 9009 0839 00000000 		.4byte	.LVL147
 9010 083d 04000000 		.4byte	.LVL148
 9011 0841 0100     		.2byte	0x1
 9012 0843 50       		.byte	0x50
 9013 0844 04000000 		.4byte	.LVL148
 9014 0848 14000000 		.4byte	.LFE47
 9015 084c 0400     		.2byte	0x4
 9016 084e F3       		.byte	0xf3
 9017 084f 01       		.uleb128 0x1
 9018 0850 50       		.byte	0x50
 9019 0851 9F       		.byte	0x9f
 9020 0852 00000000 		.4byte	0
 9021 0856 00000000 		.4byte	0
 9022              	.LLST49:
 9023 085a 00000000 		.4byte	.LVL149
 9024 085e 04000000 		.4byte	.LVL150
 9025 0862 0100     		.2byte	0x1
 9026 0864 50       		.byte	0x50
 9027 0865 04000000 		.4byte	.LVL150
 9028 0869 14000000 		.4byte	.LFE48
 9029 086d 0400     		.2byte	0x4
 9030 086f F3       		.byte	0xf3
 9031 0870 01       		.uleb128 0x1
 9032 0871 50       		.byte	0x50
 9033 0872 9F       		.byte	0x9f
 9034 0873 00000000 		.4byte	0
 9035 0877 00000000 		.4byte	0
 9036              	.LLST50:
 9037 087b 00000000 		.4byte	.LVL151
 9038 087f 04000000 		.4byte	.LVL152
 9039 0883 0100     		.2byte	0x1
 9040 0885 50       		.byte	0x50
 9041 0886 04000000 		.4byte	.LVL152
 9042 088a 14000000 		.4byte	.LFE49
 9043 088e 0400     		.2byte	0x4
 9044 0890 F3       		.byte	0xf3
 9045 0891 01       		.uleb128 0x1
 9046 0892 50       		.byte	0x50
 9047 0893 9F       		.byte	0x9f
 9048 0894 00000000 		.4byte	0
 9049 0898 00000000 		.4byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 231


 9050              	.LLST51:
 9051 089c 00000000 		.4byte	.LVL154
 9052 08a0 0A000000 		.4byte	.LVL155
 9053 08a4 0100     		.2byte	0x1
 9054 08a6 50       		.byte	0x50
 9055 08a7 0A000000 		.4byte	.LVL155
 9056 08ab 2A000000 		.4byte	.LVL159
 9057 08af 0100     		.2byte	0x1
 9058 08b1 54       		.byte	0x54
 9059 08b2 2A000000 		.4byte	.LVL159
 9060 08b6 40000000 		.4byte	.LFE22
 9061 08ba 0400     		.2byte	0x4
 9062 08bc F3       		.byte	0xf3
 9063 08bd 01       		.uleb128 0x1
 9064 08be 50       		.byte	0x50
 9065 08bf 9F       		.byte	0x9f
 9066 08c0 00000000 		.4byte	0
 9067 08c4 00000000 		.4byte	0
 9068              	.LLST52:
 9069 08c8 12000000 		.4byte	.LVL157
 9070 08cc 37000000 		.4byte	.LVL162-1
 9071 08d0 0100     		.2byte	0x1
 9072 08d2 50       		.byte	0x50
 9073 08d3 00000000 		.4byte	0
 9074 08d7 00000000 		.4byte	0
 9075              	.LLST53:
 9076 08db 24000000 		.4byte	.LVL158
 9077 08df 32000000 		.4byte	.LVL160
 9078 08e3 0100     		.2byte	0x1
 9079 08e5 55       		.byte	0x55
 9080 08e6 34000000 		.4byte	.LVL161
 9081 08ea 3A000000 		.4byte	.LVL163
 9082 08ee 0100     		.2byte	0x1
 9083 08f0 55       		.byte	0x55
 9084 08f1 3A000000 		.4byte	.LVL163
 9085 08f5 40000000 		.4byte	.LFE22
 9086 08f9 0100     		.2byte	0x1
 9087 08fb 50       		.byte	0x50
 9088 08fc 00000000 		.4byte	0
 9089 0900 00000000 		.4byte	0
 9090              	.LLST54:
 9091 0904 00000000 		.4byte	.LVL164
 9092 0908 0A000000 		.4byte	.LVL165
 9093 090c 0100     		.2byte	0x1
 9094 090e 50       		.byte	0x50
 9095 090f 0A000000 		.4byte	.LVL165
 9096 0913 16000000 		.4byte	.LVL168
 9097 0917 0100     		.2byte	0x1
 9098 0919 54       		.byte	0x54
 9099 091a 16000000 		.4byte	.LVL168
 9100 091e 30000000 		.4byte	.LFE26
 9101 0922 0400     		.2byte	0x4
 9102 0924 F3       		.byte	0xf3
 9103 0925 01       		.uleb128 0x1
 9104 0926 50       		.byte	0x50
 9105 0927 9F       		.byte	0x9f
 9106 0928 00000000 		.4byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 232


 9107 092c 00000000 		.4byte	0
 9108              	.LLST55:
 9109 0930 1C000000 		.4byte	.LVL169
 9110 0934 1E000000 		.4byte	.LVL170
 9111 0938 0700     		.2byte	0x7
 9112 093a 74       		.byte	0x74
 9113 093b 00       		.sleb128 0
 9114 093c 48       		.byte	0x48
 9115 093d 41       		.byte	0x41
 9116 093e 24       		.byte	0x24
 9117 093f 1A       		.byte	0x1a
 9118 0940 9F       		.byte	0x9f
 9119 0941 22000000 		.4byte	.LVL171
 9120 0945 28000000 		.4byte	.LVL173
 9121 0949 0100     		.2byte	0x1
 9122 094b 54       		.byte	0x54
 9123 094c 28000000 		.4byte	.LVL173
 9124 0950 30000000 		.4byte	.LFE26
 9125 0954 0100     		.2byte	0x1
 9126 0956 50       		.byte	0x50
 9127 0957 00000000 		.4byte	0
 9128 095b 00000000 		.4byte	0
 9129              	.LLST56:
 9130 095f 12000000 		.4byte	.LVL167
 9131 0963 25000000 		.4byte	.LVL172-1
 9132 0967 0100     		.2byte	0x1
 9133 0969 50       		.byte	0x50
 9134 096a 00000000 		.4byte	0
 9135 096e 00000000 		.4byte	0
 9136              	.LLST57:
 9137 0972 00000000 		.4byte	.LVL174
 9138 0976 07000000 		.4byte	.LVL176-1
 9139 097a 0100     		.2byte	0x1
 9140 097c 50       		.byte	0x50
 9141 097d 07000000 		.4byte	.LVL176-1
 9142 0981 3E000000 		.4byte	.LVL189
 9143 0985 0100     		.2byte	0x1
 9144 0987 54       		.byte	0x54
 9145 0988 3E000000 		.4byte	.LVL189
 9146 098c 40000000 		.4byte	.LFE27
 9147 0990 0400     		.2byte	0x4
 9148 0992 F3       		.byte	0xf3
 9149 0993 01       		.uleb128 0x1
 9150 0994 50       		.byte	0x50
 9151 0995 9F       		.byte	0x9f
 9152 0996 00000000 		.4byte	0
 9153 099a 00000000 		.4byte	0
 9154              	.LLST58:
 9155 099e 10000000 		.4byte	.LVL179
 9156 09a2 2E000000 		.4byte	.LVL180
 9157 09a6 0100     		.2byte	0x1
 9158 09a8 50       		.byte	0x50
 9159 09a9 30000000 		.4byte	.LVL181
 9160 09ad 32000000 		.4byte	.LVL182
 9161 09b1 0100     		.2byte	0x1
 9162 09b3 50       		.byte	0x50
 9163 09b4 34000000 		.4byte	.LVL183
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 233


 9164 09b8 36000000 		.4byte	.LVL184
 9165 09bc 0100     		.2byte	0x1
 9166 09be 50       		.byte	0x50
 9167 09bf 38000000 		.4byte	.LVL185
 9168 09c3 3A000000 		.4byte	.LVL186
 9169 09c7 0100     		.2byte	0x1
 9170 09c9 50       		.byte	0x50
 9171 09ca 3C000000 		.4byte	.LVL187
 9172 09ce 3E000000 		.4byte	.LVL188
 9173 09d2 0100     		.2byte	0x1
 9174 09d4 50       		.byte	0x50
 9175 09d5 00000000 		.4byte	0
 9176 09d9 00000000 		.4byte	0
 9177              	.LLST59:
 9178 09dd 0A000000 		.4byte	.LVL177
 9179 09e1 0C000000 		.4byte	.LVL178
 9180 09e5 0100     		.2byte	0x1
 9181 09e7 50       		.byte	0x50
 9182 09e8 0C000000 		.4byte	.LVL178
 9183 09ec 3E000000 		.4byte	.LVL190
 9184 09f0 0100     		.2byte	0x1
 9185 09f2 55       		.byte	0x55
 9186 09f3 00000000 		.4byte	0
 9187 09f7 00000000 		.4byte	0
 9188              	.LLST60:
 9189 09fb 04000000 		.4byte	.LVL175
 9190 09ff 3E000000 		.4byte	.LVL188
 9191 0a03 0200     		.2byte	0x2
 9192 0a05 41       		.byte	0x41
 9193 0a06 9F       		.byte	0x9f
 9194 0a07 3E000000 		.4byte	.LVL188
 9195 0a0b 40000000 		.4byte	.LFE27
 9196 0a0f 0100     		.2byte	0x1
 9197 0a11 50       		.byte	0x50
 9198 0a12 00000000 		.4byte	0
 9199 0a16 00000000 		.4byte	0
 9200              	.LLST61:
 9201 0a1a 00000000 		.4byte	.LVL191
 9202 0a1e 0F000000 		.4byte	.LVL193-1
 9203 0a22 0100     		.2byte	0x1
 9204 0a24 50       		.byte	0x50
 9205 0a25 0F000000 		.4byte	.LVL193-1
 9206 0a29 68000000 		.4byte	.LVL205
 9207 0a2d 0100     		.2byte	0x1
 9208 0a2f 54       		.byte	0x54
 9209 0a30 68000000 		.4byte	.LVL205
 9210 0a34 70000000 		.4byte	.LVL207
 9211 0a38 0400     		.2byte	0x4
 9212 0a3a F3       		.byte	0xf3
 9213 0a3b 01       		.uleb128 0x1
 9214 0a3c 50       		.byte	0x50
 9215 0a3d 9F       		.byte	0x9f
 9216 0a3e 70000000 		.4byte	.LVL207
 9217 0a42 72000000 		.4byte	.LVL208
 9218 0a46 0100     		.2byte	0x1
 9219 0a48 54       		.byte	0x54
 9220 0a49 72000000 		.4byte	.LVL208
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 234


 9221 0a4d 74000000 		.4byte	.LVL209
 9222 0a51 0400     		.2byte	0x4
 9223 0a53 F3       		.byte	0xf3
 9224 0a54 01       		.uleb128 0x1
 9225 0a55 50       		.byte	0x50
 9226 0a56 9F       		.byte	0x9f
 9227 0a57 74000000 		.4byte	.LVL209
 9228 0a5b 76000000 		.4byte	.LVL210
 9229 0a5f 0100     		.2byte	0x1
 9230 0a61 54       		.byte	0x54
 9231 0a62 76000000 		.4byte	.LVL210
 9232 0a66 78000000 		.4byte	.LVL211
 9233 0a6a 0400     		.2byte	0x4
 9234 0a6c F3       		.byte	0xf3
 9235 0a6d 01       		.uleb128 0x1
 9236 0a6e 50       		.byte	0x50
 9237 0a6f 9F       		.byte	0x9f
 9238 0a70 78000000 		.4byte	.LVL211
 9239 0a74 7A000000 		.4byte	.LVL212
 9240 0a78 0100     		.2byte	0x1
 9241 0a7a 54       		.byte	0x54
 9242 0a7b 7A000000 		.4byte	.LVL212
 9243 0a7f 7C000000 		.4byte	.LVL213
 9244 0a83 0400     		.2byte	0x4
 9245 0a85 F3       		.byte	0xf3
 9246 0a86 01       		.uleb128 0x1
 9247 0a87 50       		.byte	0x50
 9248 0a88 9F       		.byte	0x9f
 9249 0a89 7C000000 		.4byte	.LVL213
 9250 0a8d 7E000000 		.4byte	.LVL214
 9251 0a91 0100     		.2byte	0x1
 9252 0a93 54       		.byte	0x54
 9253 0a94 7E000000 		.4byte	.LVL214
 9254 0a98 80000000 		.4byte	.LVL215
 9255 0a9c 0400     		.2byte	0x4
 9256 0a9e F3       		.byte	0xf3
 9257 0a9f 01       		.uleb128 0x1
 9258 0aa0 50       		.byte	0x50
 9259 0aa1 9F       		.byte	0x9f
 9260 0aa2 80000000 		.4byte	.LVL215
 9261 0aa6 82000000 		.4byte	.LVL216
 9262 0aaa 0100     		.2byte	0x1
 9263 0aac 54       		.byte	0x54
 9264 0aad 82000000 		.4byte	.LVL216
 9265 0ab1 84000000 		.4byte	.LVL217
 9266 0ab5 0400     		.2byte	0x4
 9267 0ab7 F3       		.byte	0xf3
 9268 0ab8 01       		.uleb128 0x1
 9269 0ab9 50       		.byte	0x50
 9270 0aba 9F       		.byte	0x9f
 9271 0abb 84000000 		.4byte	.LVL217
 9272 0abf 86000000 		.4byte	.LVL218
 9273 0ac3 0100     		.2byte	0x1
 9274 0ac5 54       		.byte	0x54
 9275 0ac6 86000000 		.4byte	.LVL218
 9276 0aca 88000000 		.4byte	.LVL219
 9277 0ace 0400     		.2byte	0x4
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 235


 9278 0ad0 F3       		.byte	0xf3
 9279 0ad1 01       		.uleb128 0x1
 9280 0ad2 50       		.byte	0x50
 9281 0ad3 9F       		.byte	0x9f
 9282 0ad4 88000000 		.4byte	.LVL219
 9283 0ad8 8A000000 		.4byte	.LVL220
 9284 0adc 0100     		.2byte	0x1
 9285 0ade 54       		.byte	0x54
 9286 0adf 8A000000 		.4byte	.LVL220
 9287 0ae3 8C000000 		.4byte	.LVL221
 9288 0ae7 0400     		.2byte	0x4
 9289 0ae9 F3       		.byte	0xf3
 9290 0aea 01       		.uleb128 0x1
 9291 0aeb 50       		.byte	0x50
 9292 0aec 9F       		.byte	0x9f
 9293 0aed 8C000000 		.4byte	.LVL221
 9294 0af1 8E000000 		.4byte	.LVL222
 9295 0af5 0100     		.2byte	0x1
 9296 0af7 54       		.byte	0x54
 9297 0af8 8E000000 		.4byte	.LVL222
 9298 0afc A4000000 		.4byte	.LFE24
 9299 0b00 0400     		.2byte	0x4
 9300 0b02 F3       		.byte	0xf3
 9301 0b03 01       		.uleb128 0x1
 9302 0b04 50       		.byte	0x50
 9303 0b05 9F       		.byte	0x9f
 9304 0b06 00000000 		.4byte	0
 9305 0b0a 00000000 		.4byte	0
 9306              	.LLST62:
 9307 0b0e 00000000 		.4byte	.LVL191
 9308 0b12 0F000000 		.4byte	.LVL193-1
 9309 0b16 0100     		.2byte	0x1
 9310 0b18 51       		.byte	0x51
 9311 0b19 0F000000 		.4byte	.LVL193-1
 9312 0b1d 4E000000 		.4byte	.LVL198
 9313 0b21 0100     		.2byte	0x1
 9314 0b23 55       		.byte	0x55
 9315 0b24 4E000000 		.4byte	.LVL198
 9316 0b28 70000000 		.4byte	.LVL207
 9317 0b2c 0400     		.2byte	0x4
 9318 0b2e F3       		.byte	0xf3
 9319 0b2f 01       		.uleb128 0x1
 9320 0b30 51       		.byte	0x51
 9321 0b31 9F       		.byte	0x9f
 9322 0b32 70000000 		.4byte	.LVL207
 9323 0b36 8E000000 		.4byte	.LVL222
 9324 0b3a 0100     		.2byte	0x1
 9325 0b3c 55       		.byte	0x55
 9326 0b3d 8E000000 		.4byte	.LVL222
 9327 0b41 A4000000 		.4byte	.LFE24
 9328 0b45 0400     		.2byte	0x4
 9329 0b47 F3       		.byte	0xf3
 9330 0b48 01       		.uleb128 0x1
 9331 0b49 51       		.byte	0x51
 9332 0b4a 9F       		.byte	0x9f
 9333 0b4b 00000000 		.4byte	0
 9334 0b4f 00000000 		.4byte	0
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 236


 9335              	.LLST63:
 9336 0b53 00000000 		.4byte	.LVL191
 9337 0b57 0F000000 		.4byte	.LVL193-1
 9338 0b5b 0100     		.2byte	0x1
 9339 0b5d 52       		.byte	0x52
 9340 0b5e 0F000000 		.4byte	.LVL193-1
 9341 0b62 52000000 		.4byte	.LVL200
 9342 0b66 0100     		.2byte	0x1
 9343 0b68 56       		.byte	0x56
 9344 0b69 52000000 		.4byte	.LVL200
 9345 0b6d 54000000 		.4byte	.LVL201
 9346 0b71 0300     		.2byte	0x3
 9347 0b73 76       		.byte	0x76
 9348 0b74 01       		.sleb128 1
 9349 0b75 9F       		.byte	0x9f
 9350 0b76 54000000 		.4byte	.LVL201
 9351 0b7a 70000000 		.4byte	.LVL207
 9352 0b7e 0400     		.2byte	0x4
 9353 0b80 F3       		.byte	0xf3
 9354 0b81 01       		.uleb128 0x1
 9355 0b82 52       		.byte	0x52
 9356 0b83 9F       		.byte	0x9f
 9357 0b84 70000000 		.4byte	.LVL207
 9358 0b88 8E000000 		.4byte	.LVL222
 9359 0b8c 0100     		.2byte	0x1
 9360 0b8e 56       		.byte	0x56
 9361 0b8f 8E000000 		.4byte	.LVL222
 9362 0b93 A4000000 		.4byte	.LFE24
 9363 0b97 0400     		.2byte	0x4
 9364 0b99 F3       		.byte	0xf3
 9365 0b9a 01       		.uleb128 0x1
 9366 0b9b 52       		.byte	0x52
 9367 0b9c 9F       		.byte	0x9f
 9368 0b9d 00000000 		.4byte	0
 9369 0ba1 00000000 		.4byte	0
 9370              	.LLST64:
 9371 0ba5 00000000 		.4byte	.LVL191
 9372 0ba9 0F000000 		.4byte	.LVL193-1
 9373 0bad 0100     		.2byte	0x1
 9374 0baf 53       		.byte	0x53
 9375 0bb0 0F000000 		.4byte	.LVL193-1
 9376 0bb4 5E000000 		.4byte	.LVL203
 9377 0bb8 0100     		.2byte	0x1
 9378 0bba 57       		.byte	0x57
 9379 0bbb 5E000000 		.4byte	.LVL203
 9380 0bbf 70000000 		.4byte	.LVL207
 9381 0bc3 0400     		.2byte	0x4
 9382 0bc5 F3       		.byte	0xf3
 9383 0bc6 01       		.uleb128 0x1
 9384 0bc7 53       		.byte	0x53
 9385 0bc8 9F       		.byte	0x9f
 9386 0bc9 70000000 		.4byte	.LVL207
 9387 0bcd 8E000000 		.4byte	.LVL222
 9388 0bd1 0100     		.2byte	0x1
 9389 0bd3 57       		.byte	0x57
 9390 0bd4 8E000000 		.4byte	.LVL222
 9391 0bd8 A4000000 		.4byte	.LFE24
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 237


 9392 0bdc 0400     		.2byte	0x4
 9393 0bde F3       		.byte	0xf3
 9394 0bdf 01       		.uleb128 0x1
 9395 0be0 53       		.byte	0x53
 9396 0be1 9F       		.byte	0x9f
 9397 0be2 00000000 		.4byte	0
 9398 0be6 00000000 		.4byte	0
 9399              	.LLST65:
 9400 0bea 4A000000 		.4byte	.LVL197
 9401 0bee 50000000 		.4byte	.LVL199
 9402 0bf2 0100     		.2byte	0x1
 9403 0bf4 51       		.byte	0x51
 9404 0bf5 50000000 		.4byte	.LVL199
 9405 0bf9 66000000 		.4byte	.LVL204
 9406 0bfd 0100     		.2byte	0x1
 9407 0bff 55       		.byte	0x55
 9408 0c00 66000000 		.4byte	.LVL204
 9409 0c04 70000000 		.4byte	.LVL207
 9410 0c08 0100     		.2byte	0x1
 9411 0c0a 57       		.byte	0x57
 9412 0c0b 00000000 		.4byte	0
 9413 0c0f 00000000 		.4byte	0
 9414              	.LLST66:
 9415 0c13 18000000 		.4byte	.LVL195
 9416 0c17 42000000 		.4byte	.LVL196
 9417 0c1b 0100     		.2byte	0x1
 9418 0c1d 50       		.byte	0x50
 9419 0c1e 70000000 		.4byte	.LVL207
 9420 0c22 8E000000 		.4byte	.LVL222
 9421 0c26 0100     		.2byte	0x1
 9422 0c28 50       		.byte	0x50
 9423 0c29 00000000 		.4byte	0
 9424 0c2d 00000000 		.4byte	0
 9425              	.LLST67:
 9426 0c31 12000000 		.4byte	.LVL194
 9427 0c35 6C000000 		.4byte	.LVL206
 9428 0c39 0200     		.2byte	0x2
 9429 0c3b 91       		.byte	0x91
 9430 0c3c 64       		.sleb128 -28
 9431 0c3d 70000000 		.4byte	.LVL207
 9432 0c41 8E000000 		.4byte	.LVL222
 9433 0c45 0200     		.2byte	0x2
 9434 0c47 91       		.byte	0x91
 9435 0c48 64       		.sleb128 -28
 9436 0c49 00000000 		.4byte	0
 9437 0c4d 00000000 		.4byte	0
 9438              	.LLST68:
 9439 0c51 0C000000 		.4byte	.LVL192
 9440 0c55 6C000000 		.4byte	.LVL206
 9441 0c59 0200     		.2byte	0x2
 9442 0c5b 31       		.byte	0x31
 9443 0c5c 9F       		.byte	0x9f
 9444 0c5d 6C000000 		.4byte	.LVL206
 9445 0c61 70000000 		.4byte	.LVL207
 9446 0c65 0200     		.2byte	0x2
 9447 0c67 30       		.byte	0x30
 9448 0c68 9F       		.byte	0x9f
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 238


 9449 0c69 70000000 		.4byte	.LVL207
 9450 0c6d 8E000000 		.4byte	.LVL222
 9451 0c71 0200     		.2byte	0x2
 9452 0c73 31       		.byte	0x31
 9453 0c74 9F       		.byte	0x9f
 9454 0c75 8E000000 		.4byte	.LVL222
 9455 0c79 98000000 		.4byte	.LVL224
 9456 0c7d 0100     		.2byte	0x1
 9457 0c7f 54       		.byte	0x54
 9458 0c80 98000000 		.4byte	.LVL224
 9459 0c84 A4000000 		.4byte	.LFE24
 9460 0c88 0100     		.2byte	0x1
 9461 0c8a 50       		.byte	0x50
 9462 0c8b 00000000 		.4byte	0
 9463 0c8f 00000000 		.4byte	0
 9464              	.LLST69:
 9465 0c93 00000000 		.4byte	.LVL225
 9466 0c97 09000000 		.4byte	.LVL227-1
 9467 0c9b 0100     		.2byte	0x1
 9468 0c9d 50       		.byte	0x50
 9469 0c9e 09000000 		.4byte	.LVL227-1
 9470 0ca2 34000000 		.4byte	.LVL234
 9471 0ca6 0100     		.2byte	0x1
 9472 0ca8 54       		.byte	0x54
 9473 0ca9 34000000 		.4byte	.LVL234
 9474 0cad 3C000000 		.4byte	.LVL236
 9475 0cb1 0400     		.2byte	0x4
 9476 0cb3 F3       		.byte	0xf3
 9477 0cb4 01       		.uleb128 0x1
 9478 0cb5 50       		.byte	0x50
 9479 0cb6 9F       		.byte	0x9f
 9480 0cb7 3C000000 		.4byte	.LVL236
 9481 0cbb 3E000000 		.4byte	.LVL237
 9482 0cbf 0100     		.2byte	0x1
 9483 0cc1 54       		.byte	0x54
 9484 0cc2 3E000000 		.4byte	.LVL237
 9485 0cc6 40000000 		.4byte	.LVL238
 9486 0cca 0400     		.2byte	0x4
 9487 0ccc F3       		.byte	0xf3
 9488 0ccd 01       		.uleb128 0x1
 9489 0cce 50       		.byte	0x50
 9490 0ccf 9F       		.byte	0x9f
 9491 0cd0 40000000 		.4byte	.LVL238
 9492 0cd4 42000000 		.4byte	.LVL239
 9493 0cd8 0100     		.2byte	0x1
 9494 0cda 54       		.byte	0x54
 9495 0cdb 42000000 		.4byte	.LVL239
 9496 0cdf 44000000 		.4byte	.LVL240
 9497 0ce3 0400     		.2byte	0x4
 9498 0ce5 F3       		.byte	0xf3
 9499 0ce6 01       		.uleb128 0x1
 9500 0ce7 50       		.byte	0x50
 9501 0ce8 9F       		.byte	0x9f
 9502 0ce9 44000000 		.4byte	.LVL240
 9503 0ced 46000000 		.4byte	.LVL241
 9504 0cf1 0100     		.2byte	0x1
 9505 0cf3 54       		.byte	0x54
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 239


 9506 0cf4 46000000 		.4byte	.LVL241
 9507 0cf8 58000000 		.4byte	.LFE31
 9508 0cfc 0400     		.2byte	0x4
 9509 0cfe F3       		.byte	0xf3
 9510 0cff 01       		.uleb128 0x1
 9511 0d00 50       		.byte	0x50
 9512 0d01 9F       		.byte	0x9f
 9513 0d02 00000000 		.4byte	0
 9514 0d06 00000000 		.4byte	0
 9515              	.LLST70:
 9516 0d0a 00000000 		.4byte	.LVL225
 9517 0d0e 09000000 		.4byte	.LVL227-1
 9518 0d12 0100     		.2byte	0x1
 9519 0d14 51       		.byte	0x51
 9520 0d15 09000000 		.4byte	.LVL227-1
 9521 0d19 2E000000 		.4byte	.LVL232
 9522 0d1d 0100     		.2byte	0x1
 9523 0d1f 55       		.byte	0x55
 9524 0d20 2E000000 		.4byte	.LVL232
 9525 0d24 3C000000 		.4byte	.LVL236
 9526 0d28 0400     		.2byte	0x4
 9527 0d2a F3       		.byte	0xf3
 9528 0d2b 01       		.uleb128 0x1
 9529 0d2c 51       		.byte	0x51
 9530 0d2d 9F       		.byte	0x9f
 9531 0d2e 3C000000 		.4byte	.LVL236
 9532 0d32 46000000 		.4byte	.LVL241
 9533 0d36 0100     		.2byte	0x1
 9534 0d38 55       		.byte	0x55
 9535 0d39 46000000 		.4byte	.LVL241
 9536 0d3d 58000000 		.4byte	.LFE31
 9537 0d41 0400     		.2byte	0x4
 9538 0d43 F3       		.byte	0xf3
 9539 0d44 01       		.uleb128 0x1
 9540 0d45 51       		.byte	0x51
 9541 0d46 9F       		.byte	0x9f
 9542 0d47 00000000 		.4byte	0
 9543 0d4b 00000000 		.4byte	0
 9544              	.LLST71:
 9545 0d4f 2C000000 		.4byte	.LVL231
 9546 0d53 32000000 		.4byte	.LVL233
 9547 0d57 0100     		.2byte	0x1
 9548 0d59 53       		.byte	0x53
 9549 0d5a 32000000 		.4byte	.LVL233
 9550 0d5e 3C000000 		.4byte	.LVL236
 9551 0d62 0100     		.2byte	0x1
 9552 0d64 55       		.byte	0x55
 9553 0d65 00000000 		.4byte	0
 9554 0d69 00000000 		.4byte	0
 9555              	.LLST72:
 9556 0d6d 0C000000 		.4byte	.LVL228
 9557 0d71 4E000000 		.4byte	.LVL244
 9558 0d75 0100     		.2byte	0x1
 9559 0d77 56       		.byte	0x56
 9560 0d78 00000000 		.4byte	0
 9561 0d7c 00000000 		.4byte	0
 9562              	.LLST73:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 240


 9563 0d80 06000000 		.4byte	.LVL226
 9564 0d84 38000000 		.4byte	.LVL235
 9565 0d88 0200     		.2byte	0x2
 9566 0d8a 31       		.byte	0x31
 9567 0d8b 9F       		.byte	0x9f
 9568 0d8c 38000000 		.4byte	.LVL235
 9569 0d90 3C000000 		.4byte	.LVL236
 9570 0d94 0200     		.2byte	0x2
 9571 0d96 30       		.byte	0x30
 9572 0d97 9F       		.byte	0x9f
 9573 0d98 3C000000 		.4byte	.LVL236
 9574 0d9c 46000000 		.4byte	.LVL241
 9575 0da0 0200     		.2byte	0x2
 9576 0da2 31       		.byte	0x31
 9577 0da3 9F       		.byte	0x9f
 9578 0da4 46000000 		.4byte	.LVL241
 9579 0da8 4E000000 		.4byte	.LVL243
 9580 0dac 0100     		.2byte	0x1
 9581 0dae 54       		.byte	0x54
 9582 0daf 4E000000 		.4byte	.LVL243
 9583 0db3 58000000 		.4byte	.LFE31
 9584 0db7 0100     		.2byte	0x1
 9585 0db9 50       		.byte	0x50
 9586 0dba 00000000 		.4byte	0
 9587 0dbe 00000000 		.4byte	0
 9588              	.LLST74:
 9589 0dc2 12000000 		.4byte	.LVL229
 9590 0dc6 24000000 		.4byte	.LVL230
 9591 0dca 0100     		.2byte	0x1
 9592 0dcc 50       		.byte	0x50
 9593 0dcd 3C000000 		.4byte	.LVL236
 9594 0dd1 46000000 		.4byte	.LVL241
 9595 0dd5 0100     		.2byte	0x1
 9596 0dd7 50       		.byte	0x50
 9597 0dd8 00000000 		.4byte	0
 9598 0ddc 00000000 		.4byte	0
 9599              	.LLST75:
 9600 0de0 00000000 		.4byte	.LVL245
 9601 0de4 15000000 		.4byte	.LVL247-1
 9602 0de8 0100     		.2byte	0x1
 9603 0dea 50       		.byte	0x50
 9604 0deb 15000000 		.4byte	.LVL247-1
 9605 0def F4000000 		.4byte	.LVL282
 9606 0df3 0100     		.2byte	0x1
 9607 0df5 54       		.byte	0x54
 9608 0df6 F4000000 		.4byte	.LVL282
 9609 0dfa 10010000 		.4byte	.LFE29
 9610 0dfe 0400     		.2byte	0x4
 9611 0e00 F3       		.byte	0xf3
 9612 0e01 01       		.uleb128 0x1
 9613 0e02 50       		.byte	0x50
 9614 0e03 9F       		.byte	0x9f
 9615 0e04 00000000 		.4byte	0
 9616 0e08 00000000 		.4byte	0
 9617              	.LLST76:
 9618 0e0c 00000000 		.4byte	.LVL245
 9619 0e10 15000000 		.4byte	.LVL247-1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 241


 9620 0e14 0100     		.2byte	0x1
 9621 0e16 51       		.byte	0x51
 9622 0e17 15000000 		.4byte	.LVL247-1
 9623 0e1b F4000000 		.4byte	.LVL283
 9624 0e1f 0100     		.2byte	0x1
 9625 0e21 55       		.byte	0x55
 9626 0e22 F4000000 		.4byte	.LVL283
 9627 0e26 10010000 		.4byte	.LFE29
 9628 0e2a 0400     		.2byte	0x4
 9629 0e2c F3       		.byte	0xf3
 9630 0e2d 01       		.uleb128 0x1
 9631 0e2e 51       		.byte	0x51
 9632 0e2f 9F       		.byte	0x9f
 9633 0e30 00000000 		.4byte	0
 9634 0e34 00000000 		.4byte	0
 9635              	.LLST77:
 9636 0e38 00000000 		.4byte	.LVL245
 9637 0e3c 15000000 		.4byte	.LVL247-1
 9638 0e40 0100     		.2byte	0x1
 9639 0e42 52       		.byte	0x52
 9640 0e43 15000000 		.4byte	.LVL247-1
 9641 0e47 F4000000 		.4byte	.LVL284
 9642 0e4b 0100     		.2byte	0x1
 9643 0e4d 56       		.byte	0x56
 9644 0e4e F4000000 		.4byte	.LVL284
 9645 0e52 10010000 		.4byte	.LFE29
 9646 0e56 0400     		.2byte	0x4
 9647 0e58 F3       		.byte	0xf3
 9648 0e59 01       		.uleb128 0x1
 9649 0e5a 52       		.byte	0x52
 9650 0e5b 9F       		.byte	0x9f
 9651 0e5c 00000000 		.4byte	0
 9652 0e60 00000000 		.4byte	0
 9653              	.LLST78:
 9654 0e64 00000000 		.4byte	.LVL245
 9655 0e68 15000000 		.4byte	.LVL247-1
 9656 0e6c 0100     		.2byte	0x1
 9657 0e6e 53       		.byte	0x53
 9658 0e6f 15000000 		.4byte	.LVL247-1
 9659 0e73 10010000 		.4byte	.LFE29
 9660 0e77 0200     		.2byte	0x2
 9661 0e79 91       		.byte	0x91
 9662 0e7a 5C       		.sleb128 -36
 9663 0e7b 00000000 		.4byte	0
 9664 0e7f 00000000 		.4byte	0
 9665              	.LLST79:
 9666 0e83 4C000000 		.4byte	.LVL250
 9667 0e87 50000000 		.4byte	.LVL251
 9668 0e8b 0100     		.2byte	0x1
 9669 0e8d 50       		.byte	0x50
 9670 0e8e 50000000 		.4byte	.LVL251
 9671 0e92 6C000000 		.4byte	.LVL254
 9672 0e96 0100     		.2byte	0x1
 9673 0e98 57       		.byte	0x57
 9674 0e99 00000000 		.4byte	0
 9675 0e9d 00000000 		.4byte	0
 9676              	.LLST80:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 242


 9677 0ea1 5A000000 		.4byte	.LVL252
 9678 0ea5 64000000 		.4byte	.LVL253
 9679 0ea9 0100     		.2byte	0x1
 9680 0eab 50       		.byte	0x50
 9681 0eac 64000000 		.4byte	.LVL253
 9682 0eb0 CC000000 		.4byte	.LVL265
 9683 0eb4 0100     		.2byte	0x1
 9684 0eb6 5A       		.byte	0x5a
 9685 0eb7 E8000000 		.4byte	.LVL279
 9686 0ebb F2000000 		.4byte	.LVL281
 9687 0ebf 0100     		.2byte	0x1
 9688 0ec1 5A       		.byte	0x5a
 9689 0ec2 00000000 		.4byte	0
 9690 0ec6 00000000 		.4byte	0
 9691              	.LLST81:
 9692 0eca 12000000 		.4byte	.LVL246
 9693 0ece A8000000 		.4byte	.LVL262
 9694 0ed2 0200     		.2byte	0x2
 9695 0ed4 30       		.byte	0x30
 9696 0ed5 9F       		.byte	0x9f
 9697 0ed6 A8000000 		.4byte	.LVL262
 9698 0eda CC000000 		.4byte	.LVL265
 9699 0ede 0100     		.2byte	0x1
 9700 0ee0 57       		.byte	0x57
 9701 0ee1 CC000000 		.4byte	.LVL265
 9702 0ee5 E8000000 		.4byte	.LVL279
 9703 0ee9 0200     		.2byte	0x2
 9704 0eeb 30       		.byte	0x30
 9705 0eec 9F       		.byte	0x9f
 9706 0eed E8000000 		.4byte	.LVL279
 9707 0ef1 F2000000 		.4byte	.LVL281
 9708 0ef5 0100     		.2byte	0x1
 9709 0ef7 57       		.byte	0x57
 9710 0ef8 00000000 		.4byte	0
 9711 0efc 00000000 		.4byte	0
 9712              	.LLST82:
 9713 0f00 12000000 		.4byte	.LVL246
 9714 0f04 A8000000 		.4byte	.LVL262
 9715 0f08 0200     		.2byte	0x2
 9716 0f0a 30       		.byte	0x30
 9717 0f0b 9F       		.byte	0x9f
 9718 0f0c A8000000 		.4byte	.LVL262
 9719 0f10 CC000000 		.4byte	.LVL265
 9720 0f14 0100     		.2byte	0x1
 9721 0f16 59       		.byte	0x59
 9722 0f17 CC000000 		.4byte	.LVL265
 9723 0f1b E8000000 		.4byte	.LVL279
 9724 0f1f 0200     		.2byte	0x2
 9725 0f21 30       		.byte	0x30
 9726 0f22 9F       		.byte	0x9f
 9727 0f23 E8000000 		.4byte	.LVL279
 9728 0f27 F0000000 		.4byte	.LVL280
 9729 0f2b 0100     		.2byte	0x1
 9730 0f2d 53       		.byte	0x53
 9731 0f2e F0000000 		.4byte	.LVL280
 9732 0f32 F2000000 		.4byte	.LVL281
 9733 0f36 0100     		.2byte	0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 243


 9734 0f38 59       		.byte	0x59
 9735 0f39 00000000 		.4byte	0
 9736 0f3d 00000000 		.4byte	0
 9737              	.LLST83:
 9738 0f41 6C000000 		.4byte	.LVL254
 9739 0f45 A8000000 		.4byte	.LVL262
 9740 0f49 0100     		.2byte	0x1
 9741 0f4b 57       		.byte	0x57
 9742 0f4c 00000000 		.4byte	0
 9743 0f50 00000000 		.4byte	0
 9744              	.LLST84:
 9745 0f54 7C000000 		.4byte	.LVL256
 9746 0f58 7E000000 		.4byte	.LVL257
 9747 0f5c 0100     		.2byte	0x1
 9748 0f5e 50       		.byte	0x50
 9749 0f5f 7E000000 		.4byte	.LVL257
 9750 0f63 9E000000 		.4byte	.LVL261
 9751 0f67 0100     		.2byte	0x1
 9752 0f69 59       		.byte	0x59
 9753 0f6a 00000000 		.4byte	0
 9754 0f6e 00000000 		.4byte	0
 9755              	.LLST85:
 9756 0f72 84000000 		.4byte	.LVL258
 9757 0f76 86000000 		.4byte	.LVL259
 9758 0f7a 0100     		.2byte	0x1
 9759 0f7c 50       		.byte	0x50
 9760 0f7d 00000000 		.4byte	0
 9761 0f81 00000000 		.4byte	0
 9762              	.LLST86:
 9763 0f85 90000000 		.4byte	.LVL260
 9764 0f89 9E000000 		.4byte	.LVL261
 9765 0f8d 0100     		.2byte	0x1
 9766 0f8f 50       		.byte	0x50
 9767 0f90 00000000 		.4byte	0
 9768 0f94 00000000 		.4byte	0
 9769              	.LLST87:
 9770 0f98 16000000 		.4byte	.LVL247
 9771 0f9c 46000000 		.4byte	.LVL248
 9772 0fa0 0100     		.2byte	0x1
 9773 0fa2 50       		.byte	0x50
 9774 0fa3 CC000000 		.4byte	.LVL265
 9775 0fa7 CE000000 		.4byte	.LVL266
 9776 0fab 0100     		.2byte	0x1
 9777 0fad 50       		.byte	0x50
 9778 0fae D0000000 		.4byte	.LVL267
 9779 0fb2 D2000000 		.4byte	.LVL268
 9780 0fb6 0100     		.2byte	0x1
 9781 0fb8 50       		.byte	0x50
 9782 0fb9 D4000000 		.4byte	.LVL269
 9783 0fbd D6000000 		.4byte	.LVL270
 9784 0fc1 0100     		.2byte	0x1
 9785 0fc3 50       		.byte	0x50
 9786 0fc4 D8000000 		.4byte	.LVL271
 9787 0fc8 DA000000 		.4byte	.LVL272
 9788 0fcc 0100     		.2byte	0x1
 9789 0fce 50       		.byte	0x50
 9790 0fcf DC000000 		.4byte	.LVL273
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 244


 9791 0fd3 DE000000 		.4byte	.LVL274
 9792 0fd7 0100     		.2byte	0x1
 9793 0fd9 50       		.byte	0x50
 9794 0fda E0000000 		.4byte	.LVL275
 9795 0fde E2000000 		.4byte	.LVL276
 9796 0fe2 0100     		.2byte	0x1
 9797 0fe4 50       		.byte	0x50
 9798 0fe5 E4000000 		.4byte	.LVL277
 9799 0fe9 E6000000 		.4byte	.LVL278
 9800 0fed 0100     		.2byte	0x1
 9801 0fef 50       		.byte	0x50
 9802 0ff0 00000000 		.4byte	0
 9803 0ff4 00000000 		.4byte	0
 9804              	.LLST88:
 9805 0ff8 12000000 		.4byte	.LVL246
 9806 0ffc CA000000 		.4byte	.LVL264
 9807 1000 0200     		.2byte	0x2
 9808 1002 31       		.byte	0x31
 9809 1003 9F       		.byte	0x9f
 9810 1004 CA000000 		.4byte	.LVL264
 9811 1008 CC000000 		.4byte	.LVL265
 9812 100c 0100     		.2byte	0x1
 9813 100e 50       		.byte	0x50
 9814 100f CC000000 		.4byte	.LVL265
 9815 1013 F2000000 		.4byte	.LVL281
 9816 1017 0200     		.2byte	0x2
 9817 1019 31       		.byte	0x31
 9818 101a 9F       		.byte	0x9f
 9819 101b F2000000 		.4byte	.LVL281
 9820 101f 10010000 		.4byte	.LFE29
 9821 1023 0100     		.2byte	0x1
 9822 1025 50       		.byte	0x50
 9823 1026 00000000 		.4byte	0
 9824 102a 00000000 		.4byte	0
 9825              	.LLST89:
 9826 102e 00000000 		.4byte	.LVL285
 9827 1032 0C000000 		.4byte	.LVL287
 9828 1036 0100     		.2byte	0x1
 9829 1038 50       		.byte	0x50
 9830 1039 0C000000 		.4byte	.LVL287
 9831 103d 20000000 		.4byte	.LFE39
 9832 1041 0400     		.2byte	0x4
 9833 1043 F3       		.byte	0xf3
 9834 1044 01       		.uleb128 0x1
 9835 1045 50       		.byte	0x50
 9836 1046 9F       		.byte	0x9f
 9837 1047 00000000 		.4byte	0
 9838 104b 00000000 		.4byte	0
 9839              	.LLST90:
 9840 104f 00000000 		.4byte	.LVL285
 9841 1053 0F000000 		.4byte	.LVL288-1
 9842 1057 0100     		.2byte	0x1
 9843 1059 51       		.byte	0x51
 9844 105a 0F000000 		.4byte	.LVL288-1
 9845 105e 1E000000 		.4byte	.LVL290
 9846 1062 0100     		.2byte	0x1
 9847 1064 55       		.byte	0x55
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 245


 9848 1065 1E000000 		.4byte	.LVL290
 9849 1069 20000000 		.4byte	.LFE39
 9850 106d 0400     		.2byte	0x4
 9851 106f F3       		.byte	0xf3
 9852 1070 01       		.uleb128 0x1
 9853 1071 51       		.byte	0x51
 9854 1072 9F       		.byte	0x9f
 9855 1073 00000000 		.4byte	0
 9856 1077 00000000 		.4byte	0
 9857              	.LLST91:
 9858 107b 00000000 		.4byte	.LVL291
 9859 107f 0A000000 		.4byte	.LVL293
 9860 1083 0100     		.2byte	0x1
 9861 1085 50       		.byte	0x50
 9862 1086 0A000000 		.4byte	.LVL293
 9863 108a 1C000000 		.4byte	.LFE40
 9864 108e 0400     		.2byte	0x4
 9865 1090 F3       		.byte	0xf3
 9866 1091 01       		.uleb128 0x1
 9867 1092 50       		.byte	0x50
 9868 1093 9F       		.byte	0x9f
 9869 1094 00000000 		.4byte	0
 9870 1098 00000000 		.4byte	0
 9871              	.LLST92:
 9872 109c 00000000 		.4byte	.LVL295
 9873 10a0 0C000000 		.4byte	.LVL297
 9874 10a4 0100     		.2byte	0x1
 9875 10a6 50       		.byte	0x50
 9876 10a7 0C000000 		.4byte	.LVL297
 9877 10ab 22000000 		.4byte	.LFE41
 9878 10af 0400     		.2byte	0x4
 9879 10b1 F3       		.byte	0xf3
 9880 10b2 01       		.uleb128 0x1
 9881 10b3 50       		.byte	0x50
 9882 10b4 9F       		.byte	0x9f
 9883 10b5 00000000 		.4byte	0
 9884 10b9 00000000 		.4byte	0
 9885              	.LLST93:
 9886 10bd 00000000 		.4byte	.LVL295
 9887 10c1 0F000000 		.4byte	.LVL298-1
 9888 10c5 0100     		.2byte	0x1
 9889 10c7 51       		.byte	0x51
 9890 10c8 0F000000 		.4byte	.LVL298-1
 9891 10cc 20000000 		.4byte	.LVL300
 9892 10d0 0100     		.2byte	0x1
 9893 10d2 55       		.byte	0x55
 9894 10d3 20000000 		.4byte	.LVL300
 9895 10d7 22000000 		.4byte	.LFE41
 9896 10db 0400     		.2byte	0x4
 9897 10dd F3       		.byte	0xf3
 9898 10de 01       		.uleb128 0x1
 9899 10df 51       		.byte	0x51
 9900 10e0 9F       		.byte	0x9f
 9901 10e1 00000000 		.4byte	0
 9902 10e5 00000000 		.4byte	0
 9903              	.LLST94:
 9904 10e9 00000000 		.4byte	.LVL301
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 246


 9905 10ed 0A000000 		.4byte	.LVL303
 9906 10f1 0100     		.2byte	0x1
 9907 10f3 50       		.byte	0x50
 9908 10f4 0A000000 		.4byte	.LVL303
 9909 10f8 1E000000 		.4byte	.LFE42
 9910 10fc 0400     		.2byte	0x4
 9911 10fe F3       		.byte	0xf3
 9912 10ff 01       		.uleb128 0x1
 9913 1100 50       		.byte	0x50
 9914 1101 9F       		.byte	0x9f
 9915 1102 00000000 		.4byte	0
 9916 1106 00000000 		.4byte	0
 9917              	.LLST95:
 9918 110a 00000000 		.4byte	.LVL305
 9919 110e 0C000000 		.4byte	.LVL306
 9920 1112 0100     		.2byte	0x1
 9921 1114 50       		.byte	0x50
 9922 1115 0C000000 		.4byte	.LVL306
 9923 1119 4C000000 		.4byte	.LFE43
 9924 111d 0400     		.2byte	0x4
 9925 111f F3       		.byte	0xf3
 9926 1120 01       		.uleb128 0x1
 9927 1121 50       		.byte	0x50
 9928 1122 9F       		.byte	0x9f
 9929 1123 00000000 		.4byte	0
 9930 1127 00000000 		.4byte	0
 9931              	.LLST96:
 9932 112b 00000000 		.4byte	.LVL305
 9933 112f 0F000000 		.4byte	.LVL307-1
 9934 1133 0100     		.2byte	0x1
 9935 1135 51       		.byte	0x51
 9936 1136 0F000000 		.4byte	.LVL307-1
 9937 113a 4C000000 		.4byte	.LFE43
 9938 113e 0400     		.2byte	0x4
 9939 1140 F3       		.byte	0xf3
 9940 1141 01       		.uleb128 0x1
 9941 1142 51       		.byte	0x51
 9942 1143 9F       		.byte	0x9f
 9943 1144 00000000 		.4byte	0
 9944 1148 00000000 		.4byte	0
 9945              	.LLST97:
 9946 114c 26000000 		.4byte	.LVL310
 9947 1150 45000000 		.4byte	.LVL316-1
 9948 1154 0100     		.2byte	0x1
 9949 1156 50       		.byte	0x50
 9950 1157 00000000 		.4byte	0
 9951 115b 00000000 		.4byte	0
 9952              	.LLST98:
 9953 115f 22000000 		.4byte	.LVL309
 9954 1163 46000000 		.4byte	.LVL317
 9955 1167 0100     		.2byte	0x1
 9956 1169 55       		.byte	0x55
 9957 116a 00000000 		.4byte	0
 9958 116e 00000000 		.4byte	0
 9959              	.LLST99:
 9960 1172 32000000 		.4byte	.LVL311
 9961 1176 38000000 		.4byte	.LVL312
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 247


 9962 117a 0100     		.2byte	0x1
 9963 117c 51       		.byte	0x51
 9964 117d 3A000000 		.4byte	.LVL313
 9965 1181 3C000000 		.4byte	.LVL314
 9966 1185 0100     		.2byte	0x1
 9967 1187 51       		.byte	0x51
 9968 1188 3C000000 		.4byte	.LVL314
 9969 118c 40000000 		.4byte	.LVL315
 9970 1190 0100     		.2byte	0x1
 9971 1192 53       		.byte	0x53
 9972 1193 40000000 		.4byte	.LVL315
 9973 1197 45000000 		.4byte	.LVL316-1
 9974 119b 0100     		.2byte	0x1
 9975 119d 51       		.byte	0x51
 9976 119e 00000000 		.4byte	0
 9977 11a2 00000000 		.4byte	0
 9978              	.LLST100:
 9979 11a6 00000000 		.4byte	.LVL318
 9980 11aa 0A000000 		.4byte	.LVL319
 9981 11ae 0100     		.2byte	0x1
 9982 11b0 50       		.byte	0x50
 9983 11b1 0A000000 		.4byte	.LVL319
 9984 11b5 2C000000 		.4byte	.LFE44
 9985 11b9 0400     		.2byte	0x4
 9986 11bb F3       		.byte	0xf3
 9987 11bc 01       		.uleb128 0x1
 9988 11bd 50       		.byte	0x50
 9989 11be 9F       		.byte	0x9f
 9990 11bf 00000000 		.4byte	0
 9991 11c3 00000000 		.4byte	0
 9992              	.LLST101:
 9993 11c7 24000000 		.4byte	.LVL321
 9994 11cb 26000000 		.4byte	.LVL322
 9995 11cf 0100     		.2byte	0x1
 9996 11d1 50       		.byte	0x50
 9997 11d2 00000000 		.4byte	0
 9998 11d6 00000000 		.4byte	0
 9999              	.LLST102:
 10000 11da 00000000 		.4byte	.LVL323
 10001 11de 06000000 		.4byte	.LVL324
 10002 11e2 0100     		.2byte	0x1
 10003 11e4 50       		.byte	0x50
 10004 11e5 06000000 		.4byte	.LVL324
 10005 11e9 26000000 		.4byte	.LVL328
 10006 11ed 0100     		.2byte	0x1
 10007 11ef 54       		.byte	0x54
 10008 11f0 00000000 		.4byte	0
 10009 11f4 00000000 		.4byte	0
 10010              	.LLST103:
 10011 11f8 1C000000 		.4byte	.LVL333
 10012 11fc 20000000 		.4byte	.LVL334
 10013 1200 0200     		.2byte	0x2
 10014 1202 30       		.byte	0x30
 10015 1203 9F       		.byte	0x9f
 10016 1204 20000000 		.4byte	.LVL334
 10017 1208 32000000 		.4byte	.LVL335
 10018 120c 0100     		.2byte	0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 248


 10019 120e 53       		.byte	0x53
 10020 120f 32000000 		.4byte	.LVL335
 10021 1213 34000000 		.4byte	.LVL336
 10022 1217 0300     		.2byte	0x3
 10023 1219 73       		.byte	0x73
 10024 121a 7D       		.sleb128 -3
 10025 121b 9F       		.byte	0x9f
 10026 121c 34000000 		.4byte	.LVL336
 10027 1220 3C000000 		.4byte	.LVL338
 10028 1224 0100     		.2byte	0x1
 10029 1226 53       		.byte	0x53
 10030 1227 00000000 		.4byte	0
 10031 122b 00000000 		.4byte	0
 10032              	.LLST104:
 10033 122f 1C000000 		.4byte	.LVL333
 10034 1233 32000000 		.4byte	.LVL335
 10035 1237 0200     		.2byte	0x2
 10036 1239 33       		.byte	0x33
 10037 123a 9F       		.byte	0x9f
 10038 123b 32000000 		.4byte	.LVL335
 10039 123f 34000000 		.4byte	.LVL336
 10040 1243 0100     		.2byte	0x1
 10041 1245 53       		.byte	0x53
 10042 1246 34000000 		.4byte	.LVL336
 10043 124a 3C000000 		.4byte	.LVL338
 10044 124e 0200     		.2byte	0x2
 10045 1250 33       		.byte	0x33
 10046 1251 9F       		.byte	0x9f
 10047 1252 3C000000 		.4byte	.LVL338
 10048 1256 66000000 		.4byte	.LVL340
 10049 125a 0100     		.2byte	0x1
 10050 125c 53       		.byte	0x53
 10051 125d 00000000 		.4byte	0
 10052 1261 00000000 		.4byte	0
 10053              	.LLST105:
 10054 1265 12000000 		.4byte	.LVL332
 10055 1269 D2000000 		.4byte	.LVL353
 10056 126d 0100     		.2byte	0x1
 10057 126f 55       		.byte	0x55
 10058 1270 00000000 		.4byte	0
 10059 1274 00000000 		.4byte	0
 10060              	.LLST106:
 10061 1278 60000000 		.4byte	.LVL339
 10062 127c 78000000 		.4byte	.LVL341
 10063 1280 0100     		.2byte	0x1
 10064 1282 51       		.byte	0x51
 10065 1283 78000000 		.4byte	.LVL341
 10066 1287 82000000 		.4byte	.LVL343
 10067 128b 0100     		.2byte	0x1
 10068 128d 53       		.byte	0x53
 10069 128e 82000000 		.4byte	.LVL343
 10070 1292 86000000 		.4byte	.LVL344
 10071 1296 0200     		.2byte	0x2
 10072 1298 74       		.byte	0x74
 10073 1299 00       		.sleb128 0
 10074 129a 9E000000 		.4byte	.LVL346
 10075 129e C2000000 		.4byte	.LVL352
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 249


 10076 12a2 0100     		.2byte	0x1
 10077 12a4 56       		.byte	0x56
 10078 12a5 00000000 		.4byte	0
 10079 12a9 00000000 		.4byte	0
 10080              	.LLST107:
 10081 12ad 04000000 		.4byte	.LVL329
 10082 12b1 A2000000 		.4byte	.LVL347
 10083 12b5 0200     		.2byte	0x2
 10084 12b7 30       		.byte	0x30
 10085 12b8 9F       		.byte	0x9f
 10086 12b9 A2000000 		.4byte	.LVL347
 10087 12bd D2000000 		.4byte	.LVL353
 10088 12c1 0100     		.2byte	0x1
 10089 12c3 54       		.byte	0x54
 10090 12c4 00000000 		.4byte	0
 10091 12c8 00000000 		.4byte	0
 10092              	.LLST108:
 10093 12cc 00000000 		.4byte	.LVL354
 10094 12d0 08000000 		.4byte	.LVL355
 10095 12d4 0100     		.2byte	0x1
 10096 12d6 50       		.byte	0x50
 10097 12d7 08000000 		.4byte	.LVL355
 10098 12db 14000000 		.4byte	.LFE53
 10099 12df 0400     		.2byte	0x4
 10100 12e1 F3       		.byte	0xf3
 10101 12e2 01       		.uleb128 0x1
 10102 12e3 50       		.byte	0x50
 10103 12e4 9F       		.byte	0x9f
 10104 12e5 00000000 		.4byte	0
 10105 12e9 00000000 		.4byte	0
 10106              	.LLST109:
 10107 12ed 00000000 		.4byte	.LVL357
 10108 12f1 13000000 		.4byte	.LVL359-1
 10109 12f5 0100     		.2byte	0x1
 10110 12f7 50       		.byte	0x50
 10111 12f8 13000000 		.4byte	.LVL359-1
 10112 12fc 12010000 		.4byte	.LVL391
 10113 1300 0100     		.2byte	0x1
 10114 1302 54       		.byte	0x54
 10115 1303 12010000 		.4byte	.LVL391
 10116 1307 40010000 		.4byte	.LVL394
 10117 130b 0300     		.2byte	0x3
 10118 130d 76       		.byte	0x76
 10119 130e 03       		.sleb128 3
 10120 130f 9F       		.byte	0x9f
 10121 1310 40010000 		.4byte	.LVL394
 10122 1314 46010000 		.4byte	.LVL395
 10123 1318 0100     		.2byte	0x1
 10124 131a 54       		.byte	0x54
 10125 131b 46010000 		.4byte	.LVL395
 10126 131f 62010000 		.4byte	.LVL401
 10127 1323 0300     		.2byte	0x3
 10128 1325 76       		.byte	0x76
 10129 1326 03       		.sleb128 3
 10130 1327 9F       		.byte	0x9f
 10131 1328 62010000 		.4byte	.LVL401
 10132 132c BC010000 		.4byte	.LFE15
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 250


 10133 1330 0400     		.2byte	0x4
 10134 1332 F3       		.byte	0xf3
 10135 1333 01       		.uleb128 0x1
 10136 1334 50       		.byte	0x50
 10137 1335 9F       		.byte	0x9f
 10138 1336 00000000 		.4byte	0
 10139 133a 00000000 		.4byte	0
 10140              	.LLST110:
 10141 133e 68000000 		.4byte	.LVL371
 10142 1342 72000000 		.4byte	.LVL373
 10143 1346 0100     		.2byte	0x1
 10144 1348 59       		.byte	0x59
 10145 1349 84000000 		.4byte	.LVL374
 10146 134d 8E000000 		.4byte	.LVL376
 10147 1351 0100     		.2byte	0x1
 10148 1353 59       		.byte	0x59
 10149 1354 A0000000 		.4byte	.LVL377
 10150 1358 AA000000 		.4byte	.LVL379
 10151 135c 0100     		.2byte	0x1
 10152 135e 59       		.byte	0x59
 10153 135f BC000000 		.4byte	.LVL380
 10154 1363 C6000000 		.4byte	.LVL382
 10155 1367 0100     		.2byte	0x1
 10156 1369 59       		.byte	0x59
 10157 136a CE000000 		.4byte	.LVL383
 10158 136e 40010000 		.4byte	.LVL394
 10159 1372 0100     		.2byte	0x1
 10160 1374 59       		.byte	0x59
 10161 1375 00000000 		.4byte	0
 10162 1379 00000000 		.4byte	0
 10163              	.LLST111:
 10164 137d 70000000 		.4byte	.LVL372
 10165 1381 72000000 		.4byte	.LVL373
 10166 1385 0100     		.2byte	0x1
 10167 1387 58       		.byte	0x58
 10168 1388 8C000000 		.4byte	.LVL375
 10169 138c 8E000000 		.4byte	.LVL376
 10170 1390 0100     		.2byte	0x1
 10171 1392 58       		.byte	0x58
 10172 1393 A8000000 		.4byte	.LVL378
 10173 1397 AA000000 		.4byte	.LVL379
 10174 139b 0100     		.2byte	0x1
 10175 139d 58       		.byte	0x58
 10176 139e C4000000 		.4byte	.LVL381
 10177 13a2 C6000000 		.4byte	.LVL382
 10178 13a6 0100     		.2byte	0x1
 10179 13a8 58       		.byte	0x58
 10180 13a9 D6000000 		.4byte	.LVL384
 10181 13ad 40010000 		.4byte	.LVL394
 10182 13b1 0100     		.2byte	0x1
 10183 13b3 58       		.byte	0x58
 10184 13b4 00000000 		.4byte	0
 10185 13b8 00000000 		.4byte	0
 10186              	.LLST112:
 10187 13bc DA000000 		.4byte	.LVL385
 10188 13c0 40010000 		.4byte	.LVL394
 10189 13c4 0100     		.2byte	0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 251


 10190 13c6 57       		.byte	0x57
 10191 13c7 00000000 		.4byte	0
 10192 13cb 00000000 		.4byte	0
 10193              	.LLST113:
 10194 13cf EE000000 		.4byte	.LVL387
 10195 13d3 F2000000 		.4byte	.LVL388
 10196 13d7 0200     		.2byte	0x2
 10197 13d9 49       		.byte	0x49
 10198 13da 9F       		.byte	0x9f
 10199 13db FA000000 		.4byte	.LVL389
 10200 13df 40010000 		.4byte	.LVL394
 10201 13e3 0100     		.2byte	0x1
 10202 13e5 55       		.byte	0x55
 10203 13e6 00000000 		.4byte	0
 10204 13ea 00000000 		.4byte	0
 10205              	.LLST114:
 10206 13ee 10000000 		.4byte	.LVL358
 10207 13f2 1E000000 		.4byte	.LVL362
 10208 13f6 0200     		.2byte	0x2
 10209 13f8 30       		.byte	0x30
 10210 13f9 9F       		.byte	0x9f
 10211 13fa 1E000000 		.4byte	.LVL362
 10212 13fe 28000000 		.4byte	.LVL364
 10213 1402 0200     		.2byte	0x2
 10214 1404 31       		.byte	0x31
 10215 1405 9F       		.byte	0x9f
 10216 1406 28000000 		.4byte	.LVL364
 10217 140a 2C000000 		.4byte	.LVL365
 10218 140e 0200     		.2byte	0x2
 10219 1410 30       		.byte	0x30
 10220 1411 9F       		.byte	0x9f
 10221 1412 2C000000 		.4byte	.LVL365
 10222 1416 4C010000 		.4byte	.LVL396
 10223 141a 0100     		.2byte	0x1
 10224 141c 5A       		.byte	0x5a
 10225 141d 4C010000 		.4byte	.LVL396
 10226 1421 4F010000 		.4byte	.LVL397-1
 10227 1425 0100     		.2byte	0x1
 10228 1427 53       		.byte	0x53
 10229 1428 4F010000 		.4byte	.LVL397-1
 10230 142c 62010000 		.4byte	.LVL402
 10231 1430 0100     		.2byte	0x1
 10232 1432 5A       		.byte	0x5a
 10233 1433 00000000 		.4byte	0
 10234 1437 00000000 		.4byte	0
 10235              	.LLST115:
 10236 143b 10000000 		.4byte	.LVL358
 10237 143f 3C000000 		.4byte	.LVL367
 10238 1443 0200     		.2byte	0x2
 10239 1445 30       		.byte	0x30
 10240 1446 9F       		.byte	0x9f
 10241 1447 3C000000 		.4byte	.LVL367
 10242 144b 46000000 		.4byte	.LVL369
 10243 144f 0200     		.2byte	0x2
 10244 1451 31       		.byte	0x31
 10245 1452 9F       		.byte	0x9f
 10246 1453 46000000 		.4byte	.LVL369
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 252


 10247 1457 50000000 		.4byte	.LVL370
 10248 145b 0200     		.2byte	0x2
 10249 145d 30       		.byte	0x30
 10250 145e 9F       		.byte	0x9f
 10251 145f 50000000 		.4byte	.LVL370
 10252 1463 56010000 		.4byte	.LVL398
 10253 1467 0100     		.2byte	0x1
 10254 1469 5B       		.byte	0x5b
 10255 146a 56010000 		.4byte	.LVL398
 10256 146e 59010000 		.4byte	.LVL399-1
 10257 1472 0100     		.2byte	0x1
 10258 1474 53       		.byte	0x53
 10259 1475 59010000 		.4byte	.LVL399-1
 10260 1479 62010000 		.4byte	.LVL403
 10261 147d 0100     		.2byte	0x1
 10262 147f 5B       		.byte	0x5b
 10263 1480 00000000 		.4byte	0
 10264 1484 00000000 		.4byte	0
 10265              	.LLST116:
 10266 1488 16000000 		.4byte	.LVL360
 10267 148c E8000000 		.4byte	.LVL386
 10268 1490 0200     		.2byte	0x2
 10269 1492 91       		.byte	0x91
 10270 1493 54       		.sleb128 -44
 10271 1494 F2000000 		.4byte	.LVL388
 10272 1498 FA000000 		.4byte	.LVL389
 10273 149c 0200     		.2byte	0x2
 10274 149e 91       		.byte	0x91
 10275 149f 54       		.sleb128 -44
 10276 14a0 40010000 		.4byte	.LVL394
 10277 14a4 46010000 		.4byte	.LVL395
 10278 14a8 0200     		.2byte	0x2
 10279 14aa 91       		.byte	0x91
 10280 14ab 54       		.sleb128 -44
 10281 14ac 00000000 		.4byte	0
 10282 14b0 00000000 		.4byte	0
 10283              	.LLST117:
 10284 14b4 00000000 		.4byte	.LVL404
 10285 14b8 12000000 		.4byte	.LVL406
 10286 14bc 0100     		.2byte	0x1
 10287 14be 50       		.byte	0x50
 10288 14bf 12000000 		.4byte	.LVL406
 10289 14c3 40000000 		.4byte	.LVL412
 10290 14c7 0100     		.2byte	0x1
 10291 14c9 54       		.byte	0x54
 10292 14ca 00000000 		.4byte	0
 10293 14ce 00000000 		.4byte	0
 10294              	.LLST118:
 10295 14d2 04000000 		.4byte	.LVL405
 10296 14d6 40000000 		.4byte	.LVL411
 10297 14da 0200     		.2byte	0x2
 10298 14dc 30       		.byte	0x30
 10299 14dd 9F       		.byte	0x9f
 10300 14de 40000000 		.4byte	.LVL411
 10301 14e2 48000000 		.4byte	.LFE16
 10302 14e6 0100     		.2byte	0x1
 10303 14e8 50       		.byte	0x50
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 253


 10304 14e9 00000000 		.4byte	0
 10305 14ed 00000000 		.4byte	0
 10306              	.LLST119:
 10307 14f1 00000000 		.4byte	.LVL413
 10308 14f5 11000000 		.4byte	.LVL415-1
 10309 14f9 0100     		.2byte	0x1
 10310 14fb 50       		.byte	0x50
 10311 14fc 11000000 		.4byte	.LVL415-1
 10312 1500 8A000000 		.4byte	.LVL427
 10313 1504 0100     		.2byte	0x1
 10314 1506 54       		.byte	0x54
 10315 1507 8A000000 		.4byte	.LVL427
 10316 150b 8C000000 		.4byte	.LVL428
 10317 150f 0100     		.2byte	0x1
 10318 1511 50       		.byte	0x50
 10319 1512 8C000000 		.4byte	.LVL428
 10320 1516 8E000000 		.4byte	.LVL429
 10321 151a 0100     		.2byte	0x1
 10322 151c 54       		.byte	0x54
 10323 151d 8E000000 		.4byte	.LVL429
 10324 1521 90000000 		.4byte	.LVL430
 10325 1525 0100     		.2byte	0x1
 10326 1527 50       		.byte	0x50
 10327 1528 90000000 		.4byte	.LVL430
 10328 152c 90000000 		.4byte	.LVL431
 10329 1530 0100     		.2byte	0x1
 10330 1532 54       		.byte	0x54
 10331 1533 90000000 		.4byte	.LVL431
 10332 1537 9C000000 		.4byte	.LFE21
 10333 153b 0400     		.2byte	0x4
 10334 153d F3       		.byte	0xf3
 10335 153e 01       		.uleb128 0x1
 10336 153f 50       		.byte	0x50
 10337 1540 9F       		.byte	0x9f
 10338 1541 00000000 		.4byte	0
 10339 1545 00000000 		.4byte	0
 10340              	.LLST120:
 10341 1549 00000000 		.4byte	.LVL413
 10342 154d 11000000 		.4byte	.LVL415-1
 10343 1551 0100     		.2byte	0x1
 10344 1553 51       		.byte	0x51
 10345 1554 11000000 		.4byte	.LVL415-1
 10346 1558 62000000 		.4byte	.LVL420
 10347 155c 0100     		.2byte	0x1
 10348 155e 55       		.byte	0x55
 10349 155f 62000000 		.4byte	.LVL420
 10350 1563 80000000 		.4byte	.LVL425
 10351 1567 0400     		.2byte	0x4
 10352 1569 F3       		.byte	0xf3
 10353 156a 01       		.uleb128 0x1
 10354 156b 51       		.byte	0x51
 10355 156c 9F       		.byte	0x9f
 10356 156d 80000000 		.4byte	.LVL425
 10357 1571 82000000 		.4byte	.LVL426
 10358 1575 0100     		.2byte	0x1
 10359 1577 55       		.byte	0x55
 10360 1578 82000000 		.4byte	.LVL426
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 254


 10361 157c 8A000000 		.4byte	.LVL427
 10362 1580 0400     		.2byte	0x4
 10363 1582 F3       		.byte	0xf3
 10364 1583 01       		.uleb128 0x1
 10365 1584 51       		.byte	0x51
 10366 1585 9F       		.byte	0x9f
 10367 1586 8A000000 		.4byte	.LVL427
 10368 158a 90000000 		.4byte	.LVL430
 10369 158e 0100     		.2byte	0x1
 10370 1590 51       		.byte	0x51
 10371 1591 90000000 		.4byte	.LVL430
 10372 1595 9C000000 		.4byte	.LFE21
 10373 1599 0400     		.2byte	0x4
 10374 159b F3       		.byte	0xf3
 10375 159c 01       		.uleb128 0x1
 10376 159d 51       		.byte	0x51
 10377 159e 9F       		.byte	0x9f
 10378 159f 00000000 		.4byte	0
 10379 15a3 00000000 		.4byte	0
 10380              	.LLST121:
 10381 15a7 06000000 		.4byte	.LVL414
 10382 15ab 62000000 		.4byte	.LVL420
 10383 15af 0300     		.2byte	0x3
 10384 15b1 08       		.byte	0x8
 10385 15b2 FF       		.byte	0xff
 10386 15b3 9F       		.byte	0x9f
 10387 15b4 62000000 		.4byte	.LVL420
 10388 15b8 80000000 		.4byte	.LVL425
 10389 15bc 0100     		.2byte	0x1
 10390 15be 55       		.byte	0x55
 10391 15bf 80000000 		.4byte	.LVL425
 10392 15c3 82000000 		.4byte	.LVL426
 10393 15c7 0300     		.2byte	0x3
 10394 15c9 08       		.byte	0x8
 10395 15ca FF       		.byte	0xff
 10396 15cb 9F       		.byte	0x9f
 10397 15cc 82000000 		.4byte	.LVL426
 10398 15d0 8A000000 		.4byte	.LVL427
 10399 15d4 0100     		.2byte	0x1
 10400 15d6 55       		.byte	0x55
 10401 15d7 8A000000 		.4byte	.LVL427
 10402 15db 90000000 		.4byte	.LVL430
 10403 15df 0300     		.2byte	0x3
 10404 15e1 08       		.byte	0x8
 10405 15e2 FF       		.byte	0xff
 10406 15e3 9F       		.byte	0x9f
 10407 15e4 00000000 		.4byte	0
 10408 15e8 00000000 		.4byte	0
 10409              	.LLST122:
 10410 15ec 12000000 		.4byte	.LVL415
 10411 15f0 39000000 		.4byte	.LVL416-1
 10412 15f4 0100     		.2byte	0x1
 10413 15f6 50       		.byte	0x50
 10414 15f7 44000000 		.4byte	.LVL418
 10415 15fb 59000000 		.4byte	.LVL419-1
 10416 15ff 0100     		.2byte	0x1
 10417 1601 50       		.byte	0x50
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 255


 10418 1602 00000000 		.4byte	0
 10419 1606 00000000 		.4byte	0
 10420              	.LLST123:
 10421 160a 06000000 		.4byte	.LVL414
 10422 160e 90000000 		.4byte	.LVL430
 10423 1612 0200     		.2byte	0x2
 10424 1614 30       		.byte	0x30
 10425 1615 9F       		.byte	0x9f
 10426 1616 90000000 		.4byte	.LVL430
 10427 161a 9C000000 		.4byte	.LFE21
 10428 161e 0100     		.2byte	0x1
 10429 1620 50       		.byte	0x50
 10430 1621 00000000 		.4byte	0
 10431 1625 00000000 		.4byte	0
 10432              	.LLST124:
 10433 1629 00000000 		.4byte	.LVL432
 10434 162d 14000000 		.4byte	.LVL433
 10435 1631 0100     		.2byte	0x1
 10436 1633 50       		.byte	0x50
 10437 1634 14000000 		.4byte	.LVL433
 10438 1638 18000000 		.4byte	.LVL434
 10439 163c 0100     		.2byte	0x1
 10440 163e 53       		.byte	0x53
 10441 163f 18000000 		.4byte	.LVL434
 10442 1643 44000000 		.4byte	.LFE32
 10443 1647 0400     		.2byte	0x4
 10444 1649 F3       		.byte	0xf3
 10445 164a 01       		.uleb128 0x1
 10446 164b 50       		.byte	0x50
 10447 164c 9F       		.byte	0x9f
 10448 164d 00000000 		.4byte	0
 10449 1651 00000000 		.4byte	0
 10450              	.LLST125:
 10451 1655 00000000 		.4byte	.LVL437
 10452 1659 1A000000 		.4byte	.LVL438
 10453 165d 0100     		.2byte	0x1
 10454 165f 50       		.byte	0x50
 10455 1660 1A000000 		.4byte	.LVL438
 10456 1664 4C000000 		.4byte	.LFE54
 10457 1668 0400     		.2byte	0x4
 10458 166a F3       		.byte	0xf3
 10459 166b 01       		.uleb128 0x1
 10460 166c 50       		.byte	0x50
 10461 166d 9F       		.byte	0x9f
 10462 166e 00000000 		.4byte	0
 10463 1672 00000000 		.4byte	0
 10464              	.LLST126:
 10465 1676 00000000 		.4byte	.LVL442
 10466 167a 02000000 		.4byte	.LVL443
 10467 167e 0100     		.2byte	0x1
 10468 1680 50       		.byte	0x50
 10469 1681 02000000 		.4byte	.LVL443
 10470 1685 10000000 		.4byte	.LFE61
 10471 1689 0400     		.2byte	0x4
 10472 168b F3       		.byte	0xf3
 10473 168c 01       		.uleb128 0x1
 10474 168d 50       		.byte	0x50
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 256


 10475 168e 9F       		.byte	0x9f
 10476 168f 00000000 		.4byte	0
 10477 1693 00000000 		.4byte	0
 10478              	.LLST127:
 10479 1697 0C000000 		.4byte	.LVL446
 10480 169b 1E000000 		.4byte	.LVL449
 10481 169f 0100     		.2byte	0x1
 10482 16a1 54       		.byte	0x54
 10483 16a2 20000000 		.4byte	.LVL450
 10484 16a6 24000000 		.4byte	.LVL451
 10485 16aa 0100     		.2byte	0x1
 10486 16ac 54       		.byte	0x54
 10487 16ad 00000000 		.4byte	0
 10488 16b1 00000000 		.4byte	0
 10489              	.LLST128:
 10490 16b5 02000000 		.4byte	.LVL452
 10491 16b9 06000000 		.4byte	.LVL453
 10492 16bd 0200     		.2byte	0x2
 10493 16bf 30       		.byte	0x30
 10494 16c0 9F       		.byte	0x9f
 10495 16c1 06000000 		.4byte	.LVL453
 10496 16c5 1D000000 		.4byte	.LVL455-1
 10497 16c9 0100     		.2byte	0x1
 10498 16cb 53       		.byte	0x53
 10499 16cc 00000000 		.4byte	0
 10500 16d0 00000000 		.4byte	0
 10501              	.LLST129:
 10502 16d4 00000000 		.4byte	.LVL462
 10503 16d8 02000000 		.4byte	.LVL463
 10504 16dc 0100     		.2byte	0x1
 10505 16de 50       		.byte	0x50
 10506 16df 02000000 		.4byte	.LVL463
 10507 16e3 10000000 		.4byte	.LFE68
 10508 16e7 0400     		.2byte	0x4
 10509 16e9 F3       		.byte	0xf3
 10510 16ea 01       		.uleb128 0x1
 10511 16eb 50       		.byte	0x50
 10512 16ec 9F       		.byte	0x9f
 10513 16ed 00000000 		.4byte	0
 10514 16f1 00000000 		.4byte	0
 10515              	.LLST130:
 10516 16f5 00000000 		.4byte	.LVL465
 10517 16f9 02000000 		.4byte	.LVL466
 10518 16fd 0100     		.2byte	0x1
 10519 16ff 50       		.byte	0x50
 10520 1700 02000000 		.4byte	.LVL466
 10521 1704 10000000 		.4byte	.LFE69
 10522 1708 0400     		.2byte	0x4
 10523 170a F3       		.byte	0xf3
 10524 170b 01       		.uleb128 0x1
 10525 170c 50       		.byte	0x50
 10526 170d 9F       		.byte	0x9f
 10527 170e 00000000 		.4byte	0
 10528 1712 00000000 		.4byte	0
 10529              	.LLST131:
 10530 1716 00000000 		.4byte	.LVL468
 10531 171a 0A000000 		.4byte	.LVL470
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 257


 10532 171e 0100     		.2byte	0x1
 10533 1720 50       		.byte	0x50
 10534 1721 0A000000 		.4byte	.LVL470
 10535 1725 20000000 		.4byte	.LFE72
 10536 1729 0400     		.2byte	0x4
 10537 172b F3       		.byte	0xf3
 10538 172c 01       		.uleb128 0x1
 10539 172d 50       		.byte	0x50
 10540 172e 9F       		.byte	0x9f
 10541 172f 00000000 		.4byte	0
 10542 1733 00000000 		.4byte	0
 10543              	.LLST132:
 10544 1737 08000000 		.4byte	.LVL469
 10545 173b 12000000 		.4byte	.LVL471
 10546 173f 0100     		.2byte	0x1
 10547 1741 52       		.byte	0x52
 10548 1742 12000000 		.4byte	.LVL471
 10549 1746 20000000 		.4byte	.LFE72
 10550 174a 0100     		.2byte	0x1
 10551 174c 50       		.byte	0x50
 10552 174d 00000000 		.4byte	0
 10553 1751 00000000 		.4byte	0
 10554              	.LLST133:
 10555 1755 00000000 		.4byte	.LVL472
 10556 1759 0A000000 		.4byte	.LVL474
 10557 175d 0100     		.2byte	0x1
 10558 175f 50       		.byte	0x50
 10559 1760 0A000000 		.4byte	.LVL474
 10560 1764 20000000 		.4byte	.LFE73
 10561 1768 0400     		.2byte	0x4
 10562 176a F3       		.byte	0xf3
 10563 176b 01       		.uleb128 0x1
 10564 176c 50       		.byte	0x50
 10565 176d 9F       		.byte	0x9f
 10566 176e 00000000 		.4byte	0
 10567 1772 00000000 		.4byte	0
 10568              	.LLST134:
 10569 1776 08000000 		.4byte	.LVL473
 10570 177a 12000000 		.4byte	.LVL475
 10571 177e 0100     		.2byte	0x1
 10572 1780 52       		.byte	0x52
 10573 1781 12000000 		.4byte	.LVL475
 10574 1785 20000000 		.4byte	.LFE73
 10575 1789 0100     		.2byte	0x1
 10576 178b 50       		.byte	0x50
 10577 178c 00000000 		.4byte	0
 10578 1790 00000000 		.4byte	0
 10579              	.LLST135:
 10580 1794 00000000 		.4byte	.LVL476
 10581 1798 0A000000 		.4byte	.LVL478
 10582 179c 0100     		.2byte	0x1
 10583 179e 50       		.byte	0x50
 10584 179f 0A000000 		.4byte	.LVL478
 10585 17a3 20000000 		.4byte	.LFE74
 10586 17a7 0400     		.2byte	0x4
 10587 17a9 F3       		.byte	0xf3
 10588 17aa 01       		.uleb128 0x1
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 258


 10589 17ab 50       		.byte	0x50
 10590 17ac 9F       		.byte	0x9f
 10591 17ad 00000000 		.4byte	0
 10592 17b1 00000000 		.4byte	0
 10593              	.LLST136:
 10594 17b5 08000000 		.4byte	.LVL477
 10595 17b9 12000000 		.4byte	.LVL479
 10596 17bd 0100     		.2byte	0x1
 10597 17bf 52       		.byte	0x52
 10598 17c0 12000000 		.4byte	.LVL479
 10599 17c4 20000000 		.4byte	.LFE74
 10600 17c8 0100     		.2byte	0x1
 10601 17ca 50       		.byte	0x50
 10602 17cb 00000000 		.4byte	0
 10603 17cf 00000000 		.4byte	0
 10604              	.LLST137:
 10605 17d3 00000000 		.4byte	.LVL480
 10606 17d7 08000000 		.4byte	.LVL481
 10607 17db 0100     		.2byte	0x1
 10608 17dd 50       		.byte	0x50
 10609 17de 08000000 		.4byte	.LVL481
 10610 17e2 1C000000 		.4byte	.LVL485
 10611 17e6 0400     		.2byte	0x4
 10612 17e8 F3       		.byte	0xf3
 10613 17e9 01       		.uleb128 0x1
 10614 17ea 50       		.byte	0x50
 10615 17eb 9F       		.byte	0x9f
 10616 17ec 1C000000 		.4byte	.LVL485
 10617 17f0 22000000 		.4byte	.LVL486
 10618 17f4 0100     		.2byte	0x1
 10619 17f6 50       		.byte	0x50
 10620 17f7 22000000 		.4byte	.LVL486
 10621 17fb 36000000 		.4byte	.LVL490
 10622 17ff 0400     		.2byte	0x4
 10623 1801 F3       		.byte	0xf3
 10624 1802 01       		.uleb128 0x1
 10625 1803 50       		.byte	0x50
 10626 1804 9F       		.byte	0x9f
 10627 1805 36000000 		.4byte	.LVL490
 10628 1809 3C000000 		.4byte	.LVL491
 10629 180d 0100     		.2byte	0x1
 10630 180f 50       		.byte	0x50
 10631 1810 3C000000 		.4byte	.LVL491
 10632 1814 50000000 		.4byte	.LVL495
 10633 1818 0400     		.2byte	0x4
 10634 181a F3       		.byte	0xf3
 10635 181b 01       		.uleb128 0x1
 10636 181c 50       		.byte	0x50
 10637 181d 9F       		.byte	0x9f
 10638 181e 50000000 		.4byte	.LVL495
 10639 1822 52000000 		.4byte	.LVL496
 10640 1826 0100     		.2byte	0x1
 10641 1828 50       		.byte	0x50
 10642 1829 52000000 		.4byte	.LVL496
 10643 182d 68000000 		.4byte	.LFE75
 10644 1831 0400     		.2byte	0x4
 10645 1833 F3       		.byte	0xf3
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 259


 10646 1834 01       		.uleb128 0x1
 10647 1835 50       		.byte	0x50
 10648 1836 9F       		.byte	0x9f
 10649 1837 00000000 		.4byte	0
 10650 183b 00000000 		.4byte	0
 10651              	.LLST138:
 10652 183f 00000000 		.4byte	.LVL480
 10653 1843 10000000 		.4byte	.LVL483
 10654 1847 0100     		.2byte	0x1
 10655 1849 51       		.byte	0x51
 10656 184a 10000000 		.4byte	.LVL483
 10657 184e 1C000000 		.4byte	.LVL485
 10658 1852 0400     		.2byte	0x4
 10659 1854 F3       		.byte	0xf3
 10660 1855 01       		.uleb128 0x1
 10661 1856 51       		.byte	0x51
 10662 1857 9F       		.byte	0x9f
 10663 1858 1C000000 		.4byte	.LVL485
 10664 185c 2A000000 		.4byte	.LVL488
 10665 1860 0100     		.2byte	0x1
 10666 1862 51       		.byte	0x51
 10667 1863 2A000000 		.4byte	.LVL488
 10668 1867 36000000 		.4byte	.LVL490
 10669 186b 0400     		.2byte	0x4
 10670 186d F3       		.byte	0xf3
 10671 186e 01       		.uleb128 0x1
 10672 186f 51       		.byte	0x51
 10673 1870 9F       		.byte	0x9f
 10674 1871 36000000 		.4byte	.LVL490
 10675 1875 44000000 		.4byte	.LVL493
 10676 1879 0100     		.2byte	0x1
 10677 187b 51       		.byte	0x51
 10678 187c 44000000 		.4byte	.LVL493
 10679 1880 50000000 		.4byte	.LVL495
 10680 1884 0400     		.2byte	0x4
 10681 1886 F3       		.byte	0xf3
 10682 1887 01       		.uleb128 0x1
 10683 1888 51       		.byte	0x51
 10684 1889 9F       		.byte	0x9f
 10685 188a 50000000 		.4byte	.LVL495
 10686 188e 55000000 		.4byte	.LVL497-1
 10687 1892 0100     		.2byte	0x1
 10688 1894 51       		.byte	0x51
 10689 1895 55000000 		.4byte	.LVL497-1
 10690 1899 68000000 		.4byte	.LFE75
 10691 189d 0400     		.2byte	0x4
 10692 189f F3       		.byte	0xf3
 10693 18a0 01       		.uleb128 0x1
 10694 18a1 51       		.byte	0x51
 10695 18a2 9F       		.byte	0x9f
 10696 18a3 00000000 		.4byte	0
 10697 18a7 00000000 		.4byte	0
 10698              	.LLST139:
 10699 18ab 0E000000 		.4byte	.LVL482
 10700 18af 18000000 		.4byte	.LVL484
 10701 18b3 0100     		.2byte	0x1
 10702 18b5 52       		.byte	0x52
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 260


 10703 18b6 18000000 		.4byte	.LVL484
 10704 18ba 1C000000 		.4byte	.LVL485
 10705 18be 0100     		.2byte	0x1
 10706 18c0 51       		.byte	0x51
 10707 18c1 28000000 		.4byte	.LVL487
 10708 18c5 32000000 		.4byte	.LVL489
 10709 18c9 0100     		.2byte	0x1
 10710 18cb 52       		.byte	0x52
 10711 18cc 32000000 		.4byte	.LVL489
 10712 18d0 36000000 		.4byte	.LVL490
 10713 18d4 0100     		.2byte	0x1
 10714 18d6 51       		.byte	0x51
 10715 18d7 42000000 		.4byte	.LVL492
 10716 18db 4C000000 		.4byte	.LVL494
 10717 18df 0100     		.2byte	0x1
 10718 18e1 52       		.byte	0x52
 10719 18e2 4C000000 		.4byte	.LVL494
 10720 18e6 50000000 		.4byte	.LVL495
 10721 18ea 0100     		.2byte	0x1
 10722 18ec 51       		.byte	0x51
 10723 18ed 00000000 		.4byte	0
 10724 18f1 00000000 		.4byte	0
 10725              		.section	.debug_aranges,"",%progbits
 10726 0000 6C020000 		.4byte	0x26c
 10727 0004 0200     		.2byte	0x2
 10728 0006 00000000 		.4byte	.Ldebug_info0
 10729 000a 04       		.byte	0x4
 10730 000b 00       		.byte	0
 10731 000c 0000     		.2byte	0
 10732 000e 0000     		.2byte	0
 10733 0010 00000000 		.4byte	.LFB9
 10734 0014 30000000 		.4byte	.LFE9-.LFB9
 10735 0018 00000000 		.4byte	.LFB10
 10736 001c B0000000 		.4byte	.LFE10-.LFB10
 10737 0020 00000000 		.4byte	.LFB1
 10738 0024 14000000 		.4byte	.LFE1-.LFB1
 10739 0028 00000000 		.4byte	.LFB4
 10740 002c 54000000 		.4byte	.LFE4-.LFB4
 10741 0030 00000000 		.4byte	.LFB5
 10742 0034 14000000 		.4byte	.LFE5-.LFB5
 10743 0038 00000000 		.4byte	.LFB6
 10744 003c 44000000 		.4byte	.LFE6-.LFB6
 10745 0040 00000000 		.4byte	.LFB7
 10746 0044 74000000 		.4byte	.LFE7-.LFB7
 10747 0048 00000000 		.4byte	.LFB2
 10748 004c 1C000000 		.4byte	.LFE2-.LFB2
 10749 0050 00000000 		.4byte	.LFB8
 10750 0054 14000000 		.4byte	.LFE8-.LFB8
 10751 0058 00000000 		.4byte	.LFB11
 10752 005c 44000000 		.4byte	.LFE11-.LFB11
 10753 0060 00000000 		.4byte	.LFB12
 10754 0064 38000000 		.4byte	.LFE12-.LFB12
 10755 0068 00000000 		.4byte	.LFB13
 10756 006c 34000000 		.4byte	.LFE13-.LFB13
 10757 0070 00000000 		.4byte	.LFB14
 10758 0074 30000000 		.4byte	.LFE14-.LFB14
 10759 0078 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 261


 10760 007c 14000000 		.4byte	.LFE17-.LFB17
 10761 0080 00000000 		.4byte	.LFB18
 10762 0084 14000000 		.4byte	.LFE18-.LFB18
 10763 0088 00000000 		.4byte	.LFB19
 10764 008c 60000000 		.4byte	.LFE19-.LFB19
 10765 0090 00000000 		.4byte	.LFB20
 10766 0094 74010000 		.4byte	.LFE20-.LFB20
 10767 0098 00000000 		.4byte	.LFB23
 10768 009c 28000000 		.4byte	.LFE23-.LFB23
 10769 00a0 00000000 		.4byte	.LFB25
 10770 00a4 38000000 		.4byte	.LFE25-.LFB25
 10771 00a8 00000000 		.4byte	.LFB28
 10772 00ac 34000000 		.4byte	.LFE28-.LFB28
 10773 00b0 00000000 		.4byte	.LFB30
 10774 00b4 30000000 		.4byte	.LFE30-.LFB30
 10775 00b8 00000000 		.4byte	.LFB33
 10776 00bc 20000000 		.4byte	.LFE33-.LFB33
 10777 00c0 00000000 		.4byte	.LFB34
 10778 00c4 10000000 		.4byte	.LFE34-.LFB34
 10779 00c8 00000000 		.4byte	.LFB35
 10780 00cc 0C000000 		.4byte	.LFE35-.LFB35
 10781 00d0 00000000 		.4byte	.LFB36
 10782 00d4 14000000 		.4byte	.LFE36-.LFB36
 10783 00d8 00000000 		.4byte	.LFB37
 10784 00dc 10000000 		.4byte	.LFE37-.LFB37
 10785 00e0 00000000 		.4byte	.LFB38
 10786 00e4 0C000000 		.4byte	.LFE38-.LFB38
 10787 00e8 00000000 		.4byte	.LFB45
 10788 00ec 14000000 		.4byte	.LFE45-.LFB45
 10789 00f0 00000000 		.4byte	.LFB46
 10790 00f4 18000000 		.4byte	.LFE46-.LFB46
 10791 00f8 00000000 		.4byte	.LFB47
 10792 00fc 14000000 		.4byte	.LFE47-.LFB47
 10793 0100 00000000 		.4byte	.LFB48
 10794 0104 14000000 		.4byte	.LFE48-.LFB48
 10795 0108 00000000 		.4byte	.LFB49
 10796 010c 14000000 		.4byte	.LFE49-.LFB49
 10797 0110 00000000 		.4byte	.LFB50
 10798 0114 04000000 		.4byte	.LFE50-.LFB50
 10799 0118 00000000 		.4byte	.LFB22
 10800 011c 40000000 		.4byte	.LFE22-.LFB22
 10801 0120 00000000 		.4byte	.LFB26
 10802 0124 30000000 		.4byte	.LFE26-.LFB26
 10803 0128 00000000 		.4byte	.LFB27
 10804 012c 40000000 		.4byte	.LFE27-.LFB27
 10805 0130 00000000 		.4byte	.LFB24
 10806 0134 A4000000 		.4byte	.LFE24-.LFB24
 10807 0138 00000000 		.4byte	.LFB31
 10808 013c 58000000 		.4byte	.LFE31-.LFB31
 10809 0140 00000000 		.4byte	.LFB29
 10810 0144 10010000 		.4byte	.LFE29-.LFB29
 10811 0148 00000000 		.4byte	.LFB39
 10812 014c 20000000 		.4byte	.LFE39-.LFB39
 10813 0150 00000000 		.4byte	.LFB40
 10814 0154 1C000000 		.4byte	.LFE40-.LFB40
 10815 0158 00000000 		.4byte	.LFB41
 10816 015c 22000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 262


 10817 0160 00000000 		.4byte	.LFB42
 10818 0164 1E000000 		.4byte	.LFE42-.LFB42
 10819 0168 00000000 		.4byte	.LFB43
 10820 016c 4C000000 		.4byte	.LFE43-.LFB43
 10821 0170 00000000 		.4byte	.LFB44
 10822 0174 2C000000 		.4byte	.LFE44-.LFB44
 10823 0178 00000000 		.4byte	.LFB51
 10824 017c 18000000 		.4byte	.LFE51-.LFB51
 10825 0180 00000000 		.4byte	.LFB52
 10826 0184 30000000 		.4byte	.LFE52-.LFB52
 10827 0188 00000000 		.4byte	.LFB3
 10828 018c 04010000 		.4byte	.LFE3-.LFB3
 10829 0190 00000000 		.4byte	.LFB53
 10830 0194 14000000 		.4byte	.LFE53-.LFB53
 10831 0198 00000000 		.4byte	.LFB15
 10832 019c BC010000 		.4byte	.LFE15-.LFB15
 10833 01a0 00000000 		.4byte	.LFB16
 10834 01a4 48000000 		.4byte	.LFE16-.LFB16
 10835 01a8 00000000 		.4byte	.LFB21
 10836 01ac 9C000000 		.4byte	.LFE21-.LFB21
 10837 01b0 00000000 		.4byte	.LFB32
 10838 01b4 44000000 		.4byte	.LFE32-.LFB32
 10839 01b8 00000000 		.4byte	.LFB54
 10840 01bc 4C000000 		.4byte	.LFE54-.LFB54
 10841 01c0 00000000 		.4byte	.LFB58
 10842 01c4 10000000 		.4byte	.LFE58-.LFB58
 10843 01c8 00000000 		.4byte	.LFB59
 10844 01cc 10000000 		.4byte	.LFE59-.LFB59
 10845 01d0 00000000 		.4byte	.LFB57
 10846 01d4 18000000 		.4byte	.LFE57-.LFB57
 10847 01d8 00000000 		.4byte	.LFB60
 10848 01dc 10000000 		.4byte	.LFE60-.LFB60
 10849 01e0 00000000 		.4byte	.LFB61
 10850 01e4 10000000 		.4byte	.LFE61-.LFB61
 10851 01e8 00000000 		.4byte	.LFB62
 10852 01ec 10000000 		.4byte	.LFE62-.LFB62
 10853 01f0 00000000 		.4byte	.LFB63
 10854 01f4 10000000 		.4byte	.LFE63-.LFB63
 10855 01f8 00000000 		.4byte	.LFB64
 10856 01fc 20000000 		.4byte	.LFE64-.LFB64
 10857 0200 00000000 		.4byte	.LFB65
 10858 0204 10000000 		.4byte	.LFE65-.LFB65
 10859 0208 00000000 		.4byte	.LFB66
 10860 020c 10000000 		.4byte	.LFE66-.LFB66
 10861 0210 00000000 		.4byte	.LFB70
 10862 0214 2C000000 		.4byte	.LFE70-.LFB70
 10863 0218 00000000 		.4byte	.LFB67
 10864 021c 0C000000 		.4byte	.LFE67-.LFB67
 10865 0220 00000000 		.4byte	.LFB56
 10866 0224 48000000 		.4byte	.LFE56-.LFB56
 10867 0228 00000000 		.4byte	.LFB55
 10868 022c 20000000 		.4byte	.LFE55-.LFB55
 10869 0230 00000000 		.4byte	.LFB68
 10870 0234 10000000 		.4byte	.LFE68-.LFB68
 10871 0238 00000000 		.4byte	.LFB69
 10872 023c 10000000 		.4byte	.LFE69-.LFB69
 10873 0240 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 263


 10874 0244 70000000 		.4byte	.LFE71-.LFB71
 10875 0248 00000000 		.4byte	.LFB72
 10876 024c 20000000 		.4byte	.LFE72-.LFB72
 10877 0250 00000000 		.4byte	.LFB73
 10878 0254 20000000 		.4byte	.LFE73-.LFB73
 10879 0258 00000000 		.4byte	.LFB74
 10880 025c 20000000 		.4byte	.LFE74-.LFB74
 10881 0260 00000000 		.4byte	.LFB75
 10882 0264 68000000 		.4byte	.LFE75-.LFB75
 10883 0268 00000000 		.4byte	0
 10884 026c 00000000 		.4byte	0
 10885              		.section	.debug_ranges,"",%progbits
 10886              	.Ldebug_ranges0:
 10887 0000 00000000 		.4byte	.LFB9
 10888 0004 30000000 		.4byte	.LFE9
 10889 0008 00000000 		.4byte	.LFB10
 10890 000c B0000000 		.4byte	.LFE10
 10891 0010 00000000 		.4byte	.LFB1
 10892 0014 14000000 		.4byte	.LFE1
 10893 0018 00000000 		.4byte	.LFB4
 10894 001c 54000000 		.4byte	.LFE4
 10895 0020 00000000 		.4byte	.LFB5
 10896 0024 14000000 		.4byte	.LFE5
 10897 0028 00000000 		.4byte	.LFB6
 10898 002c 44000000 		.4byte	.LFE6
 10899 0030 00000000 		.4byte	.LFB7
 10900 0034 74000000 		.4byte	.LFE7
 10901 0038 00000000 		.4byte	.LFB2
 10902 003c 1C000000 		.4byte	.LFE2
 10903 0040 00000000 		.4byte	.LFB8
 10904 0044 14000000 		.4byte	.LFE8
 10905 0048 00000000 		.4byte	.LFB11
 10906 004c 44000000 		.4byte	.LFE11
 10907 0050 00000000 		.4byte	.LFB12
 10908 0054 38000000 		.4byte	.LFE12
 10909 0058 00000000 		.4byte	.LFB13
 10910 005c 34000000 		.4byte	.LFE13
 10911 0060 00000000 		.4byte	.LFB14
 10912 0064 30000000 		.4byte	.LFE14
 10913 0068 00000000 		.4byte	.LFB17
 10914 006c 14000000 		.4byte	.LFE17
 10915 0070 00000000 		.4byte	.LFB18
 10916 0074 14000000 		.4byte	.LFE18
 10917 0078 00000000 		.4byte	.LFB19
 10918 007c 60000000 		.4byte	.LFE19
 10919 0080 00000000 		.4byte	.LFB20
 10920 0084 74010000 		.4byte	.LFE20
 10921 0088 00000000 		.4byte	.LFB23
 10922 008c 28000000 		.4byte	.LFE23
 10923 0090 00000000 		.4byte	.LFB25
 10924 0094 38000000 		.4byte	.LFE25
 10925 0098 00000000 		.4byte	.LFB28
 10926 009c 34000000 		.4byte	.LFE28
 10927 00a0 00000000 		.4byte	.LFB30
 10928 00a4 30000000 		.4byte	.LFE30
 10929 00a8 00000000 		.4byte	.LFB33
 10930 00ac 20000000 		.4byte	.LFE33
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 264


 10931 00b0 00000000 		.4byte	.LFB34
 10932 00b4 10000000 		.4byte	.LFE34
 10933 00b8 00000000 		.4byte	.LFB35
 10934 00bc 0C000000 		.4byte	.LFE35
 10935 00c0 00000000 		.4byte	.LFB36
 10936 00c4 14000000 		.4byte	.LFE36
 10937 00c8 00000000 		.4byte	.LFB37
 10938 00cc 10000000 		.4byte	.LFE37
 10939 00d0 00000000 		.4byte	.LFB38
 10940 00d4 0C000000 		.4byte	.LFE38
 10941 00d8 00000000 		.4byte	.LFB45
 10942 00dc 14000000 		.4byte	.LFE45
 10943 00e0 00000000 		.4byte	.LFB46
 10944 00e4 18000000 		.4byte	.LFE46
 10945 00e8 00000000 		.4byte	.LFB47
 10946 00ec 14000000 		.4byte	.LFE47
 10947 00f0 00000000 		.4byte	.LFB48
 10948 00f4 14000000 		.4byte	.LFE48
 10949 00f8 00000000 		.4byte	.LFB49
 10950 00fc 14000000 		.4byte	.LFE49
 10951 0100 00000000 		.4byte	.LFB50
 10952 0104 04000000 		.4byte	.LFE50
 10953 0108 00000000 		.4byte	.LFB22
 10954 010c 40000000 		.4byte	.LFE22
 10955 0110 00000000 		.4byte	.LFB26
 10956 0114 30000000 		.4byte	.LFE26
 10957 0118 00000000 		.4byte	.LFB27
 10958 011c 40000000 		.4byte	.LFE27
 10959 0120 00000000 		.4byte	.LFB24
 10960 0124 A4000000 		.4byte	.LFE24
 10961 0128 00000000 		.4byte	.LFB31
 10962 012c 58000000 		.4byte	.LFE31
 10963 0130 00000000 		.4byte	.LFB29
 10964 0134 10010000 		.4byte	.LFE29
 10965 0138 00000000 		.4byte	.LFB39
 10966 013c 20000000 		.4byte	.LFE39
 10967 0140 00000000 		.4byte	.LFB40
 10968 0144 1C000000 		.4byte	.LFE40
 10969 0148 00000000 		.4byte	.LFB41
 10970 014c 22000000 		.4byte	.LFE41
 10971 0150 00000000 		.4byte	.LFB42
 10972 0154 1E000000 		.4byte	.LFE42
 10973 0158 00000000 		.4byte	.LFB43
 10974 015c 4C000000 		.4byte	.LFE43
 10975 0160 00000000 		.4byte	.LFB44
 10976 0164 2C000000 		.4byte	.LFE44
 10977 0168 00000000 		.4byte	.LFB51
 10978 016c 18000000 		.4byte	.LFE51
 10979 0170 00000000 		.4byte	.LFB52
 10980 0174 30000000 		.4byte	.LFE52
 10981 0178 00000000 		.4byte	.LFB3
 10982 017c 04010000 		.4byte	.LFE3
 10983 0180 00000000 		.4byte	.LFB53
 10984 0184 14000000 		.4byte	.LFE53
 10985 0188 00000000 		.4byte	.LFB15
 10986 018c BC010000 		.4byte	.LFE15
 10987 0190 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 265


 10988 0194 48000000 		.4byte	.LFE16
 10989 0198 00000000 		.4byte	.LFB21
 10990 019c 9C000000 		.4byte	.LFE21
 10991 01a0 00000000 		.4byte	.LFB32
 10992 01a4 44000000 		.4byte	.LFE32
 10993 01a8 00000000 		.4byte	.LFB54
 10994 01ac 4C000000 		.4byte	.LFE54
 10995 01b0 00000000 		.4byte	.LFB58
 10996 01b4 10000000 		.4byte	.LFE58
 10997 01b8 00000000 		.4byte	.LFB59
 10998 01bc 10000000 		.4byte	.LFE59
 10999 01c0 00000000 		.4byte	.LFB57
 11000 01c4 18000000 		.4byte	.LFE57
 11001 01c8 00000000 		.4byte	.LFB60
 11002 01cc 10000000 		.4byte	.LFE60
 11003 01d0 00000000 		.4byte	.LFB61
 11004 01d4 10000000 		.4byte	.LFE61
 11005 01d8 00000000 		.4byte	.LFB62
 11006 01dc 10000000 		.4byte	.LFE62
 11007 01e0 00000000 		.4byte	.LFB63
 11008 01e4 10000000 		.4byte	.LFE63
 11009 01e8 00000000 		.4byte	.LFB64
 11010 01ec 20000000 		.4byte	.LFE64
 11011 01f0 00000000 		.4byte	.LFB65
 11012 01f4 10000000 		.4byte	.LFE65
 11013 01f8 00000000 		.4byte	.LFB66
 11014 01fc 10000000 		.4byte	.LFE66
 11015 0200 00000000 		.4byte	.LFB70
 11016 0204 2C000000 		.4byte	.LFE70
 11017 0208 00000000 		.4byte	.LFB67
 11018 020c 0C000000 		.4byte	.LFE67
 11019 0210 00000000 		.4byte	.LFB56
 11020 0214 48000000 		.4byte	.LFE56
 11021 0218 00000000 		.4byte	.LFB55
 11022 021c 20000000 		.4byte	.LFE55
 11023 0220 00000000 		.4byte	.LFB68
 11024 0224 10000000 		.4byte	.LFE68
 11025 0228 00000000 		.4byte	.LFB69
 11026 022c 10000000 		.4byte	.LFE69
 11027 0230 00000000 		.4byte	.LFB71
 11028 0234 70000000 		.4byte	.LFE71
 11029 0238 00000000 		.4byte	.LFB72
 11030 023c 20000000 		.4byte	.LFE72
 11031 0240 00000000 		.4byte	.LFB73
 11032 0244 20000000 		.4byte	.LFE73
 11033 0248 00000000 		.4byte	.LFB74
 11034 024c 20000000 		.4byte	.LFE74
 11035 0250 00000000 		.4byte	.LFB75
 11036 0254 68000000 		.4byte	.LFE75
 11037 0258 00000000 		.4byte	0
 11038 025c 00000000 		.4byte	0
 11039              		.section	.debug_line,"",%progbits
 11040              	.Ldebug_line0:
 11041 0000 EB080000 		.section	.debug_str,"MS",%progbits,1
 11041      02006700 
 11041      00000201 
 11041      FB0E0D00 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 266


 11041      01010101 
 11042              	.LASF97:
 11043 0000 706C6C46 		.ascii	"pllFreq\000"
 11043      72657100 
 11044              	.LASF111:
 11045 0008 4379496E 		.ascii	"CyIntGetVector\000"
 11045      74476574 
 11045      56656374 
 11045      6F7200
 11046              	.LASF152:
 11047 0017 43795379 		.ascii	"CySysTickClear\000"
 11047      73546963 
 11047      6B436C65 
 11047      617200
 11048              	.LASF118:
 11049 0026 43794465 		.ascii	"CyDelay\000"
 11049      6C617900 
 11050              	.LASF112:
 11051 002e 4379496E 		.ascii	"CyIntSetPriority\000"
 11051      74536574 
 11051      5072696F 
 11051      72697479 
 11051      00
 11052              	.LASF67:
 11053 003f 43795379 		.ascii	"CySysClkPllGetUnlockStatus\000"
 11053      73436C6B 
 11053      506C6C47 
 11053      6574556E 
 11053      6C6F636B 
 11054              	.LASF116:
 11055 005a 4379496E 		.ascii	"CyIntGetPriority\000"
 11055      74476574 
 11055      5072696F 
 11055      72697479 
 11055      00
 11056              	.LASF163:
 11057 006b 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 11057      73536574 
 11057      446D6163 
 11057      41636365 
 11057      73734172 
 11058              	.LASF119:
 11059 0089 6D696C6C 		.ascii	"milliseconds\000"
 11059      69736563 
 11059      6F6E6473 
 11059      00
 11060              	.LASF62:
 11061 0096 72657475 		.ascii	"returnStatus\000"
 11061      726E5374 
 11061      61747573 
 11061      00
 11062              	.LASF168:
 11063 00a3 63796465 		.ascii	"cydelayFreqKhz\000"
 11063      6C617946 
 11063      7265714B 
 11063      687A00
 11064              	.LASF177:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 267


 11065 00b2 43794578 		.ascii	"CyExitCriticalSection\000"
 11065      69744372 
 11065      69746963 
 11065      616C5365 
 11065      6374696F 
 11066              	.LASF104:
 11067 00c8 66657272 		.ascii	"ferr\000"
 11067      00
 11068              	.LASF8:
 11069 00cd 756E7369 		.ascii	"unsigned int\000"
 11069      676E6564 
 11069      20696E74 
 11069      00
 11070              	.LASF34:
 11071 00da 43795379 		.ascii	"CySysClkImoDisableUsbLock\000"
 11071      73436C6B 
 11071      496D6F44 
 11071      69736162 
 11071      6C655573 
 11072              	.LASF55:
 11073 00f4 66547269 		.ascii	"fTrim\000"
 11073      6D00
 11074              	.LASF165:
 11075 00fa 696E7465 		.ascii	"interfaceNumber\000"
 11075      72666163 
 11075      654E756D 
 11075      62657200 
 11076              	.LASF98:
 11077 010a 66726571 		.ascii	"freqTol\000"
 11077      546F6C00 
 11078              	.LASF41:
 11079 0112 43795379 		.ascii	"CySysEnablePumpClock\000"
 11079      73456E61 
 11079      626C6550 
 11079      756D7043 
 11079      6C6F636B 
 11080              	.LASF39:
 11081 0127 696E7465 		.ascii	"interruptState\000"
 11081      72727570 
 11081      74537461 
 11081      746500
 11082              	.LASF36:
 11083 0136 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 11083      73436C6B 
 11083      496D6F47 
 11083      65745763 
 11083      6F4C6F63 
 11084              	.LASF17:
 11085 014c 72656738 		.ascii	"reg8\000"
 11085      00
 11086              	.LASF137:
 11087 0151 43795379 		.ascii	"CySysLvdEnable\000"
 11087      734C7664 
 11087      456E6162 
 11087      6C6500
 11088              	.LASF82:
 11089 0160 4379496E 		.ascii	"CyIntDisable\000"
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 268


 11089      74446973 
 11089      61626C65 
 11089      00
 11090              	.LASF171:
 11091 016d 43795379 		.ascii	"CySysTickInitVar\000"
 11091      73546963 
 11091      6B496E69 
 11091      74566172 
 11091      00
 11092              	.LASF71:
 11093 017e 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 11093      734C7664 
 11093      47657449 
 11093      6E746572 
 11093      72757074 
 11094              	.LASF92:
 11095 0199 72656665 		.ascii	"reference\000"
 11095      72656E63 
 11095      6500
 11096              	.LASF155:
 11097 01a3 43795379 		.ascii	"CySysTickSetCallback\000"
 11097      73546963 
 11097      6B536574 
 11097      43616C6C 
 11097      6261636B 
 11098              	.LASF77:
 11099 01b8 4379456E 		.ascii	"CyEnableInts\000"
 11099      61626C65 
 11099      496E7473 
 11099      00
 11100              	.LASF139:
 11101 01c5 43794465 		.ascii	"CyDelayFreq\000"
 11101      6C617946 
 11101      72657100 
 11102              	.LASF37:
 11103 01d1 43795379 		.ascii	"CySysClkImoGetUsbLock\000"
 11103      73436C6B 
 11103      496D6F47 
 11103      65745573 
 11103      624C6F63 
 11104              	.LASF27:
 11105 01e7 63795F73 		.ascii	"cy_sys_clk_pll_struct\000"
 11105      79735F63 
 11105      6C6B5F70 
 11105      6C6C5F73 
 11105      74727563 
 11106              	.LASF48:
 11107 01fd 43795379 		.ascii	"CySysClkEcoStop\000"
 11107      73436C6B 
 11107      45636F53 
 11107      746F7000 
 11108              	.LASF13:
 11109 020d 666C6F61 		.ascii	"float\000"
 11109      7400
 11110              	.LASF114:
 11111 0213 73686966 		.ascii	"shift\000"
 11111      7400
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 269


 11112              	.LASF12:
 11113 0219 696E7433 		.ascii	"int32\000"
 11113      3200
 11114              	.LASF145:
 11115 021f 43795379 		.ascii	"CySysTickGetReload\000"
 11115      73546963 
 11115      6B476574 
 11115      52656C6F 
 11115      616400
 11116              	.LASF95:
 11117 0232 43795379 		.ascii	"CySysClkPllSetFrequency\000"
 11117      73436C6B 
 11117      506C6C53 
 11117      65744672 
 11117      65717565 
 11118              	.LASF123:
 11119 024a 43794465 		.ascii	"CyDelayUs\000"
 11119      6C617955 
 11119      7300
 11120              	.LASF7:
 11121 0254 6C6F6E67 		.ascii	"long long unsigned int\000"
 11121      206C6F6E 
 11121      6720756E 
 11121      7369676E 
 11121      65642069 
 11122              	.LASF74:
 11123 026b 72656173 		.ascii	"reason\000"
 11123      6F6E00
 11124              	.LASF85:
 11125 0272 43794861 		.ascii	"CyHalt\000"
 11125      6C7400
 11126              	.LASF43:
 11127 0279 656E6162 		.ascii	"enable\000"
 11127      6C6500
 11128              	.LASF58:
 11129 0280 72656754 		.ascii	"regTmp\000"
 11129      6D7000
 11130              	.LASF115:
 11131 0287 76616C75 		.ascii	"value\000"
 11131      6500
 11132              	.LASF49:
 11133 028d 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 11133      73436C6B 
 11133      47657453 
 11133      7973636C 
 11133      6B536F75 
 11134              	.LASF99:
 11135 02a5 714D696E 		.ascii	"qMin\000"
 11135      00
 11136              	.LASF181:
 11137 02aa 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11137      43313120 
 11137      352E342E 
 11137      31203230 
 11137      31363036 
 11138 02dd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 11138      20726576 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 270


 11138      6973696F 
 11138      6E203233 
 11138      37373135 
 11139 0310 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 11139      66756E63 
 11139      74696F6E 
 11139      2D736563 
 11139      74696F6E 
 11140              	.LASF140:
 11141 0338 43795379 		.ascii	"CySysTickStop\000"
 11141      73546963 
 11141      6B53746F 
 11141      7000
 11142              	.LASF81:
 11143 0346 4379496E 		.ascii	"CyIntGetState\000"
 11143      74476574 
 11143      53746174 
 11143      6500
 11144              	.LASF167:
 11145 0354 63796465 		.ascii	"cydelayFreqHz\000"
 11145      6C617946 
 11145      72657148 
 11145      7A00
 11146              	.LASF96:
 11147 0362 696E7075 		.ascii	"inputFreq\000"
 11147      74467265 
 11147      7100
 11148              	.LASF158:
 11149 036c 43795379 		.ascii	"CySysTickGetCallback\000"
 11149      73546963 
 11149      6B476574 
 11149      43616C6C 
 11149      6261636B 
 11150              	.LASF107:
 11151 0381 6F6C6449 		.ascii	"oldIsr\000"
 11151      737200
 11152              	.LASF172:
 11153 0388 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 11153      6F467265 
 11153      714D687A 
 11153      32526567 
 11153      00
 11154              	.LASF101:
 11155 0399 7156616C 		.ascii	"qVal\000"
 11155      00
 11156              	.LASF83:
 11157 039e 4379496E 		.ascii	"CyIntSetPending\000"
 11157      74536574 
 11157      50656E64 
 11157      696E6700 
 11158              	.LASF42:
 11159 03ae 636C6B53 		.ascii	"clkSelect\000"
 11159      656C6563 
 11159      7400
 11160              	.LASF76:
 11161 03b8 696E7453 		.ascii	"intState\000"
 11161      74617465 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 271


 11161      00
 11162              	.LASF136:
 11163 03c1 636F756E 		.ascii	"counts\000"
 11163      747300
 11164              	.LASF127:
 11165 03c8 62675472 		.ascii	"bgTrim5\000"
 11165      696D3500 
 11166              	.LASF31:
 11167 03d0 66726571 		.ascii	"freq\000"
 11167      00
 11168              	.LASF66:
 11169 03d5 62797061 		.ascii	"bypass\000"
 11169      737300
 11170              	.LASF22:
 11171 03dc 63795379 		.ascii	"cySysTickCallback\000"
 11171      73546963 
 11171      6B43616C 
 11171      6C626163 
 11171      6B00
 11172              	.LASF30:
 11173 03ee 74657374 		.ascii	"testRev\000"
 11173      52657600 
 11174              	.LASF84:
 11175 03f6 4379496E 		.ascii	"CyIntClearPending\000"
 11175      74436C65 
 11175      61725065 
 11175      6E64696E 
 11175      6700
 11176              	.LASF15:
 11177 0408 63686172 		.ascii	"char\000"
 11177      00
 11178              	.LASF150:
 11179 040d 43795379 		.ascii	"CySysTickGetCountFlag\000"
 11179      73546963 
 11179      6B476574 
 11179      436F756E 
 11179      74466C61 
 11180              	.LASF178:
 11181 0423 43794465 		.ascii	"CyDelayCycles\000"
 11181      6C617943 
 11181      79636C65 
 11181      7300
 11182              	.LASF122:
 11183 0431 666C6173 		.ascii	"flashCtlReg\000"
 11183      6843746C 
 11183      52656700 
 11184              	.LASF35:
 11185 043d 43795379 		.ascii	"CySysClkImoStop\000"
 11185      73436C6B 
 11185      496D6F53 
 11185      746F7000 
 11186              	.LASF38:
 11187 044d 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 11187      73436C6B 
 11187      57726974 
 11187      65486663 
 11187      6C6B4469 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 272


 11188              	.LASF10:
 11189 0466 75696E74 		.ascii	"uint16\000"
 11189      313600
 11190              	.LASF91:
 11191 046d 66656564 		.ascii	"feedback\000"
 11191      6261636B 
 11191      00
 11192              	.LASF110:
 11193 0476 4379496E 		.ascii	"CyIntSetVector\000"
 11193      74536574 
 11193      56656374 
 11193      6F7200
 11194              	.LASF26:
 11195 0485 63795F73 		.ascii	"cy_sys_clk_pll_regs_struct\000"
 11195      79735F63 
 11195      6C6B5F70 
 11195      6C6C5F72 
 11195      6567735F 
 11196              	.LASF24:
 11197 04a0 73746174 		.ascii	"status\000"
 11197      757300
 11198              	.LASF161:
 11199 04a7 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 11199      73536574 
 11199      52616D41 
 11199      63636573 
 11199      73417262 
 11200              	.LASF50:
 11201 04c4 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 11201      73436C6B 
 11201      45636F52 
 11201      65616453 
 11201      74617475 
 11202              	.LASF90:
 11203 04da 43795379 		.ascii	"CySysClkPllSetPQ\000"
 11203      73436C6B 
 11203      506C6C53 
 11203      65745051 
 11203      00
 11204              	.LASF54:
 11205 04eb 61547269 		.ascii	"aTrim\000"
 11205      6D00
 11206              	.LASF63:
 11207 04f1 676D4D69 		.ascii	"gmMin\000"
 11207      6E00
 11208              	.LASF61:
 11209 04f7 6D617841 		.ascii	"maxAmplitude\000"
 11209      6D706C69 
 11209      74756465 
 11209      00
 11210              	.LASF164:
 11211 0504 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 11211      73536574 
 11211      50657269 
 11211      70686572 
 11211      616C4163 
 11212              	.LASF6:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 273


 11213 0528 6C6F6E67 		.ascii	"long long int\000"
 11213      206C6F6E 
 11213      6720696E 
 11213      7400
 11214              	.LASF120:
 11215 0536 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 11215      73436C6B 
 11215      496D6F45 
 11215      6E61626C 
 11215      6557636F 
 11216              	.LASF106:
 11217 054f 61646472 		.ascii	"address\000"
 11217      65737300 
 11218              	.LASF142:
 11219 0557 43795379 		.ascii	"CySysTickEnable\000"
 11219      73546963 
 11219      6B456E61 
 11219      626C6500 
 11220              	.LASF73:
 11221 0567 43795379 		.ascii	"CySysGetResetReason\000"
 11221      73476574 
 11221      52657365 
 11221      74526561 
 11221      736F6E00 
 11222              	.LASF162:
 11223 057b 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 11223      73536574 
 11223      466C6173 
 11223      68416363 
 11223      65737341 
 11224              	.LASF109:
 11225 059a 4379496E 		.ascii	"CyIntGetSysVector\000"
 11225      74476574 
 11225      53797356 
 11225      6563746F 
 11225      7200
 11226              	.LASF166:
 11227 05ac 43795379 		.ascii	"CySysTickCallbacks\000"
 11227      73546963 
 11227      6B43616C 
 11227      6C626163 
 11227      6B7300
 11228              	.LASF146:
 11229 05bf 43795379 		.ascii	"CySysTickGetValue\000"
 11229      73546963 
 11229      6B476574 
 11229      56616C75 
 11229      6500
 11230              	.LASF87:
 11231 05d1 43795379 		.ascii	"CySysClkPllGetBypassMode\000"
 11231      73436C6B 
 11231      506C6C47 
 11231      65744279 
 11231      70617373 
 11232              	.LASF19:
 11233 05ea 63796973 		.ascii	"cyisraddress\000"
 11233      72616464 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 274


 11233      72657373 
 11233      00
 11234              	.LASF53:
 11235 05f7 77445472 		.ascii	"wDTrim\000"
 11235      696D00
 11236              	.LASF132:
 11237 05fe 43795379 		.ascii	"CySysClkEcoStart\000"
 11237      73436C6B 
 11237      45636F53 
 11237      74617274 
 11237      00
 11238              	.LASF11:
 11239 060f 75696E74 		.ascii	"uint32\000"
 11239      333200
 11240              	.LASF88:
 11241 0616 43795379 		.ascii	"CySysClkPllConfigChangeAllowed\000"
 11241      73436C6B 
 11241      506C6C43 
 11241      6F6E6669 
 11241      67436861 
 11242              	.LASF154:
 11243 0635 43795379 		.ascii	"CySysTickStart\000"
 11243      73546963 
 11243      6B537461 
 11243      727400
 11244              	.LASF151:
 11245 0644 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 11245      73546963 
 11245      6B536572 
 11245      76696365 
 11245      43616C6C 
 11246              	.LASF78:
 11247 065e 6D61736B 		.ascii	"mask\000"
 11247      00
 11248              	.LASF147:
 11249 0663 43795379 		.ascii	"CySysTickSetClockSource\000"
 11249      73546963 
 11249      6B536574 
 11249      436C6F63 
 11249      6B536F75 
 11250              	.LASF135:
 11251 067b 77616974 		.ascii	"wait\000"
 11251      00
 11252              	.LASF51:
 11253 0680 72657475 		.ascii	"returnValue\000"
 11253      726E5661 
 11253      6C756500 
 11254              	.LASF47:
 11255 068c 43795379 		.ascii	"CySysClkImoStart\000"
 11255      73436C6B 
 11255      496D6F53 
 11255      74617274 
 11255      00
 11256              	.LASF130:
 11257 069d 77636F4C 		.ascii	"wcoLock\000"
 11257      6F636B00 
 11258              	.LASF20:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 275


 11259 06a5 6C6F6E67 		.ascii	"long double\000"
 11259      20646F75 
 11259      626C6500 
 11260              	.LASF75:
 11261 06b1 43794469 		.ascii	"CyDisableInts\000"
 11261      7361626C 
 11261      65496E74 
 11261      7300
 11262              	.LASF18:
 11263 06bf 72656733 		.ascii	"reg32\000"
 11263      3200
 11264              	.LASF148:
 11265 06c5 636C6F63 		.ascii	"clockSource\000"
 11265      6B536F75 
 11265      72636500 
 11266              	.LASF40:
 11267 06d1 746D7052 		.ascii	"tmpReg\000"
 11267      656700
 11268              	.LASF180:
 11269 06d8 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 11269      73466C61 
 11269      73685365 
 11269      74576169 
 11269      74437963 
 11270              	.LASF23:
 11271 06f0 636F6E66 		.ascii	"config\000"
 11271      696700
 11272              	.LASF129:
 11273 06f7 63757272 		.ascii	"currentImoTrim2Value\000"
 11273      656E7449 
 11273      6D6F5472 
 11273      696D3256 
 11273      616C7565 
 11274              	.LASF60:
 11275 070c 634C6F61 		.ascii	"cLoad\000"
 11275      6400
 11276              	.LASF144:
 11277 0712 43795379 		.ascii	"CySysTickSetReload\000"
 11277      73546963 
 11277      6B536574 
 11277      52656C6F 
 11277      616400
 11278              	.LASF2:
 11279 0725 73686F72 		.ascii	"short int\000"
 11279      7420696E 
 11279      7400
 11280              	.LASF29:
 11281 072f 43795379 		.ascii	"CySysClkImoSetImoTrims\000"
 11281      73436C6B 
 11281      496D6F53 
 11281      6574496D 
 11281      6F547269 
 11282              	.LASF46:
 11283 0746 64697669 		.ascii	"divider\000"
 11283      64657200 
 11284              	.LASF4:
 11285 074e 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 276


 11285      20696E74 
 11285      00
 11286              	.LASF89:
 11287 0757 706C6C42 		.ascii	"pllBypassMode\000"
 11287      79706173 
 11287      734D6F64 
 11287      6500
 11288              	.LASF59:
 11289 0765 43795379 		.ascii	"CySysClkConfigureEcoDrive\000"
 11289      73436C6B 
 11289      436F6E66 
 11289      69677572 
 11289      6545636F 
 11290              	.LASF105:
 11291 077f 4379496E 		.ascii	"CyIntSetSysVector\000"
 11291      74536574 
 11291      53797356 
 11291      6563746F 
 11291      7200
 11292              	.LASF33:
 11293 0791 43795379 		.ascii	"CySysClkImoEnableUsbLock\000"
 11293      73436C6B 
 11293      496D6F45 
 11293      6E61626C 
 11293      65557362 
 11294              	.LASF131:
 11295 07aa 7573624C 		.ascii	"usbLock\000"
 11295      6F636B00 
 11296              	.LASF113:
 11297 07b2 7072696F 		.ascii	"priority\000"
 11297      72697479 
 11297      00
 11298              	.LASF175:
 11299 07bb 43795379 		.ascii	"CySysClkPumpConfig\000"
 11299      73436C6B 
 11299      50756D70 
 11299      436F6E66 
 11299      696700
 11300              	.LASF103:
 11301 07ce 6676636F 		.ascii	"fvco\000"
 11301      00
 11302              	.LASF45:
 11303 07d3 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 11303      73436C6B 
 11303      57726974 
 11303      65537973 
 11303      636C6B44 
 11304              	.LASF143:
 11305 07ea 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 11305      73546963 
 11305      6B446973 
 11305      61626C65 
 11305      496E7465 
 11306              	.LASF57:
 11307 0804 67547269 		.ascii	"gTrim\000"
 11307      6D00
 11308              	.LASF182:
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 277


 11309 080a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 11309      72617465 
 11309      645F536F 
 11309      75726365 
 11309      5C50536F 
 11310              	.LASF69:
 11311 0829 736F7572 		.ascii	"source\000"
 11311      636500
 11312              	.LASF80:
 11313 0830 6E756D62 		.ascii	"number\000"
 11313      657200
 11314              	.LASF121:
 11315 0837 6C664C69 		.ascii	"lfLimit\000"
 11315      6D697400 
 11316              	.LASF102:
 11317 083f 7056616C 		.ascii	"pVal\000"
 11317      00
 11318              	.LASF153:
 11319 0844 43795379 		.ascii	"CySysTickInit\000"
 11319      73546963 
 11319      6B496E69 
 11319      7400
 11320              	.LASF183:
 11321 0852 433A5C55 		.ascii	"C:\\Users\\Min\\Documents\\PSoC Creator\\GPS_IMU\\G"
 11321      73657273 
 11321      5C4D696E 
 11321      5C446F63 
 11321      756D656E 
 11322 087f 50532D52 		.ascii	"PS-RTK_IMU_Board_PY2023\\GPS_IMU.cydsn\000"
 11322      544B5F49 
 11322      4D555F42 
 11322      6F617264 
 11322      5F505932 
 11323              	.LASF64:
 11324 08a5 43795379 		.ascii	"CySysClkPllStop\000"
 11324      73436C6B 
 11324      506C6C53 
 11324      746F7000 
 11325              	.LASF160:
 11326 08b5 756E6971 		.ascii	"uniqueId\000"
 11326      75654964 
 11326      00
 11327              	.LASF100:
 11328 08be 714D6178 		.ascii	"qMax\000"
 11328      00
 11329              	.LASF21:
 11330 08c3 73697A65 		.ascii	"sizetype\000"
 11330      74797065 
 11330      00
 11331              	.LASF65:
 11332 08cc 43795379 		.ascii	"CySysClkPllSetBypassMode\000"
 11332      73436C6B 
 11332      506C6C53 
 11332      65744279 
 11332      70617373 
 11333              	.LASF52:
 11334 08e5 43795379 		.ascii	"CySysClkConfigureEcoTrim\000"
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 278


 11334      73436C6B 
 11334      436F6E66 
 11334      69677572 
 11334      6545636F 
 11335              	.LASF5:
 11336 08fe 6C6F6E67 		.ascii	"long unsigned int\000"
 11336      20756E73 
 11336      69676E65 
 11336      6420696E 
 11336      7400
 11337              	.LASF157:
 11338 0910 72657456 		.ascii	"retVal\000"
 11338      616C00
 11339              	.LASF56:
 11340 0917 72547269 		.ascii	"rTrim\000"
 11340      6D00
 11341              	.LASF72:
 11342 091d 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 11342      734C7664 
 11342      436C6561 
 11342      72496E74 
 11342      65727275 
 11343              	.LASF149:
 11344 0934 43795379 		.ascii	"CySysTickGetClockSource\000"
 11344      73546963 
 11344      6B476574 
 11344      436C6F63 
 11344      6B536F75 
 11345              	.LASF117:
 11346 094c 4379536F 		.ascii	"CySoftwareReset\000"
 11346      66747761 
 11346      72655265 
 11346      73657400 
 11347              	.LASF16:
 11348 095c 63797374 		.ascii	"cystatus\000"
 11348      61747573 
 11348      00
 11349              	.LASF128:
 11350 0965 6E657749 		.ascii	"newImoTrim2Value\000"
 11350      6D6F5472 
 11350      696D3256 
 11350      616C7565 
 11350      00
 11351              	.LASF133:
 11352 0976 74696D65 		.ascii	"timeoutUs\000"
 11352      6F757455 
 11352      7300
 11353              	.LASF1:
 11354 0980 756E7369 		.ascii	"unsigned char\000"
 11354      676E6564 
 11354      20636861 
 11354      7200
 11355              	.LASF169:
 11356 098e 63796465 		.ascii	"cydelayFreqMhz\000"
 11356      6C617946 
 11356      7265714D 
 11356      687A00
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 279


 11357              	.LASF108:
 11358 099d 72616D56 		.ascii	"ramVectorTable\000"
 11358      6563746F 
 11358      72546162 
 11358      6C6500
 11359              	.LASF159:
 11360 09ac 43794765 		.ascii	"CyGetUniqueId\000"
 11360      74556E69 
 11360      71756549 
 11360      6400
 11361              	.LASF156:
 11362 09ba 66756E63 		.ascii	"function\000"
 11362      74696F6E 
 11362      00
 11363              	.LASF25:
 11364 09c3 74657374 		.ascii	"test\000"
 11364      00
 11365              	.LASF86:
 11366 09c8 43795379 		.ascii	"CySysClkPllGetLockStatus\000"
 11366      73436C6B 
 11366      506C6C47 
 11366      65744C6F 
 11366      636B5374 
 11367              	.LASF124:
 11368 09e1 6D696372 		.ascii	"microseconds\000"
 11368      6F736563 
 11368      6F6E6473 
 11368      00
 11369              	.LASF179:
 11370 09ee 43795379 		.ascii	"CySysClkWcoEnabled\000"
 11370      73436C6B 
 11370      57636F45 
 11370      6E61626C 
 11370      656400
 11371              	.LASF134:
 11372 0a01 43795379 		.ascii	"CySysClkPllStart\000"
 11372      73436C6B 
 11372      506C6C53 
 11372      74617274 
 11372      00
 11373              	.LASF141:
 11374 0a12 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 11374      73546963 
 11374      6B456E61 
 11374      626C6549 
 11374      6E746572 
 11375              	.LASF170:
 11376 0a2b 63796465 		.ascii	"cydelay32kMs\000"
 11376      6C617933 
 11376      326B4D73 
 11376      00
 11377              	.LASF126:
 11378 0a38 62675472 		.ascii	"bgTrim4\000"
 11378      696D3400 
 11379              	.LASF94:
 11380 0a40 43795379 		.ascii	"CySysClkPllSetOutputDivider\000"
 11380      73436C6B 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 280


 11380      506C6C53 
 11380      65744F75 
 11380      74707574 
 11381              	.LASF32:
 11382 0a5c 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 11382      73436C6B 
 11382      496D6F44 
 11382      69736162 
 11382      6C655763 
 11383              	.LASF173:
 11384 0a76 43795379 		.ascii	"CySysClkImoTrim4\000"
 11384      73436C6B 
 11384      496D6F54 
 11384      72696D34 
 11384      00
 11385              	.LASF174:
 11386 0a87 43795379 		.ascii	"CySysClkImoTrim5\000"
 11386      73436C6B 
 11386      496D6F54 
 11386      72696D35 
 11386      00
 11387              	.LASF125:
 11388 0a98 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 11388      73436C6B 
 11388      57726974 
 11388      65496D6F 
 11388      46726571 
 11389              	.LASF79:
 11390 0aad 4379496E 		.ascii	"CyIntEnable\000"
 11390      74456E61 
 11390      626C6500 
 11391              	.LASF138:
 11392 0ab9 74687265 		.ascii	"threshold\000"
 11392      73686F6C 
 11392      6400
 11393              	.LASF28:
 11394 0ac3 43795379 		.ascii	"CySysClkImoSetPwrBgTrim5\000"
 11394      73436C6B 
 11394      496D6F53 
 11394      65745077 
 11394      72426754 
 11395              	.LASF68:
 11396 0adc 43795379 		.ascii	"CySysClkPllSetSource\000"
 11396      73436C6B 
 11396      506C6C53 
 11396      6574536F 
 11396      75726365 
 11397              	.LASF176:
 11398 0af1 4379456E 		.ascii	"CyEnterCriticalSection\000"
 11398      74657243 
 11398      72697469 
 11398      63616C53 
 11398      65637469 
 11399              	.LASF0:
 11400 0b08 7369676E 		.ascii	"signed char\000"
 11400      65642063 
 11400      68617200 
ARM GAS  C:\Users\Min\AppData\Local\Temp\ccTVPrpP.s 			page 281


 11401              	.LASF3:
 11402 0b14 73686F72 		.ascii	"short unsigned int\000"
 11402      7420756E 
 11402      7369676E 
 11402      65642069 
 11402      6E7400
 11403              	.LASF93:
 11404 0b27 63757272 		.ascii	"current\000"
 11404      656E7400 
 11405              	.LASF9:
 11406 0b2f 75696E74 		.ascii	"uint8\000"
 11406      3800
 11407              	.LASF14:
 11408 0b35 646F7562 		.ascii	"double\000"
 11408      6C6500
 11409              	.LASF44:
 11410 0b3c 73797363 		.ascii	"sysclkSource\000"
 11410      6C6B536F 
 11410      75726365 
 11410      00
 11411              	.LASF70:
 11412 0b49 43795379 		.ascii	"CySysLvdDisable\000"
 11412      734C7664 
 11412      44697361 
 11412      626C6500 
 11413              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
