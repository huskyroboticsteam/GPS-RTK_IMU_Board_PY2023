ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyPm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysPmSleep,"ax",%progbits
  20              		.align	2
  21              		.global	CySysPmSleep
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysPmSleep, %function
  25              	CySysPmSleep:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 6.0
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2018, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** 
  23:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  25:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  26:Generated_Source\PSoC4/cyPm.c **** *
  27:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  28:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  29:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  30:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 2


  31:Generated_Source\PSoC4/cyPm.c **** *
  32:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  33:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
  34:Generated_Source\PSoC4/cyPm.c **** {
  28              		.loc 1 34 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  35:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  36:Generated_Source\PSoC4/cyPm.c **** 
  37:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  36              		.loc 1 37 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  38:Generated_Source\PSoC4/cyPm.c **** 
  39:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  40:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  39              		.loc 1 40 0
  40 0006 044A     		ldr	r2, .L2
  41 0008 1368     		ldr	r3, [r2]
  42 000a 0421     		movs	r1, #4
  43 000c 8B43     		bics	r3, r1
  44 000e 1360     		str	r3, [r2]
  41:Generated_Source\PSoC4/cyPm.c **** 
  42:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  43:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  45              		.loc 1 43 0
  46              		.syntax divided
  47              	@ 43 "Generated_Source\PSoC4\cyPm.c" 1
  48 0010 30BF     		WFI 
  49              	
  50              	@ 0 "" 2
  44:Generated_Source\PSoC4/cyPm.c **** 
  45:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  51              		.loc 1 45 0
  52              		.thumb
  53              		.syntax unified
  54 0012 FFF7FEFF 		bl	CyExitCriticalSection
  55              	.LVL1:
  46:Generated_Source\PSoC4/cyPm.c **** }
  56              		.loc 1 46 0
  57              		@ sp needed
  58 0016 10BD     		pop	{r4, pc}
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 10ED00E0 		.word	-536810224
  63              		.cfi_endproc
  64              	.LFE2:
  65              		.size	CySysPmSleep, .-CySysPmSleep
  66              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  67              		.align	2
  68              		.global	CySysPmDeepSleep
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 3


  69              		.code	16
  70              		.thumb_func
  71              		.type	CySysPmDeepSleep, %function
  72              	CySysPmDeepSleep:
  73              	.LFB3:
  47:Generated_Source\PSoC4/cyPm.c **** 
  48:Generated_Source\PSoC4/cyPm.c **** 
  49:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  51:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  52:Generated_Source\PSoC4/cyPm.c **** *
  53:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  54:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  55:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  56:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  57:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  58:Generated_Source\PSoC4/cyPm.c **** *
  59:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  60:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  61:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  62:Generated_Source\PSoC4/cyPm.c **** *
  63:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  64:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  65:Generated_Source\PSoC4/cyPm.c **** {
  74              		.loc 1 65 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 30B5     		push	{r4, r5, lr}
  79              		.cfi_def_cfa_offset 12
  80              		.cfi_offset 4, -12
  81              		.cfi_offset 5, -8
  82              		.cfi_offset 14, -4
  83 0002 83B0     		sub	sp, sp, #12
  84              		.cfi_def_cfa_offset 24
  85              	.LVL2:
  66:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  67:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  69:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  70:Generated_Source\PSoC4/cyPm.c ****     
  71:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
  72:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 pllResoreFlag = 0u;
  73:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  74:Generated_Source\PSoC4/cyPm.c **** 
  75:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  76:Generated_Source\PSoC4/cyPm.c ****         uint32 regTmp = 0u;
  77:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  78:Generated_Source\PSoC4/cyPm.c ****     
  79:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  86              		.loc 1 79 0
  87 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  88              	.LVL3:
  89 0008 0400     		movs	r4, r0
  90              	.LVL4:
  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 4


  82:Generated_Source\PSoC4/cyPm.c ****         if(0u != (CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
  83:Generated_Source\PSoC4/cyPm.c ****         {
  84:Generated_Source\PSoC4/cyPm.c ****             pllResoreFlag = 1u;
  85:Generated_Source\PSoC4/cyPm.c ****             
  86:Generated_Source\PSoC4/cyPm.c ****             /* Set default state = IMO for HFCLK_SEL bit mask */
  87:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  88:Generated_Source\PSoC4/cyPm.c ****         }
  89:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  90:Generated_Source\PSoC4/cyPm.c **** 
  91:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  92:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  93:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
  91              		.loc 1 93 0
  92 000a 1E4A     		ldr	r2, .L7
  93 000c 1368     		ldr	r3, [r2]
  94 000e 5B00     		lsls	r3, r3, #1
  95 0010 5B08     		lsrs	r3, r3, #1
  96 0012 1360     		str	r3, [r2]
  94:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  95:Generated_Source\PSoC4/cyPm.c **** 
  96:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  97:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  98:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.c ****     
 100:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 101:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
  97              		.loc 1 101 0
  98 0014 1C4B     		ldr	r3, .L7+4
  99 0016 1B68     		ldr	r3, [r3]
 100 0018 5B00     		lsls	r3, r3, #1
 101 001a 0CD5     		bpl	.L5
 102:Generated_Source\PSoC4/cyPm.c ****         {
 103:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 102              		.loc 1 103 0
 103 001c 1B48     		ldr	r0, .L7+8
 104 001e 0168     		ldr	r1, [r0]
 105 0020 1B4B     		ldr	r3, .L7+12
 106 0022 1940     		ands	r1, r3
 107              	.LVL5:
 104:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
 108              		.loc 1 104 0
 109 0024 1B4B     		ldr	r3, .L7+16
 110 0026 1A68     		ldr	r2, [r3]
 111 0028 131D     		adds	r3, r2, #4
 105:Generated_Source\PSoC4/cyPm.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) << 
 112              		.loc 1 105 0
 113 002a 9B05     		lsls	r3, r3, #22
 114 002c FF22     		movs	r2, #255
 115 002e 9205     		lsls	r2, r2, #22
 116 0030 1340     		ands	r3, r2
 104:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
 117              		.loc 1 104 0
 118 0032 0B43     		orrs	r3, r1
 119 0034 0360     		str	r3, [r0]
 120              	.LVL6:
 121              	.L5:
 106:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 5


 107:Generated_Source\PSoC4/cyPm.c ****         }
 108:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
 111:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
 122              		.loc 1 111 0
 123 0036 184B     		ldr	r3, .L7+20
 124 0038 1B88     		ldrh	r3, [r3]
 125 003a 9BB2     		uxth	r3, r3
 126 003c 174A     		ldr	r2, .L7+24
 127 003e 1360     		str	r3, [r2]
 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 114:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 128              		.loc 1 114 0
 129 0040 174A     		ldr	r2, .L7+28
 130 0042 1168     		ldr	r1, [r2]
 131 0044 0423     		movs	r3, #4
 132 0046 0B43     		orrs	r3, r1
 133 0048 1360     		str	r3, [r2]
 115:Generated_Source\PSoC4/cyPm.c **** 
 116:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 117:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
 118:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
 119:Generated_Source\PSoC4/cyPm.c ****         */
 120:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 134              		.loc 1 120 0
 135 004a 164D     		ldr	r5, .L7+32
 136 004c 2B68     		ldr	r3, [r5]
 137 004e 0193     		str	r3, [sp, #4]
 121:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 138              		.loc 1 121 0
 139 0050 0220     		movs	r0, #2
 140 0052 FFF7FEFF 		bl	CySysClkWriteSysclkDiv
 141              	.LVL7:
 122:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 123:Generated_Source\PSoC4/cyPm.c ****     
 124:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
 125:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 142              		.loc 1 125 0
 143              		.syntax divided
 144              	@ 125 "Generated_Source\PSoC4\cyPm.c" 1
 145 0056 30BF     		WFI 
 146              	
 147              	@ 0 "" 2
 126:Generated_Source\PSoC4/cyPm.c **** 
 127:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 128:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 129:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 148              		.loc 1 129 0
 149              		.thumb
 150              		.syntax unified
 151 0058 019B     		ldr	r3, [sp, #4]
 152 005a 2B60     		str	r3, [r5]
 130:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 131:Generated_Source\PSoC4/cyPm.c **** 
 132:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 6


 133:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
 153              		.loc 1 133 0
 154 005c 0A4B     		ldr	r3, .L7+4
 155 005e 1B68     		ldr	r3, [r3]
 156 0060 5B00     		lsls	r3, r3, #1
 157 0062 0AD5     		bpl	.L6
 134:Generated_Source\PSoC4/cyPm.c ****         {
 135:Generated_Source\PSoC4/cyPm.c ****             CyDelayUs(CY_PM_WCO_DPLL_WAKEUP_DELAY);
 158              		.loc 1 135 0
 159 0064 2320     		movs	r0, #35
 160 0066 FFF7FEFF 		bl	CyDelayUs
 161              	.LVL8:
 136:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 162              		.loc 1 136 0
 163 006a 084A     		ldr	r2, .L7+8
 164 006c 1168     		ldr	r1, [r2]
 165 006e 084B     		ldr	r3, .L7+12
 166 0070 0B40     		ands	r3, r1
 167              	.LVL9:
 137:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 168              		.loc 1 137 0
 169 0072 FF21     		movs	r1, #255
 170 0074 8905     		lsls	r1, r1, #22
 171 0076 0B43     		orrs	r3, r1
 172              	.LVL10:
 173 0078 1360     		str	r3, [r2]
 174              	.L6:
 138:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 139:Generated_Source\PSoC4/cyPm.c ****         }
 140:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */    
 141:Generated_Source\PSoC4/cyPm.c ****     
 142:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 143:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 144:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 145:Generated_Source\PSoC4/cyPm.c **** 
 146:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
 147:Generated_Source\PSoC4/cyPm.c ****         if(0u != pllResoreFlag)
 148:Generated_Source\PSoC4/cyPm.c ****         {
 149:Generated_Source\PSoC4/cyPm.c ****             CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_PLL0);
 150:Generated_Source\PSoC4/cyPm.c ****         }
 151:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */    
 152:Generated_Source\PSoC4/cyPm.c **** 
 153:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 175              		.loc 1 153 0
 176 007a 2000     		movs	r0, r4
 177 007c FFF7FEFF 		bl	CyExitCriticalSection
 178              	.LVL11:
 154:Generated_Source\PSoC4/cyPm.c **** }
 179              		.loc 1 154 0
 180 0080 03B0     		add	sp, sp, #12
 181              		@ sp needed
 182              	.LVL12:
 183 0082 30BD     		pop	{r4, r5, pc}
 184              	.L8:
 185              		.align	2
 186              	.L7:
 187 0084 00000B40 		.word	1074462720
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 7


 188 0088 00002240 		.word	1075970048
 189 008c 08002240 		.word	1075970056
 190 0090 FFFF3FC0 		.word	-1069547521
 191 0094 28FF0B40 		.word	1074528040
 192 0098 52F1FF0F 		.word	268431698
 193 009c 0C000B40 		.word	1074462732
 194 00a0 10ED00E0 		.word	-536810224
 195 00a4 00010B40 		.word	1074462976
 196              		.cfi_endproc
 197              	.LFE3:
 198              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 199              		.section	.text.CySysPmHibernate,"ax",%progbits
 200              		.align	2
 201              		.global	CySysPmHibernate
 202              		.code	16
 203              		.thumb_func
 204              		.type	CySysPmHibernate, %function
 205              	CySysPmHibernate:
 206              	.LFB4:
 155:Generated_Source\PSoC4/cyPm.c **** 
 156:Generated_Source\PSoC4/cyPm.c **** 
 157:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 158:Generated_Source\PSoC4/cyPm.c **** 
 159:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 160:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 161:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 162:Generated_Source\PSoC4/cyPm.c ****     *
 163:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 164:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 165:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 166:Generated_Source\PSoC4/cyPm.c ****     *
 167:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 168:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 169:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 170:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 171:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 172:Generated_Source\PSoC4/cyPm.c ****     *
 173:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 174:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 175:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 176:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 177:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 178:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 179:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 180:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 181:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 182:Generated_Source\PSoC4/cyPm.c ****     *
 183:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 184:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 185:Generated_Source\PSoC4/cyPm.c ****     {
 207              		.loc 1 185 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 10B5     		push	{r4, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 8


 214              		.cfi_offset 14, -4
 186:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 187:Generated_Source\PSoC4/cyPm.c **** 
 188:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 215              		.loc 1 188 0
 216 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 217              	.LVL13:
 218              	.LBB4:
 219              	.LBB5:
 220              		.file 2 "Generated_Source\\PSoC4\\cyPm.h"
   1:Generated_Source\PSoC4/cyPm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.h **** * \file cyPm.h
   3:Generated_Source\PSoC4/cyPm.h **** * \version 6.0
   4:Generated_Source\PSoC4/cyPm.h **** *
   5:Generated_Source\PSoC4/cyPm.h **** * \brief Provides the function definitions for the power management API.
   6:Generated_Source\PSoC4/cyPm.h **** *
   7:Generated_Source\PSoC4/cyPm.h **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.h **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.h **** *
  10:Generated_Source\PSoC4/cyPm.h **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.h **** * \copyright
  12:Generated_Source\PSoC4/cyPm.h **** * Copyright 2011-2018, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.h **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.h **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.h **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.h **** 
  18:Generated_Source\PSoC4/cyPm.h **** #if !defined(CY_BOOT_CYPM_H)
  19:Generated_Source\PSoC4/cyPm.h **** #define CY_BOOT_CYPM_H
  20:Generated_Source\PSoC4/cyPm.h **** 
  21:Generated_Source\PSoC4/cyPm.h **** #include "cytypes.h"
  22:Generated_Source\PSoC4/cyPm.h **** #include "cypins.h"
  23:Generated_Source\PSoC4/cyPm.h **** 
  24:Generated_Source\PSoC4/cyPm.h **** 
  25:Generated_Source\PSoC4/cyPm.h **** /**
  26:Generated_Source\PSoC4/cyPm.h **** * \addtogroup group_power_management Power Management API
  27:Generated_Source\PSoC4/cyPm.h **** * @{
  28:Generated_Source\PSoC4/cyPm.h **** 
  29:Generated_Source\PSoC4/cyPm.h **** \brief PSoC 4 devices support the following power modes (in order of high to low power consumption)
  30:Generated_Source\PSoC4/cyPm.h **** Deep Sleep, Hibernate, and Stop. Active, Sleep and Deep-Sleep are standard ARM defined power modes,
  31:Generated_Source\PSoC4/cyPm.h **** ARM CPUs. Hibernate/Stop are even lower power modes that are entered from firmware just like Deep-S
  32:Generated_Source\PSoC4/cyPm.h **** the CPU (and all peripherals) goes through a full reset.
  33:Generated_Source\PSoC4/cyPm.h **** 
  34:Generated_Source\PSoC4/cyPm.h **** There is a full range of power modes supported by PSoC devices to control power consumption and the
  35:Generated_Source\PSoC4/cyPm.h **** resources. See the following table for the supported power modes.
  36:Generated_Source\PSoC4/cyPm.h **** 
  37:Generated_Source\PSoC4/cyPm.h **** Mode        | PSoC 4000              | Rest Devices           |
  38:Generated_Source\PSoC4/cyPm.h **** ----------- | ---------------------- | ---------------------- |
  39:Generated_Source\PSoC4/cyPm.h **** Active      |          Y             |       Y                |
  40:Generated_Source\PSoC4/cyPm.h **** Sleep       |          Y             |       Y                |
  41:Generated_Source\PSoC4/cyPm.h **** Deep Sleep  |          Y             |       Y                |
  42:Generated_Source\PSoC4/cyPm.h **** Hibernate   |          Y             |       Y                |
  43:Generated_Source\PSoC4/cyPm.h **** Stop        |                        |       Y                |
  44:Generated_Source\PSoC4/cyPm.h **** 
  45:Generated_Source\PSoC4/cyPm.h **** For the ARM-based devices (PSoC 4), an interrupt is required for the CPU to wake up. The Power Mana
  46:Generated_Source\PSoC4/cyPm.h **** assumes that wakeup time is configured with a separate component (component-based wakeup time confi
  47:Generated_Source\PSoC4/cyPm.h **** interrupt to be issued on terminal count.
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 9


  48:Generated_Source\PSoC4/cyPm.h **** 
  49:Generated_Source\PSoC4/cyPm.h **** All pending interrupts should be cleared before the device is put into low power mode, even if they
  50:Generated_Source\PSoC4/cyPm.h **** 
  51:Generated_Source\PSoC4/cyPm.h **** The Power Management API is provided in the CyPm.c and CyPm.h files.
  52:Generated_Source\PSoC4/cyPm.h **** 
  53:Generated_Source\PSoC4/cyPm.h **** 
  54:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_implementation Implementation
  55:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100, PSoC 4000U and PSoC 4200 devices, the software should set EXT_VCCD bit in the PWR_CO
  56:Generated_Source\PSoC4/cyPm.h **** Vccd is shorted to Vddd on the board. This impacts the chip internal state transitions where it is 
  57:Generated_Source\PSoC4/cyPm.h **** whether Vccd is connected or floating to achieve minimum current in low power modes. Note Setting t
  58:Generated_Source\PSoC4/cyPm.h **** the active regulator and will lead to a system reset unless both Vddd and Vccd pins are supplied ex
  59:Generated_Source\PSoC4/cyPm.h **** the device TRM for more information.
  60:Generated_Source\PSoC4/cyPm.h **** 
  61:Generated_Source\PSoC4/cyPm.h **** It is safe to call PM APIs from the ISR. The wakeup conditions for Sleep and DeepSleep low power mo
  62:Generated_Source\PSoC4/cyPm.h **** in the following table.
  63:Generated_Source\PSoC4/cyPm.h **** 
  64:Generated_Source\PSoC4/cyPm.h **** Interrupts State  |  Condition                      | Wakeup    |   ISR Execution   |
  65:Generated_Source\PSoC4/cyPm.h **** ------------------|---------------------------------|-----------|------------------ |
  66:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority > current level    | Yes       |   Yes             |
  67:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority ≤ current level    | No        |   No              |
  68:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority > current level    | Yes       |   No              |
  69:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority ≤ current level    | No        |   No              |
  70:Generated_Source\PSoC4/cyPm.h **** 
  71:Generated_Source\PSoC4/cyPm.h **** 
  72:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_clocks Clock Configuration
  73:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100 BLE and PSoC 4200 BLE devices, the HFCLK source should be set to IMO before switching
  74:Generated_Source\PSoC4/cyPm.h **** power mode. The IMO should be enabled (by calling CySysClkImoStart(), if it is not) and HFCLK sourc
  75:Generated_Source\PSoC4/cyPm.h **** to IMO by calling CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO).
  76:Generated_Source\PSoC4/cyPm.h **** 
  77:Generated_Source\PSoC4/cyPm.h **** If the System clock frequency is increased by switching to the IMO, the CySysFlashSetWaitCycles() f
  78:Generated_Source\PSoC4/cyPm.h **** appropriate parameter should be called beforehand. Also, it can optionally be called after lowering
  79:Generated_Source\PSoC4/cyPm.h **** frequency in order to improve CPU performance. See CySysFlashSetWaitCycles() description for the de
  80:Generated_Source\PSoC4/cyPm.h **** 
  81:Generated_Source\PSoC4/cyPm.h **** 
  82:Generated_Source\PSoC4/cyPm.h **** 
  83:Generated_Source\PSoC4/cyPm.h **** 
  84:Generated_Source\PSoC4/cyPm.h **** 
  85:Generated_Source\PSoC4/cyPm.h **** */
  86:Generated_Source\PSoC4/cyPm.h **** void CySysPmSleep(void);
  87:Generated_Source\PSoC4/cyPm.h **** void CySysPmDeepSleep(void);
  88:Generated_Source\PSoC4/cyPm.h **** 
  89:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
  90:Generated_Source\PSoC4/cyPm.h ****     void CySysPmHibernate(void);
  91:Generated_Source\PSoC4/cyPm.h ****     void CySysPmFreezeIo(void);
  92:Generated_Source\PSoC4/cyPm.h ****     void CySysPmUnfreezeIo(void);
  93:Generated_Source\PSoC4/cyPm.h ****     uint32 CySysPmGetResetReason(void);
  94:Generated_Source\PSoC4/cyPm.h ****     void CySysPmStop(void);
  95:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupPolarity(uint32 polarity);
  96:Generated_Source\PSoC4/cyPm.h **** #else
  97:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz);
  98:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.h **** 
 100:Generated_Source\PSoC4/cyPm.h **** /** @} group_power_management */
 101:Generated_Source\PSoC4/cyPm.h **** 
 102:Generated_Source\PSoC4/cyPm.h **** 
 103:Generated_Source\PSoC4/cyPm.h **** /*******************************************************************************
 104:Generated_Source\PSoC4/cyPm.h **** * The ARM compilers have the __wfi() intrinsic that inserts a WFI instruction
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 10


 105:Generated_Source\PSoC4/cyPm.h **** * into the instruction stream generated by the compiler. The GCC compiler has to
 106:Generated_Source\PSoC4/cyPm.h **** * execute assembly language instruction.
 107:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
 108:Generated_Source\PSoC4/cyPm.h **** #if defined(__ARMCC_VERSION)    /* Instristic for Keil compilers */
 109:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __wfi()
 110:Generated_Source\PSoC4/cyPm.h **** #else   /* ASM for GCC & IAR */
 111:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __asm volatile ("WFI \n")
 112:Generated_Source\PSoC4/cyPm.h **** #endif /* __ARMCC_VERSION */
 113:Generated_Source\PSoC4/cyPm.h **** 
 114:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 115:Generated_Source\PSoC4/cyPm.h **** 
 116:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmSetWakeupPolarity() */
 117:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_LOW        ((uint32)(0x0u))    /**< Logical zero will wakeup t
 118:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_HIGH       ((uint32)(0x1u))    /**< Logical one will wakeup th
 119:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_POLARITY          (CY_PM_STOP_WAKEUP_ACTIVE_LOW)
 120:Generated_Source\PSoC4/cyPm.h **** 
 121:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmGetResetReason() */
 122:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_UNKN             (0u)    /**< Unknown reset reason. */
 123:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_XRES             (1u)    /**< Transition from OFF/XRES to RESET */
 124:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_HIB       (2u)    /**< Transition/wakeup from HIBERNATE to RE
 125:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_STOP      (3u)    /**< Transition/wakeup from STOP to RESET *
 126:Generated_Source\PSoC4/cyPm.h **** 
 127:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 128:Generated_Source\PSoC4/cyPm.h **** 
 129:Generated_Source\PSoC4/cyPm.h **** 
 130:Generated_Source\PSoC4/cyPm.h **** /***************************************
 131:Generated_Source\PSoC4/cyPm.h **** *              Registers
 132:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 133:Generated_Source\PSoC4/cyPm.h **** 
 134:Generated_Source\PSoC4/cyPm.h **** /* Power Mode Control */
 135:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_REG               (*(reg32 *) CYREG_PWR_CONTROL)
 136:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_PTR               ( (reg32 *) CYREG_PWR_CONTROL)
 137:Generated_Source\PSoC4/cyPm.h **** 
 138:Generated_Source\PSoC4/cyPm.h **** /* CPU System Control Register */
 139:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_CPUSS_CM0)
 140:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0_SCR)
 141:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0_SCR)
 142:Generated_Source\PSoC4/cyPm.h **** #else /* CY_IP_CPUSS_CM0PLUS */
 143:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0P_SCR)
 144:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0P_SCR)
 145:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_CPUSS_CM0) */
 146:Generated_Source\PSoC4/cyPm.h **** 
 147:Generated_Source\PSoC4/cyPm.h **** /* Power System Key & Delay Register */
 148:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_REG             (*(reg32 *) CYREG_PWR_KEY_DELAY)
 149:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_PTR             ( (reg32 *) CYREG_PWR_KEY_DELAY)
 150:Generated_Source\PSoC4/cyPm.h **** 
 151:Generated_Source\PSoC4/cyPm.h **** 
 152:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 153:Generated_Source\PSoC4/cyPm.h ****     /* Hibernate wakeup value for PWR_KEY_DELAY */
 154:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_REG     (*(reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 155:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_PTR     ( (reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 156:Generated_Source\PSoC4/cyPm.h **** #endif  /* (CY_IP_SRSSV2) */
 157:Generated_Source\PSoC4/cyPm.h **** 
 158:Generated_Source\PSoC4/cyPm.h **** /* Deep Sleep wakeup value for PWR_KEY_DELAY */
 159:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_REG       (*(reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 160:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_PTR       ( (reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 161:Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 11


 162:Generated_Source\PSoC4/cyPm.h **** /* Power Stop Mode Register */
 163:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 164:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_REG              (*(reg32 *) CYREG_PWR_STOP)
 165:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_PTR              ( (reg32 *) CYREG_PWR_STOP)
 166:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 167:Generated_Source\PSoC4/cyPm.h **** 
 168:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U)
 169:Generated_Source\PSoC4/cyPm.h ****     /* CPU Subsystem Configuration */
 170:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_REG             (*(reg32 *) CYREG_CPUSS_CONFIG)
 171:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_PTR             ( (reg32 *) CYREG_CPUSS_CONFIG)
 172:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U) */
 173:Generated_Source\PSoC4/cyPm.h **** 
 174:Generated_Source\PSoC4/cyPm.h **** 
 175:Generated_Source\PSoC4/cyPm.h **** /***************************************
 176:Generated_Source\PSoC4/cyPm.h **** *       Register Constants
 177:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 178:Generated_Source\PSoC4/cyPm.h **** 
 179:Generated_Source\PSoC4/cyPm.h **** /* CM0 System Control Register Constants */
 180:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_CPU_SCR_SLEEPDEEP             ((uint32)(0x04u))
 181:Generated_Source\PSoC4/cyPm.h **** 
 182:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 183:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Control Constants */
 184:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_CONTROL_HIBERNATE         (0x80000000u)
 185:Generated_Source\PSoC4/cyPm.h **** 
 186:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Stop Constants */
 187:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY_SHIFT       (16u)
 188:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY             ((uint32)((uint32)1u << CY_PM_PWR_STOP_POLARITY_SHI
 189:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE_SHIFT         (17u)
 190:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE               ((uint32)((uint32)1u << CY_PM_PWR_STOP_FREEZE_SHIFT
 191:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_SHIFT         (8u)
 192:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_MASK          ((uint32)((uint32)0xFFu << CY_PM_PWR_STOP_UNLOCK_SH
 193:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK               ((uint32)((uint32)0x3Au << CY_PM_PWR_STOP_UNLOCK_SH
 194:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP_SHIFT           (31u)
 195:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP                 ((uint32)((uint32)1u << CY_PM_PWR_STOP_STOP_SHIFT))
 196:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_MASK           ((uint32)(0xFFu))
 197:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_XRES           ((uint32)(0x00u))
 198:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_HIB            ((uint32)(0xF1u))
 199:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_STOP           ((uint32)(0xF2u))
 200:Generated_Source\PSoC4/cyPm.h **** #else
 201:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_REG_DEFAULT     ((uint32) 248u)
 202:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT    (48u)
 203:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 204:Generated_Source\PSoC4/cyPm.h **** 
 205:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 206:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WCO_DPLL_WAKEUP_DELAY         (35u)
 207:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WCO_DPLL_LF_LIMIT_TEMP_DRIFT  (4u)
 208:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 209:Generated_Source\PSoC4/cyPm.h **** 
 210:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U)
 211:Generated_Source\PSoC4/cyPm.h ****     /* 0 - normal operation, 1 - Flash Accelerator in bypass mode */
 212:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS      ((uint32) 0x02u)
 213:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U) */
 214:Generated_Source\PSoC4/cyPm.h **** 
 215:Generated_Source\PSoC4/cyPm.h **** 
 216:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_SRSSV2)
 217:Generated_Source\PSoC4/cyPm.h ****     #if (CY_IP_HOBTO_DEVICE)
 218:Generated_Source\PSoC4/cyPm.h ****         /*******************************************************************************
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 12


 219:Generated_Source\PSoC4/cyPm.h ****         * Function Name: CySysPmHibPinsDisableInputBuf
 220:Generated_Source\PSoC4/cyPm.h ****         ****************************************************************************//**
 221:Generated_Source\PSoC4/cyPm.h ****         *
 222:Generated_Source\PSoC4/cyPm.h ****         *  Disable the input buffer for all the port. This is required before Hibernate
 223:Generated_Source\PSoC4/cyPm.h ****         *  mode entry as the operation of the input buffer is not guaranteed if VCCD
 224:Generated_Source\PSoC4/cyPm.h ****         *  drops down to 1.0 V.
 225:Generated_Source\PSoC4/cyPm.h ****         *
 226:Generated_Source\PSoC4/cyPm.h ****         *******************************************************************************/
 227:Generated_Source\PSoC4/cyPm.h ****         static CY_INLINE void CySysPmHibPinsDisableInputBuf(void)
 228:Generated_Source\PSoC4/cyPm.h ****         {
 229:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT0_PC
 230:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT0_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 221              		.loc 2 230 0
 222 0006 214A     		ldr	r2, .L10
 223 0008 1368     		ldr	r3, [r2]
 224 000a 9B00     		lsls	r3, r3, #2
 225 000c 9B08     		lsrs	r3, r3, #2
 226 000e 1360     		str	r3, [r2]
 231:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT0_PC */
 232:Generated_Source\PSoC4/cyPm.h **** 
 233:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT1_PC
 234:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT1_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 227              		.loc 2 234 0
 228 0010 1F4A     		ldr	r2, .L10+4
 229 0012 1368     		ldr	r3, [r2]
 230 0014 9B00     		lsls	r3, r3, #2
 231 0016 9B08     		lsrs	r3, r3, #2
 232 0018 1360     		str	r3, [r2]
 235:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT1_PC */
 236:Generated_Source\PSoC4/cyPm.h **** 
 237:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT2_PC
 238:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT2_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 233              		.loc 2 238 0
 234 001a 1E4A     		ldr	r2, .L10+8
 235 001c 1368     		ldr	r3, [r2]
 236 001e 9B00     		lsls	r3, r3, #2
 237 0020 9B08     		lsrs	r3, r3, #2
 238 0022 1360     		str	r3, [r2]
 239:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT2_PC */
 240:Generated_Source\PSoC4/cyPm.h **** 
 241:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT3_PC
 242:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT3_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 239              		.loc 2 242 0
 240 0024 1C4A     		ldr	r2, .L10+12
 241 0026 1368     		ldr	r3, [r2]
 242 0028 9B00     		lsls	r3, r3, #2
 243 002a 9B08     		lsrs	r3, r3, #2
 244 002c 1360     		str	r3, [r2]
 243:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT3_PC */
 244:Generated_Source\PSoC4/cyPm.h **** 
 245:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT4_PC
 246:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT4_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 245              		.loc 2 246 0
 246 002e 1B4A     		ldr	r2, .L10+16
 247 0030 1368     		ldr	r3, [r2]
 248 0032 9B00     		lsls	r3, r3, #2
 249 0034 9B08     		lsrs	r3, r3, #2
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 13


 250 0036 1360     		str	r3, [r2]
 247:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT4_PC */
 248:Generated_Source\PSoC4/cyPm.h **** 
 249:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT5_PC
 250:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT5_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 251              		.loc 2 250 0
 252 0038 194A     		ldr	r2, .L10+20
 253 003a 1368     		ldr	r3, [r2]
 254 003c 9B00     		lsls	r3, r3, #2
 255 003e 9B08     		lsrs	r3, r3, #2
 256 0040 1360     		str	r3, [r2]
 251:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT5_PC */
 252:Generated_Source\PSoC4/cyPm.h **** 
 253:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT6_PC
 254:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT6_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 257              		.loc 2 254 0
 258 0042 184A     		ldr	r2, .L10+24
 259 0044 1368     		ldr	r3, [r2]
 260 0046 9B00     		lsls	r3, r3, #2
 261 0048 9B08     		lsrs	r3, r3, #2
 262 004a 1360     		str	r3, [r2]
 255:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT6_PC */
 256:Generated_Source\PSoC4/cyPm.h **** 
 257:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT7_PC
 258:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT7_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 263              		.loc 2 258 0
 264 004c 164A     		ldr	r2, .L10+28
 265 004e 1368     		ldr	r3, [r2]
 266 0050 9B00     		lsls	r3, r3, #2
 267 0052 9B08     		lsrs	r3, r3, #2
 268 0054 1360     		str	r3, [r2]
 269              	.LBE5:
 270              	.LBE4:
 189:Generated_Source\PSoC4/cyPm.c **** 
 190:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 191:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 192:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 193:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 194:Generated_Source\PSoC4/cyPm.c **** 
 195:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 196:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 271              		.loc 1 196 0
 272 0056 154A     		ldr	r2, .L10+32
 273 0058 1368     		ldr	r3, [r2]
 274 005a 8021     		movs	r1, #128
 275 005c 0906     		lsls	r1, r1, #24
 276 005e 0B43     		orrs	r3, r1
 277 0060 1360     		str	r3, [r2]
 197:Generated_Source\PSoC4/cyPm.c **** 
 198:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 199:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 278              		.loc 1 199 0
 279 0062 134B     		ldr	r3, .L10+36
 280 0064 1B88     		ldrh	r3, [r3]
 281 0066 9BB2     		uxth	r3, r3
 282 0068 124A     		ldr	r2, .L10+40
 283 006a 1360     		str	r3, [r2]
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 14


 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 284              		.loc 1 202 0
 285 006c 124A     		ldr	r2, .L10+44
 286 006e 1168     		ldr	r1, [r2]
 287 0070 0423     		movs	r3, #4
 288 0072 0B43     		orrs	r3, r1
 289 0074 1360     		str	r3, [r2]
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 205:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 206:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 207:Generated_Source\PSoC4/cyPm.c ****          */
 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 290              		.loc 1 208 0
 291 0076 1149     		ldr	r1, .L10+48
 292 0078 0B68     		ldr	r3, [r1]
 293 007a FF22     		movs	r2, #255
 294 007c 9343     		bics	r3, r2
 295 007e 0E3A     		subs	r2, r2, #14
 296 0080 1343     		orrs	r3, r2
 297 0082 0B60     		str	r3, [r1]
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 211:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 212:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 213:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 298              		.loc 1 215 0
 299              		.syntax divided
 300              	@ 215 "Generated_Source\PSoC4\cyPm.c" 1
 301 0084 30BF     		WFI 
 302              	
 303              	@ 0 "" 2
 216:Generated_Source\PSoC4/cyPm.c **** 
 217:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 304              		.loc 1 217 0
 305              		.thumb
 306              		.syntax unified
 307 0086 FFF7FEFF 		bl	CyExitCriticalSection
 308              	.LVL14:
 218:Generated_Source\PSoC4/cyPm.c ****     }
 309              		.loc 1 218 0
 310              		@ sp needed
 311 008a 10BD     		pop	{r4, pc}
 312              	.L11:
 313              		.align	2
 314              	.L10:
 315 008c 08000440 		.word	1074003976
 316 0090 08010440 		.word	1074004232
 317 0094 08020440 		.word	1074004488
 318 0098 08030440 		.word	1074004744
 319 009c 08040440 		.word	1074005000
 320 00a0 08050440 		.word	1074005256
 321 00a4 08060440 		.word	1074005512
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 15


 322 00a8 08070440 		.word	1074005768
 323 00ac 00000B40 		.word	1074462720
 324 00b0 50F1FF0F 		.word	268431696
 325 00b4 0C000B40 		.word	1074462732
 326 00b8 10ED00E0 		.word	-536810224
 327 00bc 2C000B40 		.word	1074462764
 328              		.cfi_endproc
 329              	.LFE4:
 330              		.size	CySysPmHibernate, .-CySysPmHibernate
 331              		.section	.text.CySysPmSetWakeupPolarity,"ax",%progbits
 332              		.align	2
 333              		.global	CySysPmSetWakeupPolarity
 334              		.code	16
 335              		.thumb_func
 336              		.type	CySysPmSetWakeupPolarity, %function
 337              	CySysPmSetWakeupPolarity:
 338              	.LFB6:
 219:Generated_Source\PSoC4/cyPm.c **** 
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 222:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 223:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 224:Generated_Source\PSoC4/cyPm.c ****     *
 225:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
 226:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 227:Generated_Source\PSoC4/cyPm.c ****     *
 228:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 229:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 230:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 231:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 232:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 233:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 234:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 235:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 236:Generated_Source\PSoC4/cyPm.c ****     *
 237:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 238:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 239:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 240:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 241:Generated_Source\PSoC4/cyPm.c ****     *
 242:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 243:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 244:Generated_Source\PSoC4/cyPm.c ****     {
 245:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 246:Generated_Source\PSoC4/cyPm.c **** 
 247:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 249:Generated_Source\PSoC4/cyPm.c **** 
 250:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 251:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 252:Generated_Source\PSoC4/cyPm.c **** 
 253:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 254:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 257:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 258:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 16


 259:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 260:Generated_Source\PSoC4/cyPm.c ****          */
 261:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 262:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 263:Generated_Source\PSoC4/cyPm.c **** 
 264:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 265:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 266:Generated_Source\PSoC4/cyPm.c **** 
 267:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 268:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 269:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 270:Generated_Source\PSoC4/cyPm.c ****          */
 271:Generated_Source\PSoC4/cyPm.c ****     }
 272:Generated_Source\PSoC4/cyPm.c **** 
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 275:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 276:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 277:Generated_Source\PSoC4/cyPm.c ****     *
 278:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 279:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 280:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 281:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 282:Generated_Source\PSoC4/cyPm.c ****     *
 283:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 284:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 285:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 286:Generated_Source\PSoC4/cyPm.c ****     *
 287:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 288:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 289:Generated_Source\PSoC4/cyPm.c ****     {
 339              		.loc 1 289 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              	.LVL15:
 344 0000 10B5     		push	{r4, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 4, -8
 347              		.cfi_offset 14, -4
 348 0002 0400     		movs	r4, r0
 290:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 291:Generated_Source\PSoC4/cyPm.c **** 
 292:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 349              		.loc 1 292 0
 350 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 351              	.LVL16:
 293:Generated_Source\PSoC4/cyPm.c **** 
 294:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 295:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 352              		.loc 1 295 0
 353 0008 002C     		cmp	r4, #0
 354 000a 05D0     		beq	.L13
 355              		.loc 1 295 0 is_stmt 0 discriminator 1
 356 000c 074B     		ldr	r3, .L15
 357 000e 1B68     		ldr	r3, [r3]
 358 0010 8022     		movs	r2, #128
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 17


 359 0012 5202     		lsls	r2, r2, #9
 360 0014 1343     		orrs	r3, r2
 361 0016 03E0     		b	.L14
 362              	.L13:
 296:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 363              		.loc 1 296 0 is_stmt 1 discriminator 2
 364 0018 044B     		ldr	r3, .L15
 365 001a 1A68     		ldr	r2, [r3]
 295:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 366              		.loc 1 295 0 discriminator 2
 367 001c 044B     		ldr	r3, .L15+4
 368 001e 1340     		ands	r3, r2
 369              	.L14:
 294:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 370              		.loc 1 294 0
 371 0020 024A     		ldr	r2, .L15
 372 0022 1360     		str	r3, [r2]
 297:Generated_Source\PSoC4/cyPm.c **** 
 298:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 373              		.loc 1 298 0
 374 0024 FFF7FEFF 		bl	CyExitCriticalSection
 375              	.LVL17:
 299:Generated_Source\PSoC4/cyPm.c ****     }
 376              		.loc 1 299 0
 377              		@ sp needed
 378              	.LVL18:
 379 0028 10BD     		pop	{r4, pc}
 380              	.L16:
 381 002a C046     		.align	2
 382              	.L15:
 383 002c 2C000B40 		.word	1074462764
 384 0030 FFFFFEFF 		.word	-65537
 385              		.cfi_endproc
 386              	.LFE6:
 387              		.size	CySysPmSetWakeupPolarity, .-CySysPmSetWakeupPolarity
 388              		.section	.text.CySysPmGetResetReason,"ax",%progbits
 389              		.align	2
 390              		.global	CySysPmGetResetReason
 391              		.code	16
 392              		.thumb_func
 393              		.type	CySysPmGetResetReason, %function
 394              	CySysPmGetResetReason:
 395              	.LFB7:
 300:Generated_Source\PSoC4/cyPm.c **** 
 301:Generated_Source\PSoC4/cyPm.c **** 
 302:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 303:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 304:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 305:Generated_Source\PSoC4/cyPm.c ****     *
 306:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 307:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 308:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 309:Generated_Source\PSoC4/cyPm.c ****     *
 310:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 311:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 312:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 313:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 18


 314:Generated_Source\PSoC4/cyPm.c ****     *
 315:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 316:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 317:Generated_Source\PSoC4/cyPm.c ****     {
 396              		.loc 1 317 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 401              	.LVL19:
 318:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 319:Generated_Source\PSoC4/cyPm.c **** 
 320:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 402              		.loc 1 320 0
 403 0000 084B     		ldr	r3, .L23
 404 0002 1B68     		ldr	r3, [r3]
 405 0004 FF22     		movs	r2, #255
 406 0006 1340     		ands	r3, r2
 407 0008 F12B     		cmp	r3, #241
 408 000a 05D0     		beq	.L19
 409 000c F22B     		cmp	r3, #242
 410 000e 05D0     		beq	.L20
 411 0010 002B     		cmp	r3, #0
 412 0012 05D0     		beq	.L22
 318:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 413              		.loc 1 318 0
 414 0014 0020     		movs	r0, #0
 415 0016 04E0     		b	.L21
 416              	.L19:
 417              	.LVL20:
 321:Generated_Source\PSoC4/cyPm.c ****         {
 322:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 323:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 324:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 325:Generated_Source\PSoC4/cyPm.c ****             break;
 326:Generated_Source\PSoC4/cyPm.c **** 
 327:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 328:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 329:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 418              		.loc 1 329 0
 419 0018 0220     		movs	r0, #2
 330:Generated_Source\PSoC4/cyPm.c ****             break;
 420              		.loc 1 330 0
 421 001a 02E0     		b	.L21
 422              	.LVL21:
 423              	.L20:
 331:Generated_Source\PSoC4/cyPm.c **** 
 332:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 333:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 334:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 424              		.loc 1 334 0
 425 001c 0320     		movs	r0, #3
 335:Generated_Source\PSoC4/cyPm.c ****             break;
 426              		.loc 1 335 0
 427 001e 00E0     		b	.L21
 428              	.LVL22:
 429              	.L22:
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 19


 324:Generated_Source\PSoC4/cyPm.c ****             break;
 430              		.loc 1 324 0
 431 0020 0120     		movs	r0, #1
 432              	.LVL23:
 433              	.L21:
 336:Generated_Source\PSoC4/cyPm.c **** 
 337:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 338:Generated_Source\PSoC4/cyPm.c ****         default:
 339:Generated_Source\PSoC4/cyPm.c ****             break;
 340:Generated_Source\PSoC4/cyPm.c ****         }
 341:Generated_Source\PSoC4/cyPm.c **** 
 342:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 343:Generated_Source\PSoC4/cyPm.c ****     }
 434              		.loc 1 343 0
 435              		@ sp needed
 436 0022 7047     		bx	lr
 437              	.L24:
 438              		.align	2
 439              	.L23:
 440 0024 2C000B40 		.word	1074462764
 441              		.cfi_endproc
 442              	.LFE7:
 443              		.size	CySysPmGetResetReason, .-CySysPmGetResetReason
 444              		.section	.text.CySysPmFreezeIo,"ax",%progbits
 445              		.align	2
 446              		.global	CySysPmFreezeIo
 447              		.code	16
 448              		.thumb_func
 449              		.type	CySysPmFreezeIo, %function
 450              	CySysPmFreezeIo:
 451              	.LFB8:
 344:Generated_Source\PSoC4/cyPm.c **** 
 345:Generated_Source\PSoC4/cyPm.c **** 
 346:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 347:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 348:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 349:Generated_Source\PSoC4/cyPm.c ****     *
 350:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 351:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 352:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 353:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 354:Generated_Source\PSoC4/cyPm.c ****     *
 355:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 359:Generated_Source\PSoC4/cyPm.c ****     {
 452              		.loc 1 359 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 10B5     		push	{r4, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 4, -8
 459              		.cfi_offset 14, -4
 360:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 361:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 20


 362:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 460              		.loc 1 362 0
 461 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 462              	.LVL24:
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 365:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 366:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 367:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 368:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 369:Generated_Source\PSoC4/cyPm.c ****          */
 370:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 463              		.loc 1 370 0
 464 0006 094B     		ldr	r3, .L27
 465 0008 1B68     		ldr	r3, [r3]
 466 000a 9B03     		lsls	r3, r3, #14
 467 000c 0AD4     		bmi	.L26
 371:Generated_Source\PSoC4/cyPm.c ****         {
 372:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 373:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 374:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 468              		.loc 1 374 0
 469 000e 074B     		ldr	r3, .L27
 470 0010 1968     		ldr	r1, [r3]
 471 0012 074A     		ldr	r2, .L27+4
 472 0014 0A40     		ands	r2, r1
 373:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 473              		.loc 1 373 0
 474 0016 0749     		ldr	r1, .L27+8
 475 0018 0A43     		orrs	r2, r1
 476 001a 1A60     		str	r2, [r3]
 375:Generated_Source\PSoC4/cyPm.c **** 
 376:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 377:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 378:Generated_Source\PSoC4/cyPm.c ****             */
 379:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 477              		.loc 1 379 0
 478 001c 1A68     		ldr	r2, [r3]
 380:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 479              		.loc 1 380 0
 480 001e 1A68     		ldr	r2, [r3]
 381:Generated_Source\PSoC4/cyPm.c **** 
 382:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 383:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 481              		.loc 1 383 0
 482 0020 1A68     		ldr	r2, [r3]
 483 0022 1A60     		str	r2, [r3]
 484              	.L26:
 384:Generated_Source\PSoC4/cyPm.c ****         }
 385:Generated_Source\PSoC4/cyPm.c **** 
 386:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 485              		.loc 1 386 0
 486 0024 FFF7FEFF 		bl	CyExitCriticalSection
 487              	.LVL25:
 387:Generated_Source\PSoC4/cyPm.c ****     }
 488              		.loc 1 387 0
 489              		@ sp needed
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 21


 490 0028 10BD     		pop	{r4, pc}
 491              	.L28:
 492 002a C046     		.align	2
 493              	.L27:
 494 002c 2C000B40 		.word	1074462764
 495 0030 FF000100 		.word	65791
 496 0034 003A0280 		.word	-2147337728
 497              		.cfi_endproc
 498              	.LFE8:
 499              		.size	CySysPmFreezeIo, .-CySysPmFreezeIo
 500              		.section	.text.CySysPmStop,"ax",%progbits
 501              		.align	2
 502              		.global	CySysPmStop
 503              		.code	16
 504              		.thumb_func
 505              		.type	CySysPmStop, %function
 506              	CySysPmStop:
 507              	.LFB5:
 244:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 508              		.loc 1 244 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 10B5     		push	{r4, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 4, -8
 515              		.cfi_offset 14, -4
 245:Generated_Source\PSoC4/cyPm.c **** 
 516              		.loc 1 245 0
 517 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 518              	.LVL26:
 248:Generated_Source\PSoC4/cyPm.c **** 
 519              		.loc 1 248 0
 520 0006 094C     		ldr	r4, .L30
 521 0008 2268     		ldr	r2, [r4]
 522 000a 8023     		movs	r3, #128
 523 000c 5B02     		lsls	r3, r3, #9
 524 000e 1340     		ands	r3, r2
 525 0010 F222     		movs	r2, #242
 526 0012 1343     		orrs	r3, r2
 527 0014 2360     		str	r3, [r4]
 251:Generated_Source\PSoC4/cyPm.c **** 
 528              		.loc 1 251 0
 529 0016 FFF7FEFF 		bl	CySysPmFreezeIo
 530              	.LVL27:
 254:Generated_Source\PSoC4/cyPm.c **** 
 531              		.loc 1 254 0
 532 001a 2368     		ldr	r3, [r4]
 533 001c 8022     		movs	r2, #128
 534 001e 1206     		lsls	r2, r2, #24
 535 0020 1343     		orrs	r3, r2
 536 0022 2360     		str	r3, [r4]
 261:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 537              		.loc 1 261 0
 538              		.syntax divided
 539              	@ 261 "Generated_Source\PSoC4\cyPm.c" 1
 540 0024 C046     		NOP
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 22


 541              	
 542              	@ 0 "" 2
 262:Generated_Source\PSoC4/cyPm.c **** 
 543              		.loc 1 262 0
 544              	@ 262 "Generated_Source\PSoC4\cyPm.c" 1
 545 0026 C046     		NOP
 546              	
 547              	@ 0 "" 2
 265:Generated_Source\PSoC4/cyPm.c **** 
 548              		.loc 1 265 0
 549              	@ 265 "Generated_Source\PSoC4\cyPm.c" 1
 550 0028 30BF     		WFI 
 551              	
 552              	@ 0 "" 2
 271:Generated_Source\PSoC4/cyPm.c **** 
 553              		.loc 1 271 0
 554              		.thumb
 555              		.syntax unified
 556              		@ sp needed
 557 002a 10BD     		pop	{r4, pc}
 558              	.L31:
 559              		.align	2
 560              	.L30:
 561 002c 2C000B40 		.word	1074462764
 562              		.cfi_endproc
 563              	.LFE5:
 564              		.size	CySysPmStop, .-CySysPmStop
 565              		.section	.text.CySysPmUnfreezeIo,"ax",%progbits
 566              		.align	2
 567              		.global	CySysPmUnfreezeIo
 568              		.code	16
 569              		.thumb_func
 570              		.type	CySysPmUnfreezeIo, %function
 571              	CySysPmUnfreezeIo:
 572              	.LFB9:
 388:Generated_Source\PSoC4/cyPm.c **** 
 389:Generated_Source\PSoC4/cyPm.c **** 
 390:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 391:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 392:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 393:Generated_Source\PSoC4/cyPm.c ****     *
 394:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 395:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 396:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 397:Generated_Source\PSoC4/cyPm.c ****     *
 398:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 399:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 400:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 401:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 402:Generated_Source\PSoC4/cyPm.c ****     *
 403:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 404:Generated_Source\PSoC4/cyPm.c ****     *
 405:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 406:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 407:Generated_Source\PSoC4/cyPm.c ****     {
 573              		.loc 1 407 0
 574              		.cfi_startproc
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 23


 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577 0000 10B5     		push	{r4, lr}
 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 4, -8
 580              		.cfi_offset 14, -4
 408:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 409:Generated_Source\PSoC4/cyPm.c **** 
 410:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 581              		.loc 1 410 0
 582 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 583              	.LVL28:
 411:Generated_Source\PSoC4/cyPm.c **** 
 412:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 413:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 414:Generated_Source\PSoC4/cyPm.c ****          */
 415:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 416:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 584              		.loc 1 416 0
 585 0006 084B     		ldr	r3, .L33
 586 0008 1A68     		ldr	r2, [r3]
 587 000a 0849     		ldr	r1, .L33+4
 588 000c 0A40     		ands	r2, r1
 415:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 589              		.loc 1 415 0
 590 000e E824     		movs	r4, #232
 591 0010 A401     		lsls	r4, r4, #6
 592 0012 2243     		orrs	r2, r4
 593 0014 1A60     		str	r2, [r3]
 417:Generated_Source\PSoC4/cyPm.c **** 
 418:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 419:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 420:Generated_Source\PSoC4/cyPm.c ****         */
 421:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 594              		.loc 1 421 0
 595 0016 1A68     		ldr	r2, [r3]
 422:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 596              		.loc 1 422 0
 597 0018 1A68     		ldr	r2, [r3]
 423:Generated_Source\PSoC4/cyPm.c **** 
 424:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 425:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 598              		.loc 1 425 0
 599 001a 1A68     		ldr	r2, [r3]
 600 001c 1140     		ands	r1, r2
 601 001e 1960     		str	r1, [r3]
 426:Generated_Source\PSoC4/cyPm.c **** 
 427:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 602              		.loc 1 427 0
 603 0020 FFF7FEFF 		bl	CyExitCriticalSection
 604              	.LVL29:
 428:Generated_Source\PSoC4/cyPm.c ****     }
 605              		.loc 1 428 0
 606              		@ sp needed
 607 0024 10BD     		pop	{r4, pc}
 608              	.L34:
 609 0026 C046     		.align	2
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 24


 610              	.L33:
 611 0028 2C000B40 		.word	1074462764
 612 002c FF000100 		.word	65791
 613              		.cfi_endproc
 614              	.LFE9:
 615              		.size	CySysPmUnfreezeIo, .-CySysPmUnfreezeIo
 616              		.text
 617              	.Letext0:
 618              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 619              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 620              		.section	.debug_info,"",%progbits
 621              	.Ldebug_info0:
 622 0000 12030000 		.4byte	0x312
 623 0004 0400     		.2byte	0x4
 624 0006 00000000 		.4byte	.Ldebug_abbrev0
 625 000a 04       		.byte	0x4
 626 000b 01       		.uleb128 0x1
 627 000c 77010000 		.4byte	.LASF34
 628 0010 0C       		.byte	0xc
 629 0011 5C020000 		.4byte	.LASF35
 630 0015 A2020000 		.4byte	.LASF36
 631 0019 00000000 		.4byte	.Ldebug_ranges0+0
 632 001d 00000000 		.4byte	0
 633 0021 00000000 		.4byte	.Ldebug_line0
 634 0025 02       		.uleb128 0x2
 635 0026 01       		.byte	0x1
 636 0027 06       		.byte	0x6
 637 0028 86020000 		.4byte	.LASF0
 638 002c 02       		.uleb128 0x2
 639 002d 01       		.byte	0x1
 640 002e 08       		.byte	0x8
 641 002f 98000000 		.4byte	.LASF1
 642 0033 02       		.uleb128 0x2
 643 0034 02       		.byte	0x2
 644 0035 05       		.byte	0x5
 645 0036 38020000 		.4byte	.LASF2
 646 003a 02       		.uleb128 0x2
 647 003b 02       		.byte	0x2
 648 003c 07       		.byte	0x7
 649 003d 39000000 		.4byte	.LASF3
 650 0041 02       		.uleb128 0x2
 651 0042 04       		.byte	0x4
 652 0043 05       		.byte	0x5
 653 0044 53020000 		.4byte	.LASF4
 654 0048 02       		.uleb128 0x2
 655 0049 04       		.byte	0x4
 656 004a 07       		.byte	0x7
 657 004b B5000000 		.4byte	.LASF5
 658 004f 02       		.uleb128 0x2
 659 0050 08       		.byte	0x8
 660 0051 05       		.byte	0x5
 661 0052 0E020000 		.4byte	.LASF6
 662 0056 02       		.uleb128 0x2
 663 0057 08       		.byte	0x8
 664 0058 07       		.byte	0x7
 665 0059 81000000 		.4byte	.LASF7
 666 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 25


 667 005e 04       		.byte	0x4
 668 005f 05       		.byte	0x5
 669 0060 696E7400 		.ascii	"int\000"
 670 0064 02       		.uleb128 0x2
 671 0065 04       		.byte	0x4
 672 0066 07       		.byte	0x7
 673 0067 17010000 		.4byte	.LASF8
 674 006b 04       		.uleb128 0x4
 675 006c C7000000 		.4byte	.LASF9
 676 0070 03       		.byte	0x3
 677 0071 FB01     		.2byte	0x1fb
 678 0073 2C000000 		.4byte	0x2c
 679 0077 04       		.uleb128 0x4
 680 0078 F2000000 		.4byte	.LASF10
 681 007c 03       		.byte	0x3
 682 007d FC01     		.2byte	0x1fc
 683 007f 3A000000 		.4byte	0x3a
 684 0083 04       		.uleb128 0x4
 685 0084 F9000000 		.4byte	.LASF11
 686 0088 03       		.byte	0x3
 687 0089 FD01     		.2byte	0x1fd
 688 008b 48000000 		.4byte	0x48
 689 008f 02       		.uleb128 0x2
 690 0090 04       		.byte	0x4
 691 0091 04       		.byte	0x4
 692 0092 7B000000 		.4byte	.LASF12
 693 0096 02       		.uleb128 0x2
 694 0097 08       		.byte	0x8
 695 0098 04       		.byte	0x4
 696 0099 D9000000 		.4byte	.LASF13
 697 009d 02       		.uleb128 0x2
 698 009e 01       		.byte	0x1
 699 009f 08       		.byte	0x8
 700 00a0 26020000 		.4byte	.LASF14
 701 00a4 04       		.uleb128 0x4
 702 00a5 00000000 		.4byte	.LASF15
 703 00a9 03       		.byte	0x3
 704 00aa A602     		.2byte	0x2a6
 705 00ac B0000000 		.4byte	0xb0
 706 00b0 05       		.uleb128 0x5
 707 00b1 77000000 		.4byte	0x77
 708 00b5 04       		.uleb128 0x4
 709 00b6 06000000 		.4byte	.LASF16
 710 00ba 03       		.byte	0x3
 711 00bb A702     		.2byte	0x2a7
 712 00bd C1000000 		.4byte	0xc1
 713 00c1 05       		.uleb128 0x5
 714 00c2 83000000 		.4byte	0x83
 715 00c6 02       		.uleb128 0x2
 716 00c7 08       		.byte	0x8
 717 00c8 04       		.byte	0x4
 718 00c9 7A020000 		.4byte	.LASF17
 719 00cd 02       		.uleb128 0x2
 720 00ce 04       		.byte	0x4
 721 00cf 07       		.byte	0x7
 722 00d0 05020000 		.4byte	.LASF18
 723 00d4 06       		.uleb128 0x6
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 26


 724 00d5 25000000 		.4byte	.LASF19
 725 00d9 01       		.byte	0x1
 726 00da 21       		.byte	0x21
 727 00db 00000000 		.4byte	.LFB2
 728 00df 1C000000 		.4byte	.LFE2-.LFB2
 729 00e3 01       		.uleb128 0x1
 730 00e4 9C       		.byte	0x9c
 731 00e5 0B010000 		.4byte	0x10b
 732 00e9 07       		.uleb128 0x7
 733 00ea A6000000 		.4byte	.LASF21
 734 00ee 01       		.byte	0x1
 735 00ef 23       		.byte	0x23
 736 00f0 6B000000 		.4byte	0x6b
 737 00f4 00000000 		.4byte	.LLST0
 738 00f8 08       		.uleb128 0x8
 739 00f9 06000000 		.4byte	.LVL0
 740 00fd E9020000 		.4byte	0x2e9
 741 0101 08       		.uleb128 0x8
 742 0102 16000000 		.4byte	.LVL1
 743 0106 F4020000 		.4byte	0x2f4
 744 010a 00       		.byte	0
 745 010b 06       		.uleb128 0x6
 746 010c 42020000 		.4byte	.LASF20
 747 0110 01       		.byte	0x1
 748 0111 40       		.byte	0x40
 749 0112 00000000 		.4byte	.LFB3
 750 0116 A8000000 		.4byte	.LFE3-.LFB3
 751 011a 01       		.uleb128 0x1
 752 011b 9C       		.byte	0x9c
 753 011c 8D010000 		.4byte	0x18d
 754 0120 07       		.uleb128 0x7
 755 0121 A6000000 		.4byte	.LASF21
 756 0125 01       		.byte	0x1
 757 0126 42       		.byte	0x42
 758 0127 6B000000 		.4byte	0x6b
 759 012b 13000000 		.4byte	.LLST1
 760 012f 09       		.uleb128 0x9
 761 0130 2B020000 		.4byte	.LASF22
 762 0134 01       		.byte	0x1
 763 0135 44       		.byte	0x44
 764 0136 C1000000 		.4byte	0xc1
 765 013a 02       		.uleb128 0x2
 766 013b 91       		.byte	0x91
 767 013c 6C       		.sleb128 -20
 768 013d 07       		.uleb128 0x7
 769 013e 32000000 		.4byte	.LASF23
 770 0142 01       		.byte	0x1
 771 0143 4C       		.byte	0x4c
 772 0144 83000000 		.4byte	0x83
 773 0148 26000000 		.4byte	.LLST2
 774 014c 08       		.uleb128 0x8
 775 014d 08000000 		.4byte	.LVL3
 776 0151 E9020000 		.4byte	0x2e9
 777 0155 0A       		.uleb128 0xa
 778 0156 56000000 		.4byte	.LVL7
 779 015a FF020000 		.4byte	0x2ff
 780 015e 68010000 		.4byte	0x168
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 27


 781 0162 0B       		.uleb128 0xb
 782 0163 01       		.uleb128 0x1
 783 0164 50       		.byte	0x50
 784 0165 01       		.uleb128 0x1
 785 0166 32       		.byte	0x32
 786 0167 00       		.byte	0
 787 0168 0A       		.uleb128 0xa
 788 0169 6A000000 		.4byte	.LVL8
 789 016d 0A030000 		.4byte	0x30a
 790 0171 7C010000 		.4byte	0x17c
 791 0175 0B       		.uleb128 0xb
 792 0176 01       		.uleb128 0x1
 793 0177 50       		.byte	0x50
 794 0178 02       		.uleb128 0x2
 795 0179 08       		.byte	0x8
 796 017a 23       		.byte	0x23
 797 017b 00       		.byte	0
 798 017c 0C       		.uleb128 0xc
 799 017d 80000000 		.4byte	.LVL11
 800 0181 F4020000 		.4byte	0x2f4
 801 0185 0B       		.uleb128 0xb
 802 0186 01       		.uleb128 0x1
 803 0187 50       		.byte	0x50
 804 0188 02       		.uleb128 0x2
 805 0189 74       		.byte	0x74
 806 018a 00       		.sleb128 0
 807 018b 00       		.byte	0
 808 018c 00       		.byte	0
 809 018d 0D       		.uleb128 0xd
 810 018e 5D000000 		.4byte	.LASF37
 811 0192 02       		.byte	0x2
 812 0193 E3       		.byte	0xe3
 813 0194 03       		.byte	0x3
 814 0195 06       		.uleb128 0x6
 815 0196 4C000000 		.4byte	.LASF24
 816 019a 01       		.byte	0x1
 817 019b B8       		.byte	0xb8
 818 019c 00000000 		.4byte	.LFB4
 819 01a0 C0000000 		.4byte	.LFE4-.LFB4
 820 01a4 01       		.uleb128 0x1
 821 01a5 9C       		.byte	0x9c
 822 01a6 DB010000 		.4byte	0x1db
 823 01aa 07       		.uleb128 0x7
 824 01ab A6000000 		.4byte	.LASF21
 825 01af 01       		.byte	0x1
 826 01b0 BA       		.byte	0xba
 827 01b1 6B000000 		.4byte	0x6b
 828 01b5 50000000 		.4byte	.LLST3
 829 01b9 0E       		.uleb128 0xe
 830 01ba 8D010000 		.4byte	0x18d
 831 01be 06000000 		.4byte	.LBB4
 832 01c2 50000000 		.4byte	.LBE4-.LBB4
 833 01c6 01       		.byte	0x1
 834 01c7 C0       		.byte	0xc0
 835 01c8 08       		.uleb128 0x8
 836 01c9 06000000 		.4byte	.LVL13
 837 01cd E9020000 		.4byte	0x2e9
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 28


 838 01d1 08       		.uleb128 0x8
 839 01d2 8A000000 		.4byte	.LVL14
 840 01d6 F4020000 		.4byte	0x2f4
 841 01da 00       		.byte	0
 842 01db 0F       		.uleb128 0xf
 843 01dc 0C000000 		.4byte	.LASF25
 844 01e0 01       		.byte	0x1
 845 01e1 2001     		.2byte	0x120
 846 01e3 00000000 		.4byte	.LFB6
 847 01e7 34000000 		.4byte	.LFE6-.LFB6
 848 01eb 01       		.uleb128 0x1
 849 01ec 9C       		.byte	0x9c
 850 01ed 24020000 		.4byte	0x224
 851 01f1 10       		.uleb128 0x10
 852 01f2 58010000 		.4byte	.LASF38
 853 01f6 01       		.byte	0x1
 854 01f7 2001     		.2byte	0x120
 855 01f9 83000000 		.4byte	0x83
 856 01fd 63000000 		.4byte	.LLST4
 857 0201 11       		.uleb128 0x11
 858 0202 A6000000 		.4byte	.LASF21
 859 0206 01       		.byte	0x1
 860 0207 2201     		.2byte	0x122
 861 0209 6B000000 		.4byte	0x6b
 862 020d 8F000000 		.4byte	.LLST5
 863 0211 08       		.uleb128 0x8
 864 0212 08000000 		.4byte	.LVL16
 865 0216 E9020000 		.4byte	0x2e9
 866 021a 08       		.uleb128 0x8
 867 021b 28000000 		.4byte	.LVL17
 868 021f F4020000 		.4byte	0x2f4
 869 0223 00       		.byte	0
 870 0224 12       		.uleb128 0x12
 871 0225 61010000 		.4byte	.LASF39
 872 0229 01       		.byte	0x1
 873 022a 3C01     		.2byte	0x13c
 874 022c 83000000 		.4byte	0x83
 875 0230 00000000 		.4byte	.LFB7
 876 0234 28000000 		.4byte	.LFE7-.LFB7
 877 0238 01       		.uleb128 0x1
 878 0239 9C       		.byte	0x9c
 879 023a 4F020000 		.4byte	0x24f
 880 023e 11       		.uleb128 0x11
 881 023f 51010000 		.4byte	.LASF26
 882 0243 01       		.byte	0x1
 883 0244 3E01     		.2byte	0x13e
 884 0246 83000000 		.4byte	0x83
 885 024a A2000000 		.4byte	.LLST6
 886 024e 00       		.byte	0
 887 024f 0F       		.uleb128 0xf
 888 0250 92020000 		.4byte	.LASF27
 889 0254 01       		.byte	0x1
 890 0255 6601     		.2byte	0x166
 891 0257 00000000 		.4byte	.LFB8
 892 025b 38000000 		.4byte	.LFE8-.LFB8
 893 025f 01       		.uleb128 0x1
 894 0260 9C       		.byte	0x9c
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 29


 895 0261 88020000 		.4byte	0x288
 896 0265 11       		.uleb128 0x11
 897 0266 A6000000 		.4byte	.LASF21
 898 026a 01       		.byte	0x1
 899 026b 6801     		.2byte	0x168
 900 026d 6B000000 		.4byte	0x6b
 901 0271 E5000000 		.4byte	.LLST7
 902 0275 08       		.uleb128 0x8
 903 0276 06000000 		.4byte	.LVL24
 904 027a E9020000 		.4byte	0x2e9
 905 027e 08       		.uleb128 0x8
 906 027f 28000000 		.4byte	.LVL25
 907 0283 F4020000 		.4byte	0x2f4
 908 0287 00       		.byte	0
 909 0288 06       		.uleb128 0x6
 910 0289 CD000000 		.4byte	.LASF28
 911 028d 01       		.byte	0x1
 912 028e F3       		.byte	0xf3
 913 028f 00000000 		.4byte	.LFB5
 914 0293 30000000 		.4byte	.LFE5-.LFB5
 915 0297 01       		.uleb128 0x1
 916 0298 9C       		.byte	0x9c
 917 0299 B0020000 		.4byte	0x2b0
 918 029d 08       		.uleb128 0x8
 919 029e 06000000 		.4byte	.LVL26
 920 02a2 E9020000 		.4byte	0x2e9
 921 02a6 08       		.uleb128 0x8
 922 02a7 1A000000 		.4byte	.LVL27
 923 02ab 4F020000 		.4byte	0x24f
 924 02af 00       		.byte	0
 925 02b0 0F       		.uleb128 0xf
 926 02b1 E0000000 		.4byte	.LASF29
 927 02b5 01       		.byte	0x1
 928 02b6 9601     		.2byte	0x196
 929 02b8 00000000 		.4byte	.LFB9
 930 02bc 30000000 		.4byte	.LFE9-.LFB9
 931 02c0 01       		.uleb128 0x1
 932 02c1 9C       		.byte	0x9c
 933 02c2 E9020000 		.4byte	0x2e9
 934 02c6 11       		.uleb128 0x11
 935 02c7 A6000000 		.4byte	.LASF21
 936 02cb 01       		.byte	0x1
 937 02cc 9801     		.2byte	0x198
 938 02ce 6B000000 		.4byte	0x6b
 939 02d2 F8000000 		.4byte	.LLST8
 940 02d6 08       		.uleb128 0x8
 941 02d7 06000000 		.4byte	.LVL28
 942 02db E9020000 		.4byte	0x2e9
 943 02df 08       		.uleb128 0x8
 944 02e0 24000000 		.4byte	.LVL29
 945 02e4 F4020000 		.4byte	0x2f4
 946 02e8 00       		.byte	0
 947 02e9 13       		.uleb128 0x13
 948 02ea 00010000 		.4byte	.LASF30
 949 02ee 00010000 		.4byte	.LASF30
 950 02f2 04       		.byte	0x4
 951 02f3 F8       		.byte	0xf8
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 30


 952 02f4 13       		.uleb128 0x13
 953 02f5 24010000 		.4byte	.LASF31
 954 02f9 24010000 		.4byte	.LASF31
 955 02fd 04       		.byte	0x4
 956 02fe F9       		.byte	0xf9
 957 02ff 13       		.uleb128 0x13
 958 0300 3A010000 		.4byte	.LASF32
 959 0304 3A010000 		.4byte	.LASF32
 960 0308 04       		.byte	0x4
 961 0309 6B       		.byte	0x6b
 962 030a 13       		.uleb128 0x13
 963 030b 1C020000 		.4byte	.LASF33
 964 030f 1C020000 		.4byte	.LASF33
 965 0313 04       		.byte	0x4
 966 0314 ED       		.byte	0xed
 967 0315 00       		.byte	0
 968              		.section	.debug_abbrev,"",%progbits
 969              	.Ldebug_abbrev0:
 970 0000 01       		.uleb128 0x1
 971 0001 11       		.uleb128 0x11
 972 0002 01       		.byte	0x1
 973 0003 25       		.uleb128 0x25
 974 0004 0E       		.uleb128 0xe
 975 0005 13       		.uleb128 0x13
 976 0006 0B       		.uleb128 0xb
 977 0007 03       		.uleb128 0x3
 978 0008 0E       		.uleb128 0xe
 979 0009 1B       		.uleb128 0x1b
 980 000a 0E       		.uleb128 0xe
 981 000b 55       		.uleb128 0x55
 982 000c 17       		.uleb128 0x17
 983 000d 11       		.uleb128 0x11
 984 000e 01       		.uleb128 0x1
 985 000f 10       		.uleb128 0x10
 986 0010 17       		.uleb128 0x17
 987 0011 00       		.byte	0
 988 0012 00       		.byte	0
 989 0013 02       		.uleb128 0x2
 990 0014 24       		.uleb128 0x24
 991 0015 00       		.byte	0
 992 0016 0B       		.uleb128 0xb
 993 0017 0B       		.uleb128 0xb
 994 0018 3E       		.uleb128 0x3e
 995 0019 0B       		.uleb128 0xb
 996 001a 03       		.uleb128 0x3
 997 001b 0E       		.uleb128 0xe
 998 001c 00       		.byte	0
 999 001d 00       		.byte	0
 1000 001e 03       		.uleb128 0x3
 1001 001f 24       		.uleb128 0x24
 1002 0020 00       		.byte	0
 1003 0021 0B       		.uleb128 0xb
 1004 0022 0B       		.uleb128 0xb
 1005 0023 3E       		.uleb128 0x3e
 1006 0024 0B       		.uleb128 0xb
 1007 0025 03       		.uleb128 0x3
 1008 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 31


 1009 0027 00       		.byte	0
 1010 0028 00       		.byte	0
 1011 0029 04       		.uleb128 0x4
 1012 002a 16       		.uleb128 0x16
 1013 002b 00       		.byte	0
 1014 002c 03       		.uleb128 0x3
 1015 002d 0E       		.uleb128 0xe
 1016 002e 3A       		.uleb128 0x3a
 1017 002f 0B       		.uleb128 0xb
 1018 0030 3B       		.uleb128 0x3b
 1019 0031 05       		.uleb128 0x5
 1020 0032 49       		.uleb128 0x49
 1021 0033 13       		.uleb128 0x13
 1022 0034 00       		.byte	0
 1023 0035 00       		.byte	0
 1024 0036 05       		.uleb128 0x5
 1025 0037 35       		.uleb128 0x35
 1026 0038 00       		.byte	0
 1027 0039 49       		.uleb128 0x49
 1028 003a 13       		.uleb128 0x13
 1029 003b 00       		.byte	0
 1030 003c 00       		.byte	0
 1031 003d 06       		.uleb128 0x6
 1032 003e 2E       		.uleb128 0x2e
 1033 003f 01       		.byte	0x1
 1034 0040 3F       		.uleb128 0x3f
 1035 0041 19       		.uleb128 0x19
 1036 0042 03       		.uleb128 0x3
 1037 0043 0E       		.uleb128 0xe
 1038 0044 3A       		.uleb128 0x3a
 1039 0045 0B       		.uleb128 0xb
 1040 0046 3B       		.uleb128 0x3b
 1041 0047 0B       		.uleb128 0xb
 1042 0048 27       		.uleb128 0x27
 1043 0049 19       		.uleb128 0x19
 1044 004a 11       		.uleb128 0x11
 1045 004b 01       		.uleb128 0x1
 1046 004c 12       		.uleb128 0x12
 1047 004d 06       		.uleb128 0x6
 1048 004e 40       		.uleb128 0x40
 1049 004f 18       		.uleb128 0x18
 1050 0050 9742     		.uleb128 0x2117
 1051 0052 19       		.uleb128 0x19
 1052 0053 01       		.uleb128 0x1
 1053 0054 13       		.uleb128 0x13
 1054 0055 00       		.byte	0
 1055 0056 00       		.byte	0
 1056 0057 07       		.uleb128 0x7
 1057 0058 34       		.uleb128 0x34
 1058 0059 00       		.byte	0
 1059 005a 03       		.uleb128 0x3
 1060 005b 0E       		.uleb128 0xe
 1061 005c 3A       		.uleb128 0x3a
 1062 005d 0B       		.uleb128 0xb
 1063 005e 3B       		.uleb128 0x3b
 1064 005f 0B       		.uleb128 0xb
 1065 0060 49       		.uleb128 0x49
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 32


 1066 0061 13       		.uleb128 0x13
 1067 0062 02       		.uleb128 0x2
 1068 0063 17       		.uleb128 0x17
 1069 0064 00       		.byte	0
 1070 0065 00       		.byte	0
 1071 0066 08       		.uleb128 0x8
 1072 0067 898201   		.uleb128 0x4109
 1073 006a 00       		.byte	0
 1074 006b 11       		.uleb128 0x11
 1075 006c 01       		.uleb128 0x1
 1076 006d 31       		.uleb128 0x31
 1077 006e 13       		.uleb128 0x13
 1078 006f 00       		.byte	0
 1079 0070 00       		.byte	0
 1080 0071 09       		.uleb128 0x9
 1081 0072 34       		.uleb128 0x34
 1082 0073 00       		.byte	0
 1083 0074 03       		.uleb128 0x3
 1084 0075 0E       		.uleb128 0xe
 1085 0076 3A       		.uleb128 0x3a
 1086 0077 0B       		.uleb128 0xb
 1087 0078 3B       		.uleb128 0x3b
 1088 0079 0B       		.uleb128 0xb
 1089 007a 49       		.uleb128 0x49
 1090 007b 13       		.uleb128 0x13
 1091 007c 02       		.uleb128 0x2
 1092 007d 18       		.uleb128 0x18
 1093 007e 00       		.byte	0
 1094 007f 00       		.byte	0
 1095 0080 0A       		.uleb128 0xa
 1096 0081 898201   		.uleb128 0x4109
 1097 0084 01       		.byte	0x1
 1098 0085 11       		.uleb128 0x11
 1099 0086 01       		.uleb128 0x1
 1100 0087 31       		.uleb128 0x31
 1101 0088 13       		.uleb128 0x13
 1102 0089 01       		.uleb128 0x1
 1103 008a 13       		.uleb128 0x13
 1104 008b 00       		.byte	0
 1105 008c 00       		.byte	0
 1106 008d 0B       		.uleb128 0xb
 1107 008e 8A8201   		.uleb128 0x410a
 1108 0091 00       		.byte	0
 1109 0092 02       		.uleb128 0x2
 1110 0093 18       		.uleb128 0x18
 1111 0094 9142     		.uleb128 0x2111
 1112 0096 18       		.uleb128 0x18
 1113 0097 00       		.byte	0
 1114 0098 00       		.byte	0
 1115 0099 0C       		.uleb128 0xc
 1116 009a 898201   		.uleb128 0x4109
 1117 009d 01       		.byte	0x1
 1118 009e 11       		.uleb128 0x11
 1119 009f 01       		.uleb128 0x1
 1120 00a0 31       		.uleb128 0x31
 1121 00a1 13       		.uleb128 0x13
 1122 00a2 00       		.byte	0
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 33


 1123 00a3 00       		.byte	0
 1124 00a4 0D       		.uleb128 0xd
 1125 00a5 2E       		.uleb128 0x2e
 1126 00a6 00       		.byte	0
 1127 00a7 03       		.uleb128 0x3
 1128 00a8 0E       		.uleb128 0xe
 1129 00a9 3A       		.uleb128 0x3a
 1130 00aa 0B       		.uleb128 0xb
 1131 00ab 3B       		.uleb128 0x3b
 1132 00ac 0B       		.uleb128 0xb
 1133 00ad 27       		.uleb128 0x27
 1134 00ae 19       		.uleb128 0x19
 1135 00af 20       		.uleb128 0x20
 1136 00b0 0B       		.uleb128 0xb
 1137 00b1 00       		.byte	0
 1138 00b2 00       		.byte	0
 1139 00b3 0E       		.uleb128 0xe
 1140 00b4 1D       		.uleb128 0x1d
 1141 00b5 00       		.byte	0
 1142 00b6 31       		.uleb128 0x31
 1143 00b7 13       		.uleb128 0x13
 1144 00b8 11       		.uleb128 0x11
 1145 00b9 01       		.uleb128 0x1
 1146 00ba 12       		.uleb128 0x12
 1147 00bb 06       		.uleb128 0x6
 1148 00bc 58       		.uleb128 0x58
 1149 00bd 0B       		.uleb128 0xb
 1150 00be 59       		.uleb128 0x59
 1151 00bf 0B       		.uleb128 0xb
 1152 00c0 00       		.byte	0
 1153 00c1 00       		.byte	0
 1154 00c2 0F       		.uleb128 0xf
 1155 00c3 2E       		.uleb128 0x2e
 1156 00c4 01       		.byte	0x1
 1157 00c5 3F       		.uleb128 0x3f
 1158 00c6 19       		.uleb128 0x19
 1159 00c7 03       		.uleb128 0x3
 1160 00c8 0E       		.uleb128 0xe
 1161 00c9 3A       		.uleb128 0x3a
 1162 00ca 0B       		.uleb128 0xb
 1163 00cb 3B       		.uleb128 0x3b
 1164 00cc 05       		.uleb128 0x5
 1165 00cd 27       		.uleb128 0x27
 1166 00ce 19       		.uleb128 0x19
 1167 00cf 11       		.uleb128 0x11
 1168 00d0 01       		.uleb128 0x1
 1169 00d1 12       		.uleb128 0x12
 1170 00d2 06       		.uleb128 0x6
 1171 00d3 40       		.uleb128 0x40
 1172 00d4 18       		.uleb128 0x18
 1173 00d5 9742     		.uleb128 0x2117
 1174 00d7 19       		.uleb128 0x19
 1175 00d8 01       		.uleb128 0x1
 1176 00d9 13       		.uleb128 0x13
 1177 00da 00       		.byte	0
 1178 00db 00       		.byte	0
 1179 00dc 10       		.uleb128 0x10
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 34


 1180 00dd 05       		.uleb128 0x5
 1181 00de 00       		.byte	0
 1182 00df 03       		.uleb128 0x3
 1183 00e0 0E       		.uleb128 0xe
 1184 00e1 3A       		.uleb128 0x3a
 1185 00e2 0B       		.uleb128 0xb
 1186 00e3 3B       		.uleb128 0x3b
 1187 00e4 05       		.uleb128 0x5
 1188 00e5 49       		.uleb128 0x49
 1189 00e6 13       		.uleb128 0x13
 1190 00e7 02       		.uleb128 0x2
 1191 00e8 17       		.uleb128 0x17
 1192 00e9 00       		.byte	0
 1193 00ea 00       		.byte	0
 1194 00eb 11       		.uleb128 0x11
 1195 00ec 34       		.uleb128 0x34
 1196 00ed 00       		.byte	0
 1197 00ee 03       		.uleb128 0x3
 1198 00ef 0E       		.uleb128 0xe
 1199 00f0 3A       		.uleb128 0x3a
 1200 00f1 0B       		.uleb128 0xb
 1201 00f2 3B       		.uleb128 0x3b
 1202 00f3 05       		.uleb128 0x5
 1203 00f4 49       		.uleb128 0x49
 1204 00f5 13       		.uleb128 0x13
 1205 00f6 02       		.uleb128 0x2
 1206 00f7 17       		.uleb128 0x17
 1207 00f8 00       		.byte	0
 1208 00f9 00       		.byte	0
 1209 00fa 12       		.uleb128 0x12
 1210 00fb 2E       		.uleb128 0x2e
 1211 00fc 01       		.byte	0x1
 1212 00fd 3F       		.uleb128 0x3f
 1213 00fe 19       		.uleb128 0x19
 1214 00ff 03       		.uleb128 0x3
 1215 0100 0E       		.uleb128 0xe
 1216 0101 3A       		.uleb128 0x3a
 1217 0102 0B       		.uleb128 0xb
 1218 0103 3B       		.uleb128 0x3b
 1219 0104 05       		.uleb128 0x5
 1220 0105 27       		.uleb128 0x27
 1221 0106 19       		.uleb128 0x19
 1222 0107 49       		.uleb128 0x49
 1223 0108 13       		.uleb128 0x13
 1224 0109 11       		.uleb128 0x11
 1225 010a 01       		.uleb128 0x1
 1226 010b 12       		.uleb128 0x12
 1227 010c 06       		.uleb128 0x6
 1228 010d 40       		.uleb128 0x40
 1229 010e 18       		.uleb128 0x18
 1230 010f 9742     		.uleb128 0x2117
 1231 0111 19       		.uleb128 0x19
 1232 0112 01       		.uleb128 0x1
 1233 0113 13       		.uleb128 0x13
 1234 0114 00       		.byte	0
 1235 0115 00       		.byte	0
 1236 0116 13       		.uleb128 0x13
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 35


 1237 0117 2E       		.uleb128 0x2e
 1238 0118 00       		.byte	0
 1239 0119 3F       		.uleb128 0x3f
 1240 011a 19       		.uleb128 0x19
 1241 011b 3C       		.uleb128 0x3c
 1242 011c 19       		.uleb128 0x19
 1243 011d 6E       		.uleb128 0x6e
 1244 011e 0E       		.uleb128 0xe
 1245 011f 03       		.uleb128 0x3
 1246 0120 0E       		.uleb128 0xe
 1247 0121 3A       		.uleb128 0x3a
 1248 0122 0B       		.uleb128 0xb
 1249 0123 3B       		.uleb128 0x3b
 1250 0124 0B       		.uleb128 0xb
 1251 0125 00       		.byte	0
 1252 0126 00       		.byte	0
 1253 0127 00       		.byte	0
 1254              		.section	.debug_loc,"",%progbits
 1255              	.Ldebug_loc0:
 1256              	.LLST0:
 1257 0000 06000000 		.4byte	.LVL0
 1258 0004 15000000 		.4byte	.LVL1-1
 1259 0008 0100     		.2byte	0x1
 1260 000a 50       		.byte	0x50
 1261 000b 00000000 		.4byte	0
 1262 000f 00000000 		.4byte	0
 1263              	.LLST1:
 1264 0013 0A000000 		.4byte	.LVL4
 1265 0017 82000000 		.4byte	.LVL12
 1266 001b 0100     		.2byte	0x1
 1267 001d 54       		.byte	0x54
 1268 001e 00000000 		.4byte	0
 1269 0022 00000000 		.4byte	0
 1270              	.LLST2:
 1271 0026 04000000 		.4byte	.LVL2
 1272 002a 24000000 		.4byte	.LVL5
 1273 002e 0200     		.2byte	0x2
 1274 0030 30       		.byte	0x30
 1275 0031 9F       		.byte	0x9f
 1276 0032 24000000 		.4byte	.LVL5
 1277 0036 36000000 		.4byte	.LVL6
 1278 003a 0100     		.2byte	0x1
 1279 003c 51       		.byte	0x51
 1280 003d 72000000 		.4byte	.LVL9
 1281 0041 78000000 		.4byte	.LVL10
 1282 0045 0100     		.2byte	0x1
 1283 0047 53       		.byte	0x53
 1284 0048 00000000 		.4byte	0
 1285 004c 00000000 		.4byte	0
 1286              	.LLST3:
 1287 0050 06000000 		.4byte	.LVL13
 1288 0054 89000000 		.4byte	.LVL14-1
 1289 0058 0100     		.2byte	0x1
 1290 005a 50       		.byte	0x50
 1291 005b 00000000 		.4byte	0
 1292 005f 00000000 		.4byte	0
 1293              	.LLST4:
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 36


 1294 0063 00000000 		.4byte	.LVL15
 1295 0067 07000000 		.4byte	.LVL16-1
 1296 006b 0100     		.2byte	0x1
 1297 006d 50       		.byte	0x50
 1298 006e 07000000 		.4byte	.LVL16-1
 1299 0072 28000000 		.4byte	.LVL18
 1300 0076 0100     		.2byte	0x1
 1301 0078 54       		.byte	0x54
 1302 0079 28000000 		.4byte	.LVL18
 1303 007d 34000000 		.4byte	.LFE6
 1304 0081 0400     		.2byte	0x4
 1305 0083 F3       		.byte	0xf3
 1306 0084 01       		.uleb128 0x1
 1307 0085 50       		.byte	0x50
 1308 0086 9F       		.byte	0x9f
 1309 0087 00000000 		.4byte	0
 1310 008b 00000000 		.4byte	0
 1311              	.LLST5:
 1312 008f 08000000 		.4byte	.LVL16
 1313 0093 27000000 		.4byte	.LVL17-1
 1314 0097 0100     		.2byte	0x1
 1315 0099 50       		.byte	0x50
 1316 009a 00000000 		.4byte	0
 1317 009e 00000000 		.4byte	0
 1318              	.LLST6:
 1319 00a2 00000000 		.4byte	.LVL19
 1320 00a6 18000000 		.4byte	.LVL20
 1321 00aa 0200     		.2byte	0x2
 1322 00ac 30       		.byte	0x30
 1323 00ad 9F       		.byte	0x9f
 1324 00ae 18000000 		.4byte	.LVL20
 1325 00b2 1C000000 		.4byte	.LVL21
 1326 00b6 0200     		.2byte	0x2
 1327 00b8 32       		.byte	0x32
 1328 00b9 9F       		.byte	0x9f
 1329 00ba 1C000000 		.4byte	.LVL21
 1330 00be 20000000 		.4byte	.LVL22
 1331 00c2 0200     		.2byte	0x2
 1332 00c4 33       		.byte	0x33
 1333 00c5 9F       		.byte	0x9f
 1334 00c6 20000000 		.4byte	.LVL22
 1335 00ca 22000000 		.4byte	.LVL23
 1336 00ce 0200     		.2byte	0x2
 1337 00d0 30       		.byte	0x30
 1338 00d1 9F       		.byte	0x9f
 1339 00d2 22000000 		.4byte	.LVL23
 1340 00d6 28000000 		.4byte	.LFE7
 1341 00da 0100     		.2byte	0x1
 1342 00dc 50       		.byte	0x50
 1343 00dd 00000000 		.4byte	0
 1344 00e1 00000000 		.4byte	0
 1345              	.LLST7:
 1346 00e5 06000000 		.4byte	.LVL24
 1347 00e9 27000000 		.4byte	.LVL25-1
 1348 00ed 0100     		.2byte	0x1
 1349 00ef 50       		.byte	0x50
 1350 00f0 00000000 		.4byte	0
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 37


 1351 00f4 00000000 		.4byte	0
 1352              	.LLST8:
 1353 00f8 06000000 		.4byte	.LVL28
 1354 00fc 23000000 		.4byte	.LVL29-1
 1355 0100 0100     		.2byte	0x1
 1356 0102 50       		.byte	0x50
 1357 0103 00000000 		.4byte	0
 1358 0107 00000000 		.4byte	0
 1359              		.section	.debug_aranges,"",%progbits
 1360 0000 54000000 		.4byte	0x54
 1361 0004 0200     		.2byte	0x2
 1362 0006 00000000 		.4byte	.Ldebug_info0
 1363 000a 04       		.byte	0x4
 1364 000b 00       		.byte	0
 1365 000c 0000     		.2byte	0
 1366 000e 0000     		.2byte	0
 1367 0010 00000000 		.4byte	.LFB2
 1368 0014 1C000000 		.4byte	.LFE2-.LFB2
 1369 0018 00000000 		.4byte	.LFB3
 1370 001c A8000000 		.4byte	.LFE3-.LFB3
 1371 0020 00000000 		.4byte	.LFB4
 1372 0024 C0000000 		.4byte	.LFE4-.LFB4
 1373 0028 00000000 		.4byte	.LFB6
 1374 002c 34000000 		.4byte	.LFE6-.LFB6
 1375 0030 00000000 		.4byte	.LFB7
 1376 0034 28000000 		.4byte	.LFE7-.LFB7
 1377 0038 00000000 		.4byte	.LFB8
 1378 003c 38000000 		.4byte	.LFE8-.LFB8
 1379 0040 00000000 		.4byte	.LFB5
 1380 0044 30000000 		.4byte	.LFE5-.LFB5
 1381 0048 00000000 		.4byte	.LFB9
 1382 004c 30000000 		.4byte	.LFE9-.LFB9
 1383 0050 00000000 		.4byte	0
 1384 0054 00000000 		.4byte	0
 1385              		.section	.debug_ranges,"",%progbits
 1386              	.Ldebug_ranges0:
 1387 0000 00000000 		.4byte	.LFB2
 1388 0004 1C000000 		.4byte	.LFE2
 1389 0008 00000000 		.4byte	.LFB3
 1390 000c A8000000 		.4byte	.LFE3
 1391 0010 00000000 		.4byte	.LFB4
 1392 0014 C0000000 		.4byte	.LFE4
 1393 0018 00000000 		.4byte	.LFB6
 1394 001c 34000000 		.4byte	.LFE6
 1395 0020 00000000 		.4byte	.LFB7
 1396 0024 28000000 		.4byte	.LFE7
 1397 0028 00000000 		.4byte	.LFB8
 1398 002c 38000000 		.4byte	.LFE8
 1399 0030 00000000 		.4byte	.LFB5
 1400 0034 30000000 		.4byte	.LFE5
 1401 0038 00000000 		.4byte	.LFB9
 1402 003c 30000000 		.4byte	.LFE9
 1403 0040 00000000 		.4byte	0
 1404 0044 00000000 		.4byte	0
 1405              		.section	.debug_line,"",%progbits
 1406              	.Ldebug_line0:
 1407 0000 4E010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 38


 1407      02005600 
 1407      00000201 
 1407      FB0E0D00 
 1407      01010101 
 1408              	.LASF15:
 1409 0000 72656731 		.ascii	"reg16\000"
 1409      3600
 1410              	.LASF16:
 1411 0006 72656733 		.ascii	"reg32\000"
 1411      3200
 1412              	.LASF25:
 1413 000c 43795379 		.ascii	"CySysPmSetWakeupPolarity\000"
 1413      73506D53 
 1413      65745761 
 1413      6B657570 
 1413      506F6C61 
 1414              	.LASF19:
 1415 0025 43795379 		.ascii	"CySysPmSleep\000"
 1415      73506D53 
 1415      6C656570 
 1415      00
 1416              	.LASF23:
 1417 0032 72656754 		.ascii	"regTmp\000"
 1417      6D7000
 1418              	.LASF3:
 1419 0039 73686F72 		.ascii	"short unsigned int\000"
 1419      7420756E 
 1419      7369676E 
 1419      65642069 
 1419      6E7400
 1420              	.LASF24:
 1421 004c 43795379 		.ascii	"CySysPmHibernate\000"
 1421      73506D48 
 1421      69626572 
 1421      6E617465 
 1421      00
 1422              	.LASF37:
 1423 005d 43795379 		.ascii	"CySysPmHibPinsDisableInputBuf\000"
 1423      73506D48 
 1423      69625069 
 1423      6E734469 
 1423      7361626C 
 1424              	.LASF12:
 1425 007b 666C6F61 		.ascii	"float\000"
 1425      7400
 1426              	.LASF7:
 1427 0081 6C6F6E67 		.ascii	"long long unsigned int\000"
 1427      206C6F6E 
 1427      6720756E 
 1427      7369676E 
 1427      65642069 
 1428              	.LASF1:
 1429 0098 756E7369 		.ascii	"unsigned char\000"
 1429      676E6564 
 1429      20636861 
 1429      7200
 1430              	.LASF21:
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 39


 1431 00a6 696E7465 		.ascii	"interruptState\000"
 1431      72727570 
 1431      74537461 
 1431      746500
 1432              	.LASF5:
 1433 00b5 6C6F6E67 		.ascii	"long unsigned int\000"
 1433      20756E73 
 1433      69676E65 
 1433      6420696E 
 1433      7400
 1434              	.LASF9:
 1435 00c7 75696E74 		.ascii	"uint8\000"
 1435      3800
 1436              	.LASF28:
 1437 00cd 43795379 		.ascii	"CySysPmStop\000"
 1437      73506D53 
 1437      746F7000 
 1438              	.LASF13:
 1439 00d9 646F7562 		.ascii	"double\000"
 1439      6C6500
 1440              	.LASF29:
 1441 00e0 43795379 		.ascii	"CySysPmUnfreezeIo\000"
 1441      73506D55 
 1441      6E667265 
 1441      657A6549 
 1441      6F00
 1442              	.LASF10:
 1443 00f2 75696E74 		.ascii	"uint16\000"
 1443      313600
 1444              	.LASF11:
 1445 00f9 75696E74 		.ascii	"uint32\000"
 1445      333200
 1446              	.LASF30:
 1447 0100 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1447      74657243 
 1447      72697469 
 1447      63616C53 
 1447      65637469 
 1448              	.LASF8:
 1449 0117 756E7369 		.ascii	"unsigned int\000"
 1449      676E6564 
 1449      20696E74 
 1449      00
 1450              	.LASF31:
 1451 0124 43794578 		.ascii	"CyExitCriticalSection\000"
 1451      69744372 
 1451      69746963 
 1451      616C5365 
 1451      6374696F 
 1452              	.LASF32:
 1453 013a 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 1453      73436C6B 
 1453      57726974 
 1453      65537973 
 1453      636C6B44 
 1454              	.LASF26:
 1455 0151 72656173 		.ascii	"reason\000"
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 40


 1455      6F6E00
 1456              	.LASF38:
 1457 0158 706F6C61 		.ascii	"polarity\000"
 1457      72697479 
 1457      00
 1458              	.LASF39:
 1459 0161 43795379 		.ascii	"CySysPmGetResetReason\000"
 1459      73506D47 
 1459      65745265 
 1459      73657452 
 1459      6561736F 
 1460              	.LASF34:
 1461 0177 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1461      43313120 
 1461      352E342E 
 1461      31203230 
 1461      31363036 
 1462 01aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1462      20726576 
 1462      6973696F 
 1462      6E203233 
 1462      37373135 
 1463 01dd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1463      66756E63 
 1463      74696F6E 
 1463      2D736563 
 1463      74696F6E 
 1464              	.LASF18:
 1465 0205 73697A65 		.ascii	"sizetype\000"
 1465      74797065 
 1465      00
 1466              	.LASF6:
 1467 020e 6C6F6E67 		.ascii	"long long int\000"
 1467      206C6F6E 
 1467      6720696E 
 1467      7400
 1468              	.LASF33:
 1469 021c 43794465 		.ascii	"CyDelayUs\000"
 1469      6C617955 
 1469      7300
 1470              	.LASF14:
 1471 0226 63686172 		.ascii	"char\000"
 1471      00
 1472              	.LASF22:
 1473 022b 636C6B53 		.ascii	"clkSelectReg\000"
 1473      656C6563 
 1473      74526567 
 1473      00
 1474              	.LASF2:
 1475 0238 73686F72 		.ascii	"short int\000"
 1475      7420696E 
 1475      7400
 1476              	.LASF20:
 1477 0242 43795379 		.ascii	"CySysPmDeepSleep\000"
 1477      73506D44 
 1477      65657053 
 1477      6C656570 
ARM GAS  C:\Users\DAVISS~1\AppData\Local\Temp\ccJanc9l.s 			page 41


 1477      00
 1478              	.LASF4:
 1479 0253 6C6F6E67 		.ascii	"long int\000"
 1479      20696E74 
 1479      00
 1480              	.LASF35:
 1481 025c 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
 1481      72617465 
 1481      645F536F 
 1481      75726365 
 1481      5C50536F 
 1482              	.LASF17:
 1483 027a 6C6F6E67 		.ascii	"long double\000"
 1483      20646F75 
 1483      626C6500 
 1484              	.LASF0:
 1485 0286 7369676E 		.ascii	"signed char\000"
 1485      65642063 
 1485      68617200 
 1486              	.LASF27:
 1487 0292 43795379 		.ascii	"CySysPmFreezeIo\000"
 1487      73506D46 
 1487      7265657A 
 1487      65496F00 
 1488              	.LASF36:
 1489 02a2 433A5C55 		.ascii	"C:\\Users\\Davis Sauer\\Documents\\PSoC Creator\\Hu"
 1489      73657273 
 1489      5C446176 
 1489      69732053 
 1489      61756572 
 1490 02d0 736B7920 		.ascii	"sky Robotics\\CAN Tester.cydsn\000"
 1490      526F626F 
 1490      74696373 
 1490      5C43414E 
 1490      20546573 
 1491              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
